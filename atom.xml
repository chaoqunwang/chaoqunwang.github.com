<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[超群的博客]]></title>
  <link href="http://www.wangchaoqun.com/atom.xml" rel="self"/>
  <link href="http://www.wangchaoqun.com/"/>
  <updated>2014-01-17T14:11:16+08:00</updated>
  <id>http://www.wangchaoqun.com/</id>
  <author>
    <name><![CDATA[wang chaoqun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[转]Code Kata：编码套路]]></title>
    <link href="http://www.wangchaoqun.com/blog/2013/12/03/zhuan-code-kata-bian-ma-tao-lu/"/>
    <updated>2013-12-03T10:39:05+08:00</updated>
    <id>http://www.wangchaoqun.com/blog/2013/12/03/zhuan-code-kata-bian-ma-tao-lu</id>
    <content type="html"><![CDATA[<p><a href="http://blog.csdn.net/happydeer/article/details/17023229" target="_blank">来自happydeer</a><br/>
[正文]
最近，我大量阅读了Steve Yegge的文章。其中有一篇叫“Practicing Programming”（练习编程），写成于2005年，读后令我惊讶不已：</p>

<p>与你所相信的恰恰相反，单纯地每天埋头于工作并不能算是真正意义上的锻炼——参加会议并不能锻炼你的人际交往能力；回复邮件并不能提高你的打字水平。你必须定期留出时间，集中锻炼，这样才能把事情做得更好。<!--more--></p>

<p>我认识很多杰出的程序员——这是在亚马逊工作最好的额外“福利”之一。如果仔细观察他们，你会发现他们时时都在锻炼。他们已经很优秀了，但他们仍然不忘锻炼。他们锻炼的方法林林总总，而我在这篇文章中只会介绍其中的几种。</p>

<p>据我了解，这些杰出程序员之所以如此成功，就是因为他们一直在锻炼。完美的身材要靠定期的锻炼才能获得，而且必须坚持锻炼才能保持，否则身材就会走形。对于编程和软件工程来说，道理是一样的。</p>

<p>这是一个重要的区别——我每天都开车去上班，但我的驾驶水平远远不如专业车手；类似的情况，天天编程可能并不足以使你成为一名专业的程序员。那么，什么才能把一个普通人变成一名专业车手或者专业程序员呢？你需要锻炼什么呢？</p>

<p>答案就在《科学美国人》的一篇名为“The Expert Mind”（专家思维）的文章里：</p>

<p>爱立信提出，重要的并不是经验本身，而是“努力的学习”，也就是要不断地挑战自身能力之外的东西。一些狂热的爱好者花费了大量的时间去下棋、打高尔夫球或者玩乐器，但他们可能始终停留在业余水平上，而一个训练有素的学生却可以在相对较短的时间里超越他们，原因就在这里。值得注意的是，在提高水平方面，花费在下棋上的大量时间（即使参加各种比赛）似乎还是比不过专门的训练来得更为有效。训练的主要价值在于发现弱点，并有针对性地进行提高。</p>

<p>“努力的学习”意味着，要常常去处理那些刚好在你能力极限上的问题，也就是那些对你来说有很大可能失败的事情。如果不经历一些失败的话，你可能就不会成长。你必须不断地挑战自我，超越自己的极限。</p>

<p>那样的挑战有时会在工作中碰到，但也未必。将锻炼从职业工作中分离出来，这在编程领域常被人称为“编码套路”（Code Kata）。</p>

<p>Code Kata的概念是由David Thomas提出的，他是《程序员修炼之道：从小工到专家》的作者之一。这个概念主要指的是，针对某一种特定技术或技能进行重复性的练习，从而将其熟练掌握。——译者注</p>

<p>所谓套路，就是一系列的招式。这个概念借鉴于武术。</p>

<p>如果你想要看一些编码套路的例子（也就是努力学习和磨练编程技能的方法），SteveYegge的文章里倒是提出了一些不错的建议。他把它们称作为“实践演练”：</p>

<pre><code>1.     写一份自己的简历。把自己所有的相关技能都罗列出来，然后把那些在100年后还用得到的标出来。给每个技能打分，满分为10分。

2.     罗列出你所景仰的程序员。尽量包括那些与你一起工作的人，因为你会在工作中从他们身上获取一些技能。记录下他们身上的1 ~ 2个闪光点，也就是你希望自己有所提高的方面。

3.     查看维基百科上的“计算机科学”栏目，找到“计算机领域先驱者”这个分类，从这个列表中挑选一个人，阅读他的事迹，并且在阅读时打开任何你感兴趣的链接。

4.     花20分钟通读别人的代码。读出色的代码和读糟糕的代码都是有益的，两者都要读，轮流切换。如果你无法感觉出它们之间的区别，可以求助于一位你尊敬的程序员，让他给你展示一下什么是出色的代码、什么是糟糕的代码。把你读过的代码给别人也看看，问问他们的看法。

5.     罗列出你最喜欢的10个编程工具——那些你觉得你用得最多、非有不行的工具。随机挑选其中的一个工具，花一个小时去阅读它的文档。在这一个小时里，努力去学习这个工具的某个你不曾意识到的新功能，或者发现某种新的使用方法。

6.     想一想，除了编程之外你最擅长什么事情？再想一想，你是通过怎样的锻炼才变得如此熟练和专业的？这对于你的编程工作又有什么启发呢？（怎么把这些经验应用到编程方面？）

7.     拿出一叠简历，并和一组面试官在同一个房间里待上一个小时。确保每份简历都至少被3个面试官看过，并且要给出1 ~ 3分的评分。针对那些不同面试官评判大相径庭的简历展开讨论。

8.     参与一个电话面试。事后写下你的反馈，抛出你的观点，然后与主持电话面试的人聊一聊，看看你们是否达成了一致的结论。

9.     进行一次技术面试，并且被面试的人应该是某个你不太了解的领域里的专家。让他假定听众在该领域里一无所知，因此请他从最基础的讲起。努力去理解他所说的，必要时问一些问题。

10.   有机会参与别人的技术面试。期间，你只是认真地听、认真地学。在应聘者努力解决技术问题的同时，你也要在自己脑子里尝试解决这些问题。

11.   找到一个能和你交换实际问题的人，每隔一周，相互交流编程问题。花10 ~ 15分钟来尝试解决这些问题，再用10 ~ 15分钟进行讨论（无论能否解决）。

12.   当你听到任何你一时之间也无法解决的面试问题时，赶紧回到你的座位上，把这个问题用电子邮件发给自己，以留作日后的提醒。在那一周里找出点时间，用自己最喜欢的编程语言来解决它。
</code></pre>

<p>我之所以喜欢Steve开出的这个清单，是因为它看上去很全面。有些程序员一想到“锻炼”，总认为就是一些编码上的难题。但在我看来，编程更在于人，而不是代码。因此，通过解决世上所有的、并且晦涩的编程面试题目，在提高你的个人能力方面，这种方法是有局限的。</p>

<p>关于“努力的学习”，我也很喜欢Peter Norvig在“Teach Yourself Programming in TenYears”（花10年时间自学编程）一文中提出的诸多建议：</p>

<pre><code>1． 与别的程序员交流。读别人的代码。这比任何书籍或培训课程都更重要。

2． 动手写程序！最好的学习方法就是边做边学。

3． 在本科或研究生的课程中学习编程课程。

4． 找一些项目来做，并且需要与其他程序员形成团队来合作。在项目的进行过程中，学会辨别最出色的程序员以及最糟糕的程序员。

5． 在项目中跟随别的程序员一起工作，了解如何维护那些不是你写的代码，并且学习如何写出利于他人维护的代码。

6． 学习多种不同的编程语言，特别是那些与你现在所熟悉的语言有着不同的世界观和编程模型的。

7． 了解硬件对软件的影响。知道你的电脑执行一条指令需要多少时间，从内存中取出一个字（在有缓存或没缓存的情况下）需要多少时间，在以太网（或者因特网）上传输数据需要多少时间，从磁盘中读取连续的数据或者在磁盘上跳转到另一个位置需要多少时间，等等。
</code></pre>

<p>你还可以从Dave Thomas的21种实用的编码套路中获取灵感（CodeKata.com），或者你更愿意加入一个你家当地的“编程武馆”（CodingDojo.org）。</p>

<p>对于“努力的学习”，我无法像Steve，Peter或者Dave那样提供一个长长的建议列表。我远不如他们有耐心。实际上，在我看来，“编程套路”只需两个招式：</p>

<pre><code>1. 写博客。我在2004年初创办了CodingHorror.com博客，作为我自己努力学习的一种形式。它在一开始很不起眼，到后来成为我职业生涯中做过的最重要的一件事。所以，你也应该写博客。最后“闻达于天下”的人，往往就是那些能够有效书写和沟通的人。他们的声音最响亮，是他们在制定游戏规则，并且引领世界的潮流。

2. 积极参与著名的开源项目。所有的高谈阔论听起来都很好，但是，你是一个大话王还是一名实干家呢？别光说不练，这个非常重要，因为人们会用你的行动来衡量你，而不是你的言论。努力在公众面前留下些实实在在有用的东西吧，到时候你就可以说，“我在那个项目中出过力。”
</code></pre>

<p>当你能编写精彩的代码、并且能用精彩的言辞向世人解释那些代码时，到那时候，我会觉得你已经掌握了最牛的编码套路！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[转]Tomcat 生产服务器性能优化]]></title>
    <link href="http://www.wangchaoqun.com/blog/2013/07/25/zhuan-tomcat-sheng-chan-fu-wu-qi-xing-neng-you-hua/"/>
    <updated>2013-07-25T10:08:06+08:00</updated>
    <id>http://www.wangchaoqun.com/blog/2013/07/25/zhuan-tomcat-sheng-chan-fu-wu-qi-xing-neng-you-hua</id>
    <content type="html"><![CDATA[<p>tomcat优化+eclipse优化之类的文章网上有很多，这个收藏当作就手的工具。<br/>
<a href="http://www.oschina.net/translate/tomcat-performance-tuning" target="_blank">来自oschina</a>  : 参与翻译(4人)：Garfielt, Lesus, MtrS, 大志darcy<br/>
[正文]考虑一下这种场景，你开发了一个应用，它有十分优秀的布局设计，最新的特性以及其它的优秀特点。但是在性能这方面欠缺，不管这个应用如何都会遭到客户拒绝。客户总是期望它们的应用应该有更好的性能。如果你在产品中使用了Tomcat服务器，那么这篇文章就会给你几方面来提升Tomcat服务器的性能。<!--more--><br/>
感谢ITWorld article给本文提供资源。经过沉思我已经知道了和早期版本相比最新的Tomcat提供更好的性能和稳定性。所以一直使用最新的Tomcat版本。现在本文使用下面几步来提高Tomcat服务器的性能。
1. 增加JVM堆内存大小
2. 修复JRE内存泄漏
3. 线程池设置
4. 压缩
5. 数据库性能调优
6. Tomcat本地库
7. 其它选项</p>

<h4>第一步  – 提高JVM栈内存Increase JVM heap memory</h4>

<p>你使用过tomcat的话，简单的说就是“内存溢出”. 通常情况下，这种问题出现在实际的生产环境中.产生这种问题的原因是tomcat使用较少的内存给进程,通过配置TOmcat的配置文件(Windows 下的catalina.bat或Linux下的catalina.sh)可以解决这种问题.这种解决方法是通过增加JVM的栈内存实现的.也就是说，JVM通常不去调用垃圾回收器，所以服务器可以更多关注处理web请求，并要求尽快完成。要更改文件(catalina.sh) 位于&#8221;\tomcat server folder\bin\catalina.sh&#8221;，下面，给出这个文件的配置信息，</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>JAVA_OPTS="-Djava.awt.headless=true -Dfile.encoding=UTF-8
</span><span class='line'>-server -Xms1024m -Xmx1024m
</span><span class='line'>-XX:NewSize=512m -XX:MaxNewSize=512m -XX:PermSize=512m
</span><span class='line'>-XX:MaxPermSize=512m -XX:+DisableExplicitGC"</span></code></pre></td></tr></table></div></figure>


<p>
-Xms – 指定初始化时化的栈内存<br/>
-Xmx – 指定最大栈内存<br/>
在重启你的Tomcat服务器之后，这些配置的更改才会有效。下面将介绍如何处理JRE内存泄漏.</p>

<h4>第二步 – 解决JRE内存泄露</h4>

<p>性能表现不佳的另一个主要原因是内存泄漏，正如我之前说过：始终使用最新的tomcat服务器以获得更好的性能和可伸缩性。现在，这句话变成真的。如果我们使用最新的tomcat版本6.0.26及以上就可以解决这个错误，因为它包含了一个监听器来处理JRE和PermGen的内存泄漏。使用的监听器是，</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener" /&gt;</span></code></pre></td></tr></table></div></figure>


<p>你可以在server.xml文件中找到这个监听器的配置，server.xml位置在“tomcat project folder/conf/server.xml”。接下来，我们将看看如何调整连接属性“maxThreads”。</p>

<h4>第三步 – 线程池设置</h4>

<p>线程池指定Web请求负载的数量，因此，为获得更好的性能这部分应小心处理。可以通过调整连接器属性“maxThreads”完成设置。maxThreads的值应该根据流量的大小，如果值过低，将有没有足够的线程来处理所有的请求，请求将进入等待状态，只有当一个的处理线程释放后才被处理；如果设置的太大，Tomcat的启动将花费更多时间。因此它取决于我们给maxThreads设置一个正确的值。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Connector port="8080" address="localhost"
</span><span class='line'>maxThreads="250" maxHttpHeaderSize="8192"
</span><span class='line'>emptySessionPath="true" protocol="HTTP/1.1"
</span><span class='line'>enableLookups="false" redirectPort="8181" acceptCount="100"
</span><span class='line'>connectionTimeout="20000" disableUploadTimeout="true" /&gt;</span></code></pre></td></tr></table></div></figure>


<p>在上述配置中，maxThreads值设定为“250”，这指定可以由服务器处理的并发请求的最大数量。如果没有指定，这个属性的默认值为“200”。任何多出的并发请求将收到“拒绝连接”的错误提示，直到另一个处理请求进程被释放。错误看起来如下，</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>org.apache.tomcat.util.threads.ThreadPool logFull SEVERE: All threads (250) are
</span><span class='line'>currently busy, waiting. Increase maxThreads (250) or check the servlet status</span></code></pre></td></tr></table></div></figure>


<p>如果应用提示上述错误，务必检查上述错误是否是由于单个请求花费太长时间造成的，这个问题的原因是这样的，有时候如果数据库连接不释放的话，进程将不会处理其它请求。<br/>
根据我的经验，准确值的设定可以通过将应用在在各种环境中测试得出。接下来，我们来看看如何压缩的MIME类型。</p>

<h4>第4步- 压缩</h4>

<p>Tomcat有一个通过在server.xml配置文件中设置压缩的选项。压缩可以在connector像如下设置中完成，</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Connector port="8080" protocol="HTTP/1.1"
</span><span class='line'>connectionTimeout="20000"
</span><span class='line'>redirectPort="8181" compression="500"
</span><span class='line'>compressableMimeType="text/html,text/xml,text/plain,application/octet-stream" /&gt;</span></code></pre></td></tr></table></div></figure>


<p>在前面的配置中，当文件的大小大于等于500bytes时才会压缩。如果当文件达到了大小但是却没有被压缩，那么设置属性compression=&ldquo;on&#8221;。否则Tomcat默认设置是“off”。接下来我们将看看如何调优数据库。</p>

<h4>第五步- 数据库性能调优</h4>

<p>Tomcat性能在等待数据库查询被执行期间会降低。如今大多数应用程序都是使用可能包含“命名查询”的关系型数据库。如果是那样的话，Tomcat会在启动时默认加载命名查询，这个可能会提升性能。另一件重要事是确保所有数据库连接正确地关闭。给数据库连接池设置正确值也是十分重要的。我所说的值是指Resource要素的最大空闲数（maxIdle），最大连接数（maxActive）,最大建立连接等待时间（maxWait）属性的值。因为配置依赖与应用要求，我也不能在本文指定正确的值。你可以通过调用数据库性能测试来找到正确的值。</p>

<h4>第6步 – Tomcat原生库</h4>

<p>Tomcat的原生库基于Apache可移植运行时（Apache Portable Runtime简称APR），给程序员提供了超强的扩展性和性能，在产品运作中帮助融合原生的服务器技术以展现最佳的性能。想知道安装说明的朋友请参考Tomcat Native Library – (APR) Installation。</p>

<h4>第7步 – 其他选项</h4>

<p>这些选项是：
开启浏览器的缓存，这样读取存放在webapps文件夹里的静态内容会更快，大大推动整体性能。
每当开机时，Tomcat服务器应当自动地重启。
一般情况下HTTPS请求会比HTTP请求慢。如果你想要更好的安全性，即使慢一点我们还是要选择HTTPS。</p>

<p>就这么多啦。在这篇文章里，我教给了大家一些提高Tomcat服务器性能的方法。如果你觉得这篇文章有用，或者你对提高Tomcat服务器性能有别的看法，请不要忘记留下宝贵的评论。祝你今天编程愉快！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cygwin & Wine & Ruby 记录]]></title>
    <link href="http://www.wangchaoqun.com/blog/2013/01/16/cygwin-and-wine-and-ruby-ji-lu/"/>
    <updated>2013-01-16T16:03:36+08:00</updated>
    <id>http://www.wangchaoqun.com/blog/2013/01/16/cygwin-and-wine-and-ruby-ji-lu</id>
    <content type="html"><![CDATA[<p>cygwin是一个在windows平台上运行的unix模拟环境, wine则可以安装在Linux，再对应到Windows相应的函数来调用DLL以运行Windows程序。这两个就是利器，windows下不想用虚拟机（占用资源还挺多）或双系统，就可以用用cygwin；服务器上想搞点exe的东西就安装个wine。至于ruby，是因为octopress要用，开个虚拟机写博客很不爽，windows下折腾安装配置，却中文编码没解决，还是cygwin搞定。<!--more--></p>

<h2>cygwin的安装</h2>

<p>官网下载setup-x86_64.exe，运行，下一步，到download site选第一个163的镜像，速度快些；下一步到select packages页面，不选不点，直接下一步，会下载安装默认配置的相关包；安装完默认，重新运行setup，选择要用的包，比如下面这些基本需要：
<a href="http://blog.developwithpassion.com/2012/03/30/installing-rvm-with-cygwin-on-windows/">摘录自blog.developwithpassion.com</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Archive  
</span><span class='line'>    unzip – Unzipping zip files  
</span><span class='line'>Net  
</span><span class='line'>    openssl – bin and sources
</span><span class='line'>    openssh – Only if you are not going to compile openssh yourself
</span><span class='line'>    curl – download internet resources
</span><span class='line'>Devl
</span><span class='line'>    colorgcc
</span><span class='line'>    gcc
</span><span class='line'>    gcc-core – compiler
</span><span class='line'>    git
</span><span class='line'>    git-completion
</span><span class='line'>    git-gui
</span><span class='line'>    git-svn
</span><span class='line'>    gitk
</span><span class='line'>    libtool – Shared library generation tool. You’ll need it when trying to compile rubies
</span><span class='line'>    libncurses-devel – Used when compiling several other tools I use
</span><span class='line'>    make
</span><span class='line'>    mercurial
</span><span class='line'>    openssl-devel – Required for compiling openssh (not necessarily required for rvm, but I always install it to compile openssh myself)
</span><span class='line'>    readline
</span><span class='line'>    Libs
</span><span class='line'>    zlib
</span><span class='line'>    zlib-devel
</span><span class='line'>Utils
</span><span class='line'>    ncurses – Enabling better handling of terminal
</span><span class='line'>    patch – Apply a diff file to an original.</span></code></pre></td></tr></table></div></figure>


<h2>wine的安装，centos6.x</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget http://mirrors.sohu.com/fedora-epel/6/i386/epel-release-6-8.noarch.rpm
</span><span class='line'>rpm -ivh epel-release-6-8.noarch.rpm
</span><span class='line'>rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6
</span><span class='line'>yum makecache
</span><span class='line'>yum install wine</span></code></pre></td></tr></table></div></figure>


<p>安装完成后，应用程序（application）->wine->wine configure稍作配置，也可能会提示download gecko，install 完成即可
把windows/system32下的MFC42.dll   msxml.dll    msvcp60.dll   riched20.dll    riched32.dll 这几个文件复制到 ~/.wine/drive_c/windows/system32里，再输入命令：winecfg<br/>
安装exe，英文系统会有中文乱码情况</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wine whatever.exe</span></code></pre></td></tr></table></div></figure>


<h2>安装Ruby</h2>

<p>我虚拟了两个centos，一个用make install安装并配置octopress环境，另一个同样方法却不成功，后来用rvm可行，不用yum install ruby 是因为版本过低。</p>

<h4>RVM安装：</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -L https://get.rvm.io | bash -s stable --ruby</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby --version</span></code></pre></td></tr></table></div></figure>


<p>显示版本即成功</p>

<h4>make install：</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget ftp://ftp.ruby-lang.org//pub/ruby/2.1/ruby-2.1.0.tar.gz
</span><span class='line'>tar -zxvf ruby-2.1.0.tar.gz
</span><span class='line'>cd ruby-2.1.0
</span><span class='line'>./configure --prefix=/usr/local/ruby
</span><span class='line'>make
</span><span class='line'>make test
</span><span class='line'>make install  </span></code></pre></td></tr></table></div></figure>


<h4>windows7下简直是个悲剧：</h4>

<p>下载rubyinstaller安装，devkit解压，然后cmd下
cdd到DevKit path</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby dk.rb init
</span><span class='line'>ruby dk.rb review
</span><span class='line'>ruby dk.rb install</span></code></pre></td></tr></table></div></figure>


<p>出现utf-8错误，使用chcp 1252，再进行上三句，done<br/>
然后配置octopress环境，英文下rake成功，有中文（比如文章分类、标签带中文的）不成;<br/>
<a href="http://txgcwm.github.io/">摘录自txgcwm.github.io</a></p>

<blockquote><p>在实际使用（rake generate/rake preview）的时候，若blog整体采用了非ascii码的编码格式（比如utf-8）就会出现类似这样的错误：<br/>
Liquid error: incompatible encoding regexp match (ascii-8bit regexp with utf-8 string)<br/>
其实是由于插件文件plugins/category_list_tag.rb本身是ascii编码所致:</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ chardet category_list_tag.rb
</span><span class='line'>category_list_tag.rb: ascii (confidence: 1.00)</span></code></pre></td></tr></table></div></figure>


<p>category_list_tag.rb中很多地方用到了ruby的正则表达式，而ruby的正则表达式在匹配的时候，默认是按照“代码源文件”的编码格式(在这里是ascii)进行匹配的，而如果blog是utf-8编码的话就会出现上述错误。有两种解决办法：
1. 将category_list_tag.rb转成utf-8格式。<br/>
2. 更改category_list_tag.rb中所有的正则表达式声明，加上u选项（u的意思就是以utf-8编码格式来进行匹配）。例如，若原正则表达式是/regexp/, 则改成/regexp/u。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安装git, 建立Octopress博客]]></title>
    <link href="http://www.wangchaoqun.com/blog/2013/01/07/an-zhuang-git-create-octopress-blog/"/>
    <updated>2013-01-07T14:34:24+08:00</updated>
    <id>http://www.wangchaoqun.com/blog/2013/01/07/an-zhuang-git-create-octopress-blog</id>
    <content type="html"><![CDATA[<p>本文参考了若干网络日志（谢过~）, 配置个人博客后整理而成</p>

<h2>安装git  </h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>yum -y install git
</span><span class='line'>git --version
</span></code></pre></td></tr></table></div></figure>


<p></p>

<!--more-->


<p>在本机使用git创建SSH Key</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ssh-keygen -C <span class="s2">&quot;username&quot;</span> -t rsa
</span><span class='line'>ssh -v git@github.com
</span></code></pre></td></tr></table></div></figure>


<p>
//if denied, use <code>ssh-add ~/.ssh/id_rsa</code> to fix this.<br/>
备注: useremail为你注册github用户时的邮箱地址 这时，在系统目录下就会生成一个.ssh文件夹，里面为对应的SSH Key，其中id_rsa.pub是Gighub需要的SSH公钥文件。 将id_ras.pub文件里内容拷贝到Github的Account Settings里的key中。 这样你就可以直接使用Git和Github了.</p>

<h2>安装ruby  </h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>wget ftp://ftp.ruby-lang.org//pub/ruby/2.1/ruby-2.1.0.tar.gz
</span><span class='line'>tar -zxvf ruby-2.1.0.tar.gz
</span><span class='line'><span class="nb">cd </span>ruby-2.1.0
</span><span class='line'>./configure --prefix<span class="o">=</span>/usr/local/ruby
</span><span class='line'>make
</span><span class='line'>make <span class="nb">test</span>
</span><span class='line'>make install
</span></code></pre></td></tr></table></div></figure>


<h2>安装OctoPress  </h2>

<p>通过Git从Github上克隆一份Octopress</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'><span class="nb">cd </span>octopress
</span><span class='line'>gem install bundler
</span><span class='line'>bundle install
</span></code></pre></td></tr></table></div></figure>


<p>安装Octopress默认的Theme</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake install
</span></code></pre></td></tr></table></div></figure>


<p>
//if error: rake aborted!<br/>
//You have already activated rake 10.1.0, but your Gemfile requires rake 0.9.2.2.
delete your Gemfile.lock and edit the version of rake specified in your Gemfile to 10.1. Job done</p>

<h2>通过_config.yml来配置博客  </h2>

<h2>创建一个博客</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake new_post<span class="o">[</span><span class="s2">&quot;Hello World&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>创建一个博客页面</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake new_page<span class="o">[</span><span class="s2">&quot;blog&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>预览效果：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake generate
</span><span class='line'>rake preview
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>然后在浏览器中打开<a href="http://localhost:4000">http://localhost:4000</a></p>

<h2>发布Octopress到Github</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd </span>octopress
</span><span class='line'>rake setup_github_pages
</span><span class='line'>Repository url: git@github.com:username/username.github.com.git
</span></code></pre></td></tr></table></div></figure>


<p>将博客发布到Github上，输入下面命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>这样，生成的内容将会自动发布到master分支，并且可以使用 <a href="http://username.github.com">http://username.github.com</a> 访问内容。</p>

<p>将source提交：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git add .
</span><span class='line'>git commit -m <span class="s2">&quot;blog init&quot;</span>
</span><span class='line'>git push origin <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure>


<p>删除之前的添加信息 (配置文件在 ~/octopress/.git/config)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git remote rm origin
</span><span class='line'>git remote add origin git@github.com:username/username.github.com.git
</span></code></pre></td></tr></table></div></figure>


<h2>添加多说评论  </h2>

<p>在_config.yml尾部添加如下行：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># Duoshuo Comments  </span>
</span><span class='line'>duoshuo_show_comment_count: <span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>在source/_layouts/post.html尾部添加如下代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="o">{</span>% <span class="k">if </span>site.duoshuo_show_comment_count<span class="o">==</span><span class="nb">true </span>and page.comments<span class="o">==</span><span class="nb">true</span> %<span class="o">}</span>
</span><span class='line'>&lt;section <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;comment&quot;</span>&gt;
</span><span class='line'>&lt;h1&gt;发表评论&lt;/h1&gt;
</span><span class='line'><span class="o">{</span>% include post/duoshuo.html %<span class="o">}</span>
</span><span class='line'>&lt;/section&gt;
</span><span class='line'><span class="o">{</span>% endif %<span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>创建source/_includes/post/duoshuo.html文件，将从多说获得的代码放入其中。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&lt;!-- Duoshuo Comment BEGIN --&gt;
</span><span class='line'>    &lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;ds-thread&quot;</span>&gt;&lt;/div&gt;
</span><span class='line'>&lt;script <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span>&gt;
</span><span class='line'>var <span class="nv">duoshuoQuery</span> <span class="o">=</span> <span class="o">{</span>short_name:<span class="s2">&quot;username&quot;</span><span class="o">}</span>;
</span><span class='line'>  <span class="o">(</span><span class="k">function</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      var <span class="nv">ds</span> <span class="o">=</span> document.createElement<span class="o">(</span><span class="s1">&#39;script&#39;</span><span class="o">)</span>;
</span><span class='line'>      ds.type <span class="o">=</span> <span class="s1">&#39;text/javascript&#39;</span>;ds.async <span class="o">=</span> <span class="nb">true</span>;
</span><span class='line'>      ds.src <span class="o">=</span> <span class="s1">&#39;http://static.duoshuo.com/embed.js&#39;</span>;
</span><span class='line'>      ds.charset <span class="o">=</span> <span class="s1">&#39;UTF-8&#39;</span>;
</span><span class='line'>      <span class="o">(</span>document.getElementsByTagName<span class="o">(</span><span class="s1">&#39;head&#39;</span><span class="o">)[</span>0<span class="o">]</span>
</span><span class='line'>      <span class="o">||</span> document.getElementsByTagName<span class="o">(</span><span class="s1">&#39;body&#39;</span><span class="o">)[</span>0<span class="o">])</span>.appendChild<span class="o">(</span>ds<span class="o">)</span>;
</span><span class='line'>  <span class="o">})()</span>;
</span><span class='line'>  &lt;/script&gt;
</span><span class='line'>&lt;!-- Duoshuo Comment END --&gt;
</span></code></pre></td></tr></table></div></figure>


<h2>将AddThis更换为JiaThis</h2>

<p>打开source/_includes/post/sharing.html，注释掉<code>&lt;div class="share"&gt;...&lt;/div&gt;</code>中的AddThis相关语句,然后在<code>&lt;/div&gt;</code>前加入从JiaThis获得的代码。</p>

<h2>Octopress写作</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd </span>octopress
</span><span class='line'>rake new_post<span class="o">[</span><span class="s2">&quot;new blog&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>another pc</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git clone -b <span class="nb">source </span>git@github.com:username/username.github.com.git octopress
</span><span class='line'><span class="nb">cd </span>octopress
</span><span class='line'>git clone git@github.com:username/username.github.com.git _deploy
</span></code></pre></td></tr></table></div></figure>


<h2>增加category_list插件</h2>

<p>保存以下代码到plugins/category_list_tag.rb：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>module Jekyll
</span><span class='line'>  class CategoryListTag &lt; Liquid::Tag
</span><span class='line'>    def render<span class="o">(</span>context<span class="o">)</span>
</span><span class='line'>      <span class="nv">html</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>      <span class="nv">categories</span> <span class="o">=</span> context.registers<span class="o">[</span>:site<span class="o">]</span>.categories.keys
</span><span class='line'>      categories.sort.each <span class="k">do</span> |category|
</span><span class='line'>        <span class="nv">posts_in_category</span> <span class="o">=</span> context.registers<span class="o">[</span>:site<span class="o">]</span>.categories<span class="o">[</span>category<span class="o">]</span>.size
</span><span class='line'>        <span class="nv">category_dir</span> <span class="o">=</span> context.registers<span class="o">[</span>:site<span class="o">]</span>.config<span class="o">[</span><span class="s1">&#39;category_dir&#39;</span><span class="o">]</span>
</span><span class='line'>        <span class="nv">category_url</span> <span class="o">=</span> File.join<span class="o">(</span>category_dir, category.gsub<span class="o">(</span>/_|<span class="se">\P</span><span class="o">{</span>Word<span class="o">}</span>/, <span class="s1">&#39;-&#39;</span><span class="o">)</span>.gsub<span class="o">(</span>/-<span class="o">{</span>2,<span class="o">}</span>/, <span class="s1">&#39;-&#39;</span><span class="o">)</span>.downcase<span class="o">)</span>
</span><span class='line'>        html &lt;&lt; <span class="s2">&quot;&lt;li class=&#39;category&#39;&gt;&lt;a href=&#39;/#{category_url}/&#39;&gt;#{category} (#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n&quot;</span>
</span><span class='line'>      end
</span><span class='line'>      html
</span><span class='line'>    end
</span><span class='line'>  end
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>Liquid::Template.register_tag<span class="o">(</span><span class="s1">&#39;category_list&#39;</span>, Jekyll::CategoryListTag<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>将category加入到侧边导航栏，需要增加一个aside
复制以下代码到source/_includes/asides/category_list.html。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&lt;section&gt;
</span><span class='line'>  &lt;h1&gt;文章分类&lt;/h1&gt;
</span><span class='line'>  &lt;ul <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;categories&quot;</span>&gt;
</span><span class='line'>    <span class="o">{</span>% category_list %<span class="o">}</span>
</span><span class='line'>  &lt;/ul&gt;
</span><span class='line'>&lt;/section&gt;
</span></code></pre></td></tr></table></div></figure>


<p>配置侧边栏需要修改_config.yml文件，修改其default_asides项：
default_asides: [&hellip;, asides/category_list.html, &hellip;]</p>

<h2>中文分类支持</h2>

<p>侧边栏添加了文章分类后，英文分类没有问题，点击打开是分类下的文章列表；但中文分类，如云计算、设计模式之类就不行了，网上有各种解决办法，复杂了点；而且我发现新建日志的文件名如果是中文则会转成拼音，文章分类也是，你可以看下public/blog/categories下的文件名；所以如果能把边栏的链接地址改成拼音就行了，rakefile里有<code>rake new_post</code>代码；查看分析发现和<code>plugins/category_list_tag.rb</code>的处理类似，<br/>
<code>category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase</code>是转换为单词‘-’分隔并且小写，rakefile里是<code> mkdir_p  
"#{source_dir}/#{posts_dir}"  
filename = "#{source_dir}/#{posts_dir}/#{Time.now.strftime('%Y-%m-%d')}-#{title.to_url}.#{new_post_ext}"</code><br/>
  <strong>注意:</strong>title多了<code>.to_url</code>，原来如此，将<code>category_list_tag.rb</code>里改成<br/>
  <code>category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase.to_url</code>，
然后rake generate  rake preview<br/>
done！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Excel导出工具类]]></title>
    <link href="http://www.wangchaoqun.com/blog/2013/01/01/exceldao-chu-gong-ju-lei/"/>
    <updated>2013-01-01T16:32:42+08:00</updated>
    <id>http://www.wangchaoqun.com/blog/2013/01/01/exceldao-chu-gong-ju-lei</id>
    <content type="html"><![CDATA[<p>前端使用jquery easyui，datagrid添加导出按钮（另外的js逻辑）即可将当前页或所有页数据(支持查询条件的导出)导出到excel，支持office excel 2003和2007+;<br/>
使用apache poi（+ooxml）实现，主要代码片段如下：</p>

<!--more-->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">colalife</span><span class="o">.</span><span class="na">core</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">excel</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ExcelExportUtil</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">ExcelExportUtil</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">CellStyle</span><span class="o">&gt;</span> <span class="n">styles</span><span class="o">;</span>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * sheetName Excel导出文档里的标签页名，默认为Sheet1</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">DEFAULT_SHEET_NAME</span> <span class="o">=</span> <span class="s">&quot;Sheet1&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * excel导出时文件名，默认为&quot;导出excel.xls&quot;</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">DEFAULT_EXCEL_FILE_NAME</span> <span class="o">=</span> <span class="s">&quot;导出excel.xls&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * Excel导出,sheetName默认为Sheet1</span>
</span><span class='line'><span class="cm">  * @param dataList 数据，可用bean list</span>
</span><span class='line'><span class="cm">  * @param columns 字段和字段显示名的键值对</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">export</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;?&gt;</span> <span class="n">dataList</span><span class="o">,</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">columns</span><span class="o">,</span> <span class="n">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span>
</span><span class='line'>          <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span><span class="o">[]</span> <span class="n">fields</span> <span class="o">=</span> <span class="n">columns</span><span class="o">.</span><span class="na">keySet</span><span class="o">().</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
</span><span class='line'>      <span class="n">String</span><span class="o">[]</span> <span class="n">titles</span> <span class="o">=</span> <span class="n">columns</span><span class="o">.</span><span class="na">values</span><span class="o">().</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
</span><span class='line'>      <span class="n">export</span><span class="o">(</span><span class="n">dataList</span><span class="o">,</span> <span class="n">fields</span><span class="o">,</span> <span class="n">titles</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * Excel导出,sheetName默认为Sheet1</span>
</span><span class='line'><span class="cm">  * @param dataList 数据，可用bean list</span>
</span><span class='line'><span class="cm">  * @param EasyuiDataGrid 用来获取fields titles 字段和字段显示名的数组</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">export</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;?&gt;</span> <span class="n">dataList</span><span class="o">,</span> <span class="n">EasyuiDataGrid</span> <span class="n">dg</span><span class="o">,</span> <span class="n">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span>
</span><span class='line'>          <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span><span class="o">[]</span> <span class="n">fields</span> <span class="o">=</span> <span class="n">dg</span><span class="o">.</span><span class="na">getFields</span><span class="o">().</span><span class="na">split</span><span class="o">(</span><span class="s">&quot;,&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">String</span><span class="o">[]</span> <span class="n">titles</span> <span class="o">=</span> <span class="n">dg</span><span class="o">.</span><span class="na">getTitles</span><span class="o">().</span><span class="na">split</span><span class="o">(</span><span class="s">&quot;,&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Workbook</span> <span class="n">excel</span> <span class="o">=</span> <span class="n">ExcelExportUtil</span><span class="o">.</span><span class="na">getExcel</span><span class="o">(</span><span class="n">dataList</span><span class="o">,</span> <span class="n">fields</span><span class="o">,</span> <span class="n">titles</span><span class="o">);</span>
</span><span class='line'>      <span class="n">ExcelExportUtil</span><span class="o">.</span><span class="na">setResponseForExcel</span><span class="o">(</span><span class="n">response</span><span class="o">);</span>
</span><span class='line'>      <span class="n">excel</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">());</span>
</span><span class='line'>      <span class="n">response</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">().</span><span class="na">flush</span><span class="o">();</span>
</span><span class='line'>      <span class="n">response</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">().</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * Excel导出,sheetName默认为Sheet1</span>
</span><span class='line'><span class="cm">  * @param dataList 数据，可用bean list</span>
</span><span class='line'><span class="cm">  * @param fields titles 字段和字段显示名的数组</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">export</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;?&gt;</span> <span class="n">dataList</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">fields</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">titles</span><span class="o">,</span> <span class="n">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span>
</span><span class='line'>          <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Workbook</span> <span class="n">excel</span> <span class="o">=</span> <span class="n">ExcelExportUtil</span><span class="o">.</span><span class="na">getExcel</span><span class="o">(</span><span class="n">dataList</span><span class="o">,</span> <span class="n">fields</span><span class="o">,</span> <span class="n">titles</span><span class="o">);</span>
</span><span class='line'>      <span class="n">ExcelExportUtil</span><span class="o">.</span><span class="na">setResponseForExcel</span><span class="o">(</span><span class="n">response</span><span class="o">);</span>
</span><span class='line'>      <span class="n">excel</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">());</span>
</span><span class='line'>      <span class="n">response</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">().</span><span class="na">flush</span><span class="o">();</span>
</span><span class='line'>      <span class="n">response</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">().</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * Excel导出的实现,sheetName默认为Sheet1</span>
</span><span class='line'><span class="cm">  * @param data 数据，可用bean list</span>
</span><span class='line'><span class="cm">  * @param columns 字段和字段显示名的键值对</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">Workbook</span> <span class="nf">getExcel</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;?&gt;</span> <span class="n">data</span><span class="o">,</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">columns</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">getExcel</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">DEFAULT_SHEET_NAME</span><span class="o">,</span> <span class="n">columns</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * Excel导出的实现,sheetName默认为Sheet1</span>
</span><span class='line'><span class="cm">  * @param data 数据，可用bean list</span>
</span><span class='line'><span class="cm">  * @param columns 字段和字段显示名的键值对</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">Workbook</span> <span class="nf">getExcel</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;?&gt;</span> <span class="n">data</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">fields</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">titles</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">getExcel</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">DEFAULT_SHEET_NAME</span><span class="o">,</span> <span class="n">fields</span><span class="o">,</span> <span class="n">titles</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * Excel导出的实现</span>
</span><span class='line'><span class="cm">  * @param data 数据，可用bean list</span>
</span><span class='line'><span class="cm">  * @param sheetName 导出文档里的标签页名</span>
</span><span class='line'><span class="cm">  * @param columns 字段和字段显示名的键值对</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">Workbook</span> <span class="nf">getExcel</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;?&gt;</span> <span class="n">data</span><span class="o">,</span> <span class="n">String</span> <span class="n">sheetName</span><span class="o">,</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">columns</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span><span class="o">[]</span> <span class="n">fields</span> <span class="o">=</span> <span class="n">columns</span><span class="o">.</span><span class="na">keySet</span><span class="o">().</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
</span><span class='line'>      <span class="n">String</span><span class="o">[]</span> <span class="n">titles</span> <span class="o">=</span> <span class="n">columns</span><span class="o">.</span><span class="na">values</span><span class="o">().</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">getExcel</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">sheetName</span><span class="o">,</span> <span class="n">fields</span><span class="o">,</span> <span class="n">titles</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * Excel导出的实现</span>
</span><span class='line'><span class="cm">  * @param data 数据，可用bean list</span>
</span><span class='line'><span class="cm">  * @param sheetName 导出文档里的标签页名</span>
</span><span class='line'><span class="cm">  * @param fields titles 字段和字段显示名的数组</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">Workbook</span> <span class="nf">getExcel</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;?&gt;</span> <span class="n">data</span><span class="o">,</span> <span class="n">String</span> <span class="n">sheetName</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">fields</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">titles</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Workbook</span> <span class="n">workbook</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HSSFWorkbook</span><span class="o">();</span>
</span><span class='line'>      <span class="c1">//创建所有Cell Style</span>
</span><span class='line'>      <span class="n">createStyles</span><span class="o">(</span><span class="n">workbook</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Sheet</span> <span class="n">sheet</span> <span class="o">=</span> <span class="n">workbook</span><span class="o">.</span><span class="na">createSheet</span><span class="o">(</span><span class="n">sheetName</span><span class="o">);</span>
</span><span class='line'>      <span class="c1">// 创建第一行,为excel表头</span>
</span><span class='line'>      <span class="n">Row</span> <span class="n">row</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="na">createRow</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="c1">// 序号列</span>
</span><span class='line'>      <span class="n">Cell</span> <span class="n">numHeader</span> <span class="o">=</span> <span class="n">row</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">numHeader</span><span class="o">.</span><span class="na">setCellValue</span><span class="o">(</span><span class="k">new</span> <span class="n">HSSFRichTextString</span><span class="o">(</span><span class="s">&quot;序号&quot;</span><span class="o">));</span>
</span><span class='line'>      <span class="n">numHeader</span><span class="o">.</span><span class="na">setCellStyle</span><span class="o">(</span><span class="n">styles</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;header&quot;</span><span class="o">));</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">titles</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">Cell</span> <span class="n">header</span> <span class="o">=</span> <span class="n">row</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>          <span class="n">header</span><span class="o">.</span><span class="na">setCellValue</span><span class="o">(</span><span class="k">new</span> <span class="n">HSSFRichTextString</span><span class="o">(</span><span class="n">titles</span><span class="o">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="o">]));</span>
</span><span class='line'>          <span class="n">header</span><span class="o">.</span><span class="na">setCellStyle</span><span class="o">(</span><span class="n">styles</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;header&quot;</span><span class="o">));</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="c1">// 创建其他各数据行</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(!</span><span class="n">data</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">Object</span> <span class="n">bean</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">j</span><span class="o">);</span>
</span><span class='line'>              <span class="n">Row</span> <span class="n">dataRow</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="na">createRow</span><span class="o">(</span><span class="n">j</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>              <span class="c1">// 序号列</span>
</span><span class='line'>              <span class="n">Cell</span> <span class="n">num</span> <span class="o">=</span> <span class="n">dataRow</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>              <span class="n">num</span><span class="o">.</span><span class="na">setCellValue</span><span class="o">(</span><span class="k">new</span> <span class="n">HSSFRichTextString</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">j</span> <span class="o">+</span> <span class="mi">1</span><span class="o">)));</span>
</span><span class='line'>              <span class="n">num</span><span class="o">.</span><span class="na">setCellStyle</span><span class="o">(</span><span class="n">styles</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;normal&quot;</span><span class="o">));</span>
</span><span class='line'>              <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">k</span> <span class="o">&lt;=</span> <span class="n">fields</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">k</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">Cell</span> <span class="n">cell</span> <span class="o">=</span> <span class="n">dataRow</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="n">k</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">Object</span> <span class="n">value</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>                  <span class="kt">boolean</span> <span class="n">isDate</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>                  <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                      <span class="n">value</span> <span class="o">=</span> <span class="n">PropertyUtils</span><span class="o">.</span><span class="na">getSimpleProperty</span><span class="o">(</span><span class="n">bean</span><span class="o">,</span> <span class="n">fields</span><span class="o">[</span><span class="n">k</span> <span class="o">-</span> <span class="mi">1</span><span class="o">]);</span>
</span><span class='line'>                      <span class="k">if</span> <span class="o">(</span><span class="n">value</span> <span class="k">instanceof</span> <span class="n">Date</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                          <span class="n">value</span> <span class="o">=</span> <span class="n">DateUtil</span><span class="o">.</span><span class="na">formatDate</span><span class="o">((</span><span class="n">Date</span><span class="o">)</span> <span class="n">value</span><span class="o">);</span>
</span><span class='line'>                          <span class="n">isDate</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>                      <span class="o">}</span>
</span><span class='line'>                  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                      <span class="n">logger</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">&quot;Excel导出，获取属性值异常：&quot;</span> <span class="o">+</span> <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>                  <span class="n">HSSFRichTextString</span> <span class="n">cellValue</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HSSFRichTextString</span><span class="o">(</span><span class="n">ObjectUtils</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">value</span><span class="o">));</span>
</span><span class='line'>                  <span class="n">cell</span><span class="o">.</span><span class="na">setCellValue</span><span class="o">(</span><span class="n">cellValue</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">cell</span><span class="o">.</span><span class="na">setCellStyle</span><span class="o">(</span><span class="n">isDate</span> <span class="o">?</span> <span class="n">styles</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;dateCell&quot;</span><span class="o">)</span> <span class="o">:</span> <span class="n">styles</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;normal&quot;</span><span class="o">));</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">titles</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>          <span class="c1">// 自适应宽度</span>
</span><span class='line'>          <span class="n">sheet</span><span class="o">.</span><span class="na">autoSizeColumn</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">workbook</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * excel导出时用到的方法，直接调用</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">setResponseForExcel</span><span class="o">(</span><span class="n">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">setResponseForExcel</span><span class="o">(</span><span class="n">response</span><span class="o">,</span> <span class="n">DEFAULT_EXCEL_FILE_NAME</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * excel导出时用到的方法，直接调用</span>
</span><span class='line'><span class="cm">  * @throws UnsupportedEncodingException</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">setResponseForExcel</span><span class="o">(</span><span class="n">HttpServletResponse</span> <span class="n">response</span><span class="o">,</span> <span class="n">String</span> <span class="n">fileName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">response</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="s">&quot;application/vnd.ms-excel;charset=UTF-8&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="c1">// 解决excel文件乱码问题</span>
</span><span class='line'>          <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Content-Disposition&quot;</span><span class="o">,</span> <span class="s">&quot;attachment;filename=&quot;</span>
</span><span class='line'>                  <span class="o">+</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">fileName</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="s">&quot;GB2312&quot;</span><span class="o">),</span> <span class="s">&quot;ISO8859-1&quot;</span><span class="o">));</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">UnsupportedEncodingException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">logger</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">&quot;Excel导出，转码异常：&quot;</span> <span class="o">+</span> <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Cache-Control&quot;</span><span class="o">,</span> <span class="s">&quot;must-revalidate, post-check=0, pre-check=0&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Pragma&quot;</span><span class="o">,</span> <span class="s">&quot;public&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">response</span><span class="o">.</span><span class="na">setDateHeader</span><span class="o">(</span><span class="s">&quot;Expires&quot;</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">CellStyle</span><span class="o">&gt;</span> <span class="n">createStyles</span><span class="o">(</span><span class="n">Workbook</span> <span class="n">wb</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">styles</span> <span class="o">=</span> <span class="n">Maps</span><span class="o">.</span><span class="na">newHashMap</span><span class="o">();</span>
</span><span class='line'>      <span class="n">DataFormat</span> <span class="n">df</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">createDataFormat</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// --字体设定 --//</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">//普通字体</span>
</span><span class='line'>      <span class="n">Font</span> <span class="n">normalFont</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">createFont</span><span class="o">();</span>
</span><span class='line'>      <span class="n">normalFont</span><span class="o">.</span><span class="na">setFontName</span><span class="o">(</span><span class="s">&quot;宋体&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">normalFont</span><span class="o">.</span><span class="na">setFontHeightInPoints</span><span class="o">((</span><span class="kt">short</span><span class="o">)</span> <span class="mi">12</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">//加粗字体</span>
</span><span class='line'>      <span class="n">Font</span> <span class="n">boldFont</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">createFont</span><span class="o">();</span>
</span><span class='line'>      <span class="n">boldFont</span><span class="o">.</span><span class="na">setFontHeightInPoints</span><span class="o">((</span><span class="kt">short</span><span class="o">)</span> <span class="mi">12</span><span class="o">);</span>
</span><span class='line'>      <span class="n">boldFont</span><span class="o">.</span><span class="na">setBoldweight</span><span class="o">(</span><span class="n">Font</span><span class="o">.</span><span class="na">BOLDWEIGHT_BOLD</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">//蓝色加粗字体</span>
</span><span class='line'>      <span class="n">Font</span> <span class="n">blueBoldFont</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">createFont</span><span class="o">();</span>
</span><span class='line'>      <span class="n">blueBoldFont</span><span class="o">.</span><span class="na">setFontHeightInPoints</span><span class="o">((</span><span class="kt">short</span><span class="o">)</span> <span class="mi">12</span><span class="o">);</span>
</span><span class='line'>      <span class="n">blueBoldFont</span><span class="o">.</span><span class="na">setBoldweight</span><span class="o">(</span><span class="n">Font</span><span class="o">.</span><span class="na">BOLDWEIGHT_BOLD</span><span class="o">);</span>
</span><span class='line'>      <span class="n">blueBoldFont</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">IndexedColors</span><span class="o">.</span><span class="na">BLUE</span><span class="o">.</span><span class="na">getIndex</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// --Cell Style设定-- //</span>
</span><span class='line'>      <span class="c1">//普通格式</span>
</span><span class='line'>      <span class="n">CellStyle</span> <span class="n">normalStyle</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">createCellStyle</span><span class="o">();</span>
</span><span class='line'>      <span class="n">normalStyle</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">normalFont</span><span class="o">);</span>
</span><span class='line'>      <span class="n">styles</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;normal&quot;</span><span class="o">,</span> <span class="n">normalStyle</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">//标题格式</span>
</span><span class='line'>      <span class="n">CellStyle</span> <span class="n">headerStyle</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">createCellStyle</span><span class="o">();</span>
</span><span class='line'>      <span class="n">headerStyle</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">boldFont</span><span class="o">);</span>
</span><span class='line'>      <span class="c1">// 指定单元格居中对齐</span>
</span><span class='line'>      <span class="n">headerStyle</span><span class="o">.</span><span class="na">setAlignment</span><span class="o">(</span><span class="n">HSSFCellStyle</span><span class="o">.</span><span class="na">ALIGN_CENTER</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">// 指定单元格垂直居中对齐</span>
</span><span class='line'>      <span class="n">headerStyle</span><span class="o">.</span><span class="na">setVerticalAlignment</span><span class="o">(</span><span class="n">HSSFCellStyle</span><span class="o">.</span><span class="na">VERTICAL_CENTER</span><span class="o">);</span>
</span><span class='line'>      <span class="n">styles</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;header&quot;</span><span class="o">,</span> <span class="n">headerStyle</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">//日期格式</span>
</span><span class='line'>      <span class="n">CellStyle</span> <span class="n">dateCellStyle</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">createCellStyle</span><span class="o">();</span>
</span><span class='line'>      <span class="n">dateCellStyle</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">normalFont</span><span class="o">);</span>
</span><span class='line'>      <span class="n">dateCellStyle</span><span class="o">.</span><span class="na">setDataFormat</span><span class="o">(</span><span class="n">df</span><span class="o">.</span><span class="na">getFormat</span><span class="o">(</span><span class="s">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="o">));</span>
</span><span class='line'><span class="c1">//       setBorder(dateCellStyle);</span>
</span><span class='line'>      <span class="n">styles</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;dateCell&quot;</span><span class="o">,</span> <span class="n">dateCellStyle</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">//数字格式</span>
</span><span class='line'>      <span class="n">CellStyle</span> <span class="n">numberCellStyle</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">createCellStyle</span><span class="o">();</span>
</span><span class='line'>      <span class="n">numberCellStyle</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">normalFont</span><span class="o">);</span>
</span><span class='line'>      <span class="n">numberCellStyle</span><span class="o">.</span><span class="na">setDataFormat</span><span class="o">(</span><span class="n">df</span><span class="o">.</span><span class="na">getFormat</span><span class="o">(</span><span class="s">&quot;#,##0.00&quot;</span><span class="o">));</span>
</span><span class='line'>      <span class="n">setBorder</span><span class="o">(</span><span class="n">numberCellStyle</span><span class="o">);</span>
</span><span class='line'>      <span class="n">styles</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;numberCell&quot;</span><span class="o">,</span> <span class="n">numberCellStyle</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">//合计列格式</span>
</span><span class='line'>      <span class="n">CellStyle</span> <span class="n">totalStyle</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">createCellStyle</span><span class="o">();</span>
</span><span class='line'>      <span class="n">totalStyle</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">blueBoldFont</span><span class="o">);</span>
</span><span class='line'>      <span class="n">totalStyle</span><span class="o">.</span><span class="na">setWrapText</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>      <span class="n">totalStyle</span><span class="o">.</span><span class="na">setAlignment</span><span class="o">(</span><span class="n">CellStyle</span><span class="o">.</span><span class="na">ALIGN_RIGHT</span><span class="o">);</span>
</span><span class='line'>      <span class="n">setBorder</span><span class="o">(</span><span class="n">totalStyle</span><span class="o">);</span>
</span><span class='line'>      <span class="n">styles</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;total&quot;</span><span class="o">,</span> <span class="n">totalStyle</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="n">styles</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">setBorder</span><span class="o">(</span><span class="n">CellStyle</span> <span class="n">style</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="c1">//设置边框</span>
</span><span class='line'>      <span class="n">style</span><span class="o">.</span><span class="na">setBorderRight</span><span class="o">(</span><span class="n">CellStyle</span><span class="o">.</span><span class="na">BORDER_THIN</span><span class="o">);</span>
</span><span class='line'>      <span class="n">style</span><span class="o">.</span><span class="na">setRightBorderColor</span><span class="o">(</span><span class="n">IndexedColors</span><span class="o">.</span><span class="na">BLACK</span><span class="o">.</span><span class="na">getIndex</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">style</span><span class="o">.</span><span class="na">setBorderLeft</span><span class="o">(</span><span class="n">CellStyle</span><span class="o">.</span><span class="na">BORDER_THIN</span><span class="o">);</span>
</span><span class='line'>      <span class="n">style</span><span class="o">.</span><span class="na">setLeftBorderColor</span><span class="o">(</span><span class="n">IndexedColors</span><span class="o">.</span><span class="na">BLACK</span><span class="o">.</span><span class="na">getIndex</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">style</span><span class="o">.</span><span class="na">setBorderTop</span><span class="o">(</span><span class="n">CellStyle</span><span class="o">.</span><span class="na">BORDER_THIN</span><span class="o">);</span>
</span><span class='line'>      <span class="n">style</span><span class="o">.</span><span class="na">setTopBorderColor</span><span class="o">(</span><span class="n">IndexedColors</span><span class="o">.</span><span class="na">BLACK</span><span class="o">.</span><span class="na">getIndex</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">style</span><span class="o">.</span><span class="na">setBorderBottom</span><span class="o">(</span><span class="n">CellStyle</span><span class="o">.</span><span class="na">BORDER_THIN</span><span class="o">);</span>
</span><span class='line'>      <span class="n">style</span><span class="o">.</span><span class="na">setBottomBorderColor</span><span class="o">(</span><span class="n">IndexedColors</span><span class="o">.</span><span class="na">BLACK</span><span class="o">.</span><span class="na">getIndex</span><span class="o">());</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><h2>页面调用  </h2>

<p>在相应页面的toolbar里添加导出按钮，调用js function，例如：</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">exportData</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'><span class="c1">//       默认导出</span>
</span><span class='line'><span class="c1">//       jsUtil.doDefaultExport(&#39;&lt;%=request.getContextPath()%&gt;/core/operlog/export&#39;, datagrid);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//       支持查询条件的导出</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">inputs</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#searchForm input&quot;</span><span class="p">).</span><span class="nx">clone</span><span class="p">();</span>
</span><span class='line'>  <span class="nx">jsUtil</span><span class="p">.</span><span class="nx">doExport</span><span class="p">(</span><span class="s1">&#39;&lt;%=request.getContextPath()%&gt;/core/operlog/export&#39;</span><span class="p">,</span> <span class="nx">datagrid</span><span class="p">,</span> <span class="nx">inputs</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>jsUtil里的js逻辑：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 提交导出form</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nx">jsUtil</span><span class="p">.</span><span class="nx">submitExportForm</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">form</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">form</span><span class="p">.</span><span class="nx">submit</span><span class="p">();</span>
</span><span class='line'>  <span class="nx">form</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 导出方法，input为其他查询条件</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nx">jsUtil</span><span class="p">.</span><span class="nx">doExport</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">dg</span><span class="p">,</span> <span class="nx">inputs</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">.</span><span class="nx">messager</span><span class="p">.</span><span class="nx">defaults</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">ok</span><span class="o">:</span><span class="s2">&quot;当前页数据&quot;</span><span class="p">,</span> <span class="nx">cancel</span><span class="o">:</span><span class="s2">&quot;所有页数据&quot;</span> <span class="p">};</span>
</span><span class='line'>  <span class="c1">//导出当前页的数据?导出符合条件的所有数据?</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">.</span><span class="nx">messager</span><span class="p">.</span><span class="nx">confirm</span><span class="p">(</span><span class="s1">&#39;导出&#39;</span><span class="p">,</span> <span class="s1">&#39;选择导出查询结果里的：&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">isCurrent</span><span class="p">){</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">form</span> <span class="o">=</span> <span class="nx">jsUtil</span><span class="p">.</span><span class="nx">getDefaultExportForm</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">dg</span><span class="p">,</span> <span class="nx">isCurrent</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">inputs</span> <span class="o">!=</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="c1">// 其他查询条件</span>
</span><span class='line'>          <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">inputs</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">form</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">inputs</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nx">jsUtil</span><span class="p">.</span><span class="nx">submitExportForm</span><span class="p">(</span><span class="nx">form</span><span class="p">);</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">.</span><span class="nx">messager</span><span class="p">.</span><span class="nx">defaults</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">ok</span><span class="o">:</span><span class="s2">&quot;确定&quot;</span><span class="p">,</span> <span class="nx">cancel</span><span class="o">:</span><span class="s2">&quot;取消&quot;</span> <span class="p">};</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 导出方法，无其他附加条件，按后台逻辑导出数据</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nx">jsUtil</span><span class="p">.</span><span class="nx">doDefaultExport</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">dg</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>   <span class="kd">var</span> <span class="nx">form</span> <span class="o">=</span> <span class="nx">jsUtil</span><span class="p">.</span><span class="nx">getDefaultExportForm</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">dg</span><span class="p">);</span>
</span><span class='line'>   <span class="nx">jsUtil</span><span class="p">.</span><span class="nx">submitExportForm</span><span class="p">(</span><span class="nx">form</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 构造导出form，默认提交分页信息，列表字段和字段显示名信息</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nx">jsUtil</span><span class="p">.</span><span class="nx">getDefaultExportForm</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">dg</span><span class="p">,</span> <span class="nx">isCurrent</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">form</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;&lt;form&gt;&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">form</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;style&#39;</span><span class="p">,</span> <span class="s1">&#39;display:none&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">form</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;target&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">form</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;method&#39;</span><span class="p">,</span> <span class="s1">&#39;post&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">form</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;action&#39;</span><span class="p">,</span> <span class="nx">url</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">form</span><span class="p">);</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">defaultInputs</span> <span class="o">=</span> <span class="nx">jsUtil</span><span class="p">.</span><span class="nx">getDefaultInputs</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">dg</span><span class="p">,</span> <span class="nx">isCurrent</span><span class="p">);</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">defaultInputs</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">form</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">defaultInputs</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">form</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 导出form的默认提交参数，包括分页信息，列表字段和字段显示名信息</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nx">jsUtil</span><span class="p">.</span><span class="nx">getDefaultInputs</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">dg</span><span class="p">,</span> <span class="nx">isCurrent</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">inputs</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">page</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;&lt;input&gt;&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">page</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;type&#39;</span><span class="p">,</span> <span class="s1">&#39;hidden&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">page</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;page&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">rows</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;&lt;input&gt;&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">rows</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;type&#39;</span><span class="p">,</span> <span class="s1">&#39;hidden&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">rows</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;rows&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">//导出当前页的数据?导出符合条件的所有数据?</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">isCurrent</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">page</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="nx">dg</span><span class="p">.</span><span class="nx">datagrid</span><span class="p">(</span><span class="s1">&#39;options&#39;</span><span class="p">).</span><span class="nx">pageNumber</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">rows</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="nx">dg</span><span class="p">.</span><span class="nx">datagrid</span><span class="p">(</span><span class="s2">&quot;options&quot;</span><span class="p">).</span><span class="nx">pageSize</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">page</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">rows</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="mi">2147483647</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">sort</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;&lt;input&gt;&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">sort</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;type&#39;</span><span class="p">,</span> <span class="s1">&#39;hidden&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">sort</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;sort&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">sort</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="nx">dg</span><span class="p">.</span><span class="nx">datagrid</span><span class="p">(</span><span class="s1">&#39;options&#39;</span><span class="p">).</span><span class="nx">sortName</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">order</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;&lt;input&gt;&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">order</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;type&#39;</span><span class="p">,</span> <span class="s1">&#39;hidden&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">order</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;order&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">order</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="nx">dg</span><span class="p">.</span><span class="nx">datagrid</span><span class="p">(</span><span class="s1">&#39;options&#39;</span><span class="p">).</span><span class="nx">sortOrder</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">fields</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;&lt;input&gt;&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">fields</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;type&#39;</span><span class="p">,</span> <span class="s1">&#39;hidden&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">fields</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;fields&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">fields</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="nx">jsUtil</span><span class="p">.</span><span class="nx">getFields</span><span class="p">(</span><span class="nx">dg</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">titles</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;&lt;input&gt;&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">titles</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;type&#39;</span><span class="p">,</span> <span class="s1">&#39;hidden&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">titles</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;titles&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">titles</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="nx">jsUtil</span><span class="p">.</span><span class="nx">getTitles</span><span class="p">(</span><span class="nx">dg</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">inputs</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">page</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">inputs</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">rows</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">inputs</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">sort</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">inputs</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">order</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">inputs</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">fields</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">inputs</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">titles</span><span class="p">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">inputs</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 导出form的列表字段</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nx">jsUtil</span><span class="p">.</span><span class="nx">getFields</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">dg</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">columns</span> <span class="o">=</span> <span class="nx">dg</span><span class="p">.</span><span class="nx">datagrid</span><span class="p">(</span><span class="s2">&quot;options&quot;</span><span class="p">).</span><span class="nx">columns</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">json</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">columns</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">columns</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">field</span> <span class="o">=</span> <span class="nx">columns</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">field</span><span class="p">;</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">title</span> <span class="o">=</span> <span class="nx">columns</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">title</span><span class="p">;</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">hidden</span> <span class="o">=</span> <span class="nx">columns</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">hidden</span><span class="p">;</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">hidden</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">json</span> <span class="o">+=</span> <span class="nx">field</span> <span class="o">+</span> <span class="s1">&#39;,&#39;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">json</span> <span class="o">!=</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">json</span> <span class="o">=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nx">json</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">json</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 导出form的列表字段显示名称</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nx">jsUtil</span><span class="p">.</span><span class="nx">getTitles</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">dg</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">columns</span> <span class="o">=</span> <span class="nx">dg</span><span class="p">.</span><span class="nx">datagrid</span><span class="p">(</span><span class="s2">&quot;options&quot;</span><span class="p">).</span><span class="nx">columns</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">json</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">columns</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">columns</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">field</span> <span class="o">=</span> <span class="nx">columns</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">field</span><span class="p">;</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">title</span> <span class="o">=</span> <span class="nx">columns</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">title</span><span class="p">;</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">hidden</span> <span class="o">=</span> <span class="nx">columns</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">hidden</span><span class="p">;</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">hidden</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">json</span> <span class="o">+=</span> <span class="nx">title</span> <span class="o">+</span> <span class="s1">&#39;,&#39;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">json</span> <span class="o">!=</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">json</span> <span class="o">=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nx">json</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">json</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Htmlparser和httpclient解析页面并下载]]></title>
    <link href="http://www.wangchaoqun.com/blog/2012/12/18/htmlparserhe-httpclientjie-xi-ye-mian-bing-xia-zai/"/>
    <updated>2012-12-18T03:05:41+08:00</updated>
    <id>http://www.wangchaoqun.com/blog/2012/12/18/htmlparserhe-httpclientjie-xi-ye-mian-bing-xia-zai</id>
    <content type="html"><![CDATA[<p>如果你想抓取某个网页（如新浪、csdn之类）获取最新资讯列表，或者到某个站点下载文件、图片之类，就需要html解析例如htmlparser,jsoup之类的jar包，下载可用httpclient。如果想更高效率可以搞线程池，抓取解析线程和下载线程，类似消费者和生产者模型（此处不涉及，仅演示使用），代码如下：</p>

<!--more-->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="n">Set</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="nf">digLinks</span><span class="o">(</span><span class="n">String</span> <span class="n">address</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">Set</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashSet</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;();</span>
</span><span class='line'>  <span class="n">URL</span> <span class="n">url</span> <span class="o">=</span> <span class="k">new</span> <span class="n">URL</span><span class="o">(</span><span class="n">address</span><span class="o">);</span>
</span><span class='line'>  <span class="n">Parser</span> <span class="n">parser</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Parser</span><span class="o">((</span><span class="n">HttpURLConnection</span><span class="o">)</span> <span class="n">url</span><span class="o">.</span><span class="na">openConnection</span><span class="o">());</span>
</span><span class='line'>  <span class="n">NodeFilter</span> <span class="n">filter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HasAttributeFilter</span><span class="o">(</span><span class="s">&quot;id&quot;</span><span class="o">,</span> <span class="s">&quot;someid&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="n">NodeList</span> <span class="n">nodes</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="na">extractAllNodesThatMatch</span><span class="o">(</span><span class="n">filter</span><span class="o">);</span>
</span><span class='line'>  <span class="n">Node</span> <span class="n">root</span> <span class="o">=</span> <span class="n">nodes</span><span class="o">.</span><span class="na">elementAt</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>  <span class="n">String</span> <span class="n">html</span> <span class="o">=</span> <span class="n">root</span><span class="o">.</span><span class="na">getChildren</span><span class="o">().</span><span class="na">toHtml</span><span class="o">();</span>
</span><span class='line'>  <span class="n">parser</span> <span class="o">=</span> <span class="n">Parser</span><span class="o">.</span><span class="na">createParser</span><span class="o">(</span><span class="n">html</span><span class="o">,</span> <span class="s">&quot;utf-8&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="n">nodes</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="na">extractAllNodesThatMatch</span><span class="o">(</span><span class="k">new</span> <span class="n">TagNameFilter</span><span class="o">(</span><span class="s">&quot;li&quot;</span><span class="o">));</span>
</span><span class='line'>  <span class="n">parser</span> <span class="o">=</span> <span class="n">Parser</span><span class="o">.</span><span class="na">createParser</span><span class="o">(</span><span class="n">html</span><span class="o">,</span> <span class="s">&quot;utf-8&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="n">nodes</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="na">extractAllNodesThatMatch</span><span class="o">(</span><span class="k">new</span> <span class="n">TagNameFilter</span><span class="o">(</span><span class="s">&quot;a&quot;</span><span class="o">));</span>
</span><span class='line'>  <span class="n">add</span><span class="o">(</span><span class="n">result</span><span class="o">,</span> <span class="n">nodes</span><span class="o">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">add</span><span class="o">(</span><span class="n">Set</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">result</span><span class="o">,</span> <span class="n">NodeList</span> <span class="n">nodes</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">nodes</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Node</span> <span class="n">child</span> <span class="o">=</span> <span class="n">nodes</span><span class="o">.</span><span class="na">elementAt</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">child</span> <span class="k">instanceof</span> <span class="n">LinkTag</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">LinkTag</span> <span class="n">linknode</span> <span class="o">=</span> <span class="o">(</span><span class="n">LinkTag</span><span class="o">)</span> <span class="n">child</span><span class="o">;</span>
</span><span class='line'>          <span class="n">String</span> <span class="n">href</span> <span class="o">=</span> <span class="n">linknode</span><span class="o">.</span><span class="na">getLink</span><span class="o">();</span>
</span><span class='line'>          <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">href</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>httpclient 下载  </h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 读出文件中的url，连接下载保存</span>
</span><span class='line'><span class="cm"> * @param file</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">doSave</span><span class="o">(</span><span class="n">String</span> <span class="n">file</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">files</span> <span class="o">=</span> <span class="n">FileUtil</span><span class="o">.</span><span class="na">readLines</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="n">url</span> <span class="o">:</span> <span class="n">files</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">fileName</span> <span class="o">=</span> <span class="n">StringUtils</span><span class="o">.</span><span class="na">substringAfterLast</span><span class="o">(</span><span class="n">url</span><span class="o">,</span> <span class="s">&quot;/&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">download</span><span class="o">(</span><span class="n">url</span><span class="o">,</span> <span class="n">fileName</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">download</span><span class="o">(</span><span class="n">String</span> <span class="n">url</span><span class="o">,</span> <span class="n">String</span> <span class="n">fileName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">OutputStream</span> <span class="n">out</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  <span class="n">InputStream</span> <span class="n">in</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  <span class="n">HttpURLConnection</span> <span class="n">connection</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  <span class="n">URL</span> <span class="n">server</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">server</span> <span class="o">=</span> <span class="k">new</span> <span class="n">URL</span><span class="o">(</span><span class="n">url</span><span class="o">);</span>
</span><span class='line'>      <span class="n">connection</span> <span class="o">=</span> <span class="o">(</span><span class="n">HttpURLConnection</span><span class="o">)</span> <span class="n">server</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
</span><span class='line'>      <span class="n">connection</span><span class="o">.</span><span class="na">connect</span><span class="o">();</span>
</span><span class='line'>      <span class="n">in</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">dir</span> <span class="o">+</span> <span class="n">fileName</span><span class="o">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="n">out</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">read</span><span class="o">();</span>
</span><span class='line'>      <span class="k">while</span> <span class="o">(</span><span class="n">b</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">out</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
</span><span class='line'>          <span class="n">b</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">read</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="n">in</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>      <span class="n">out</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[转]深入理解浏览器兼容性模式]]></title>
    <link href="http://www.wangchaoqun.com/blog/2012/11/02/zhuan-shen-ru-li-jie-liu-lan-qi-jian-rong-xing-mo-shi/"/>
    <updated>2012-11-02T01:27:53+08:00</updated>
    <id>http://www.wangchaoqun.com/blog/2012/11/02/zhuan-shen-ru-li-jie-liu-lan-qi-jian-rong-xing-mo-shi</id>
    <content type="html"><![CDATA[<p>web开发人员遇到浏览器兼容简直就是噩梦，尤其各种ie内核的浏览器，还有搜狗、360等；这篇文章讲得比较详细，转了<a href="http://www.ituring.com.cn/article/15231" target="_blank">来自图灵社区</a><br/>
正文 &mdash;&mdash;<br/>
关于各种浏览器模式，网上已经有许多文档和资料了，但是很少有能够完全将几个概念阐述清楚的。大部分的资料稍显过时，有些内容可能已经不再适用了。本文中笔者将尽可能将几个概念阐述清楚，并去掉一些过时的内容，仅保留必要的干货。<!--more--></p>

<p>想必你一定知道浏览器有个标准（Standards）模式和一个怪异（Quirks）模式，或许你还听说过有个“准标准（Almost Standards）”模式。而当你打开 Internet Explorer 的时候，又看到了什么浏览器模式、文档模式，还有什么兼容性视图等等&hellip;</p>

<p>这些都是什么？啥是浏览器模式，啥是文档模式？标准模式和准标准的模式有什么区别？IE9兼容性视图和真正的IE9有什么区别？什么情况下会触发这些模式，又该怎样才能检测到浏览器当前处于哪种模式中呢？本文将详细为你解答这些疑问。</p>

<h3>三种模式</h3>

<p>首先我们要知道，为什么会有这么多模式。其实这是个历史遗留问题，在浏览器大战时期，网景浏览器（Netscape Navigator）和微软的IE浏览器（Microsoft Internet Explorer）对网页分别有不同的实现方式，那个时候的网页要针对这两种浏览器分别开发不同的版本。而到了 W3C 制定标准之后，这些浏览器就不能继续使用这种页面了，因而会导致大部分现有站点都不能使用。基于这个原因，浏览器才引入两种模式来处理一些遗留的站点。</p>

<p>现在的浏览器排版引擎支持三种模式：怪异（Quirks）模式、准标准（Almost Standards）和标准（Standards）模式。在怪异模式中，排版引擎会模拟 网景4 和 Windows 中的 IE5 的行为；在完全标准的模式中，会尽量执行 HTML 和 CSS 规范所指定的行为；而在准标准模式中，则只包含很少的一部分怪异模式中的行为。</p>

<p>那么所谓标准模式，就一定都“标准”吗？答案当然是否定的，因为各个浏览器厂商实现标准的阶段不同，所以各个浏览器的“标准模式”之间也会有很大的不同。</p>

<p>Firefox、Safari、Chrome、Opera (自 7.5 以后)、 IE8 和 IE9 都有一个准标准模式。那么既然标准模式都不那么标准，准标准的模式肯定就更不标准了。最初的准标准模式只会影响表格中的图像，而后来各个浏览器又或多或少地进行了修改。那么什么情况下会触发准标准模式呢？是的，正如你所想到的，某些 DOCTYPE 会触发准标准模式，例如：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"-//W3C//DTD XHTML 1.0 Transitional//EN"
</span><span class='line'>"-//W3C//DTD XHTML 1.0 Frameset//EN"
</span><span class='line'>"-//W3C//DTD HTML 4.01 Transitional//EN"
</span><span class='line'>"-//W3C//DTD HTML 4.01 Frameset//EN"
</span><span class='line'>"http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd"  </span></code></pre></td></tr></table></div></figure>


<p>一个完整的 DOCTYPE 例子如下：</p>

<p>&lt;!DOCTYPE HTML PUBLIC &ldquo;&ndash;//W3C//DTD HTML 4.01 Transitional//EN&rdquo;</p>

<pre><code>                  "http://www.w3.org/TR/html4/loose.dtd"&gt;
</code></pre>

<p>如果在 Firefox 中插入这种 DOCTYPE，并在页面中插入一个空的 span 标签，那么在 Firebug 中查看元素的布局就会发现不同：</p>

<p>准标准模式中元素的 line-height 被忽略了，元素既没有宽度也没有高度：</p>

<p>Almost Standards</p>

<p>标准模式中元素仍然保留了 line-height，拥有 18px 的高度：</p>

<p>Standards</p>

<p>在 Firefox 浏览器中，使用鼠标右键 &ndash;> 查看页面信息 可以看到当前浏览器运行在何种模式（只能看到“混杂模式”和“标准规范模式”两种表示）：</p>

<p>mozilla-standard-mode</p>

<p>有位大神 Henri Sivonen 曾写过一篇文章叫做 Activating Browser Modes with Doctype，里面包含了一个完整的表格，展示了各种 DOCTYPE 设置将会使浏览器以何种方式渲染。这里还有一篇 秦歌 的译文 《用doctype激活浏览器模式》。</p>

<p>鉴于目前一些最新版本的浏览器已经放弃了准标准模式，所以关于准标准模式的细节这里就不再赘述了，感兴趣的同学可以详细阅读以下资料：</p>

<p>Gecko&rsquo;s &ldquo;Almost Standards&rdquo; Mode</p>

<p>Line Height Calculations in Almost Standards Mode</p>

<p>Images, Tables, and Mysterious Gaps</p>

<p>almost-standards test</p>

<p>DOCTYPE Switches support in Opera Presto 2.10</p>

<p>那么，既然这么多的 DOCTYPE 都会触发非标准的模式，那么如何才能触发标准模式呢？对了！要使用 HTML5 DOCTYPE，即：</p>

<p>&lt;!DOCTYPE html>
注意：如果文档中没有包含 DOCTYPE 或者包含了一个无法识别的 DOCTYPE，则浏览器就会进入怪异模式。</p>

<p>下面简单说一下怪异模式。怪异模式有许多“怪异”的行为，主要是为了兼容那些遗留的古老页面而保留的模式。不同浏览器的怪异模式也不尽相同，它们都有自己的实现方式。怪异模式与标准模式的差异主要体现在 盒模型（box model）、表格单元格高度的处理等。例如 IE 的怪异模式中，元素的 width 包含了 padding 和 border，而标准模式中 padding 和 border 并不属于宽度的一部分。</p>

<p>若想详细了解浏览器在怪异模式下的行为，可以参看下面两篇文章。不过不建议在这上面花太多的精力，这是个历史遗留问题，而且我们也尽量保证新开发的页面不要进入到怪异模式：</p>

<p>Mozilla Quirks Mode Behavior</p>

<p>What happens in Quirks Mode?</p>

<p>Compatability Mode Test</p>

<p><em>小结</em>： 至此我们需要了解，浏览器有三种运行模式，即标准模式、准标准模式和怪异模式，要使用 &lt;!DOCTYPE html> 来正确地触发标准模式。千万不要丢掉 DOCTYPE 声明，因为这会导致浏览器进入怪异模式。</p>

<h3>IE的浏览器模式</h3>

<p>IE8有4种模式：IE5.5怪异模式、IE7标准模式、IE8 准标准模式和IE8标准模式，而IE9有7种模式: IE5.5怪异模式、IE7标准模式、IE8准标准模式、IE8标准模式、IE9准标准模式、IE9标准模式、XML模式。</p>

<p>其中 XML模式 是针对 XML 文档的，这里不打算阐述，细节可以看这篇文章<a href="http://msdn.microsoft.com/en-us/library/cc288325(v=vs.85">Defining Document Compatibility</a>.aspx) 中有详细阐述。</p>

<p>在 IE8 及以后的的 IE 浏览器中，支持 X-UA-Compatible 头，可以通过在服务器端设置 HTTP 头，或者在页面中插入 <meta> 标签来实现：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>HTTP:
</span><span class='line'>Header set X-UA-Compatible "IE=8"
</span><span class='line'>
</span><span class='line'>Meta:
</span><span class='line'>&lt;meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" /&gt;</span></code></pre></td></tr></table></div></figure>


<p>这种方法主要是防止老的页面在较新的浏览器中显示不正常的情况的， 比如上面的代码可以强制 IE8 以上版本的浏览器以IE7的模式进行渲染。</p>

<p>注意，不要在新开发的网页中使用这种技术，这种技术只应该作为新老网页更替过程中的过渡方案。由于目前新开发的网页都是尽量支持最新版本的浏览器的，所以这种技术也会慢慢被淘汰，感兴趣的同学可以详细阅读 微软的这篇文档。</p>

<p><em>小结</em>： 这里我们需要知道有这种方式可以强制浏览器以某种模式运行，但只应作为过渡方案，不应在新开发的网页中使用。</p>

<h3>IE9 兼容性视图 与 IE9 标准视图</h3>

<p>如果你使用的是 IE9，那么按下 F12 键就会出现开发者工具，上面有两个下拉菜单：浏览器模式 和 文档模式。那么什么是浏览器模式？什么又是文档模式？二者有何区别？</p>

<p>浏览器模式用于切换IE针对该网页的默认文档模式、对不同版本浏览器的条件注释解析、以及发送给网站服务器的用户代理（User-Agent）字符串的值。网站可以根据浏览器返回的不同用户代理字符串判断浏览器的版本和及安装的功能，这样就可以根据不同的浏览器返回不同的页面内容了。</p>

<p>文档模式用于指定IE的页面排版引擎（Trident）以哪个版本的方式来解析并渲染网页代码。切换文档模式会导致网页被刷新，但不会更改用户代理字符串中的版本号，也不会从服务器重新下载网页。切换浏览器模式的同时，浏览器也会自动切换到相应的文档模式。</p>

<p>一言以蔽之，浏览器模式会影响服务器端对客户端浏览器版本的判断，对条件注释也有影响；而文档模式会影响IE的排版引擎，对网页渲染会有影响，对 CSS hack 也会产生影响。因此，通过条件注释可以判断浏览器模式，而使用 CSS hack 可以判断文档模式。</p>

<p>如果我们使用一句简单的 JavaScript 语句来查看用户代理（User-Agent）字符串的值，则可以看到 IE9 兼容性视图 与 IE9 的区别：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;script type="text/javascript"&gt;
</span><span class='line'>    alert('UA:'+navigator.userAgent);
</span><span class='line'>&lt;/script&gt;</span></code></pre></td></tr></table></div></figure>


<p>输出结果如下所示，注意其中的 MSIE 版本号已经不同。判断浏览器模式就是判断 User-Agent 中的版本号，即 MSIE 后面的数值：</p>

<p>// IE9
UA:Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; Tablet PC 2.0)</p>

<p>// IE9 兼容性视图
UA:Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; Tablet PC 2.0)
话说 IE9 兼容性视图 是模拟IE7的行为，那么 IE9 兼容性视图 与 IE7 有没有区别呢？肯定是有区别的，即使是 IE9 中的 IE7标准模式，与原生的IE7在渲染上也是有区别的，具体我们暂不去深究。</p>

<p>那么既然 IE9 兼容性视图 的版本号跟 IE7 相同，如何才能判断当前是 IE9 兼容性视图，还是纯正的 IE7 呢？其实很简单，只需要判断浏览器的用户代理（User-Agent）字符串中是否包含 Trident 即可。首先检测 MSIE 的版本号是否为 7.0，然后再判断是否含有 Trident 字串，若包含则为 IE9 兼容性视图，否则则为纯正的 IE7。</p>

<p><em>小结</em>： 至此，你应该了解了什么是浏览器模式、什么是文档模式以及它们之间的区别了，另外还了解了 IE9 兼容性视图 与 IE9 以及 IE7 的区别。</p>

<h3>控制默认的渲染方式</h3>

<p>当 Internet Explorer 9 遇到未包含 X-UA-Compatible 标头的网页时，它将使用 &lt;!DOCTYPE> 指令来确定如何显示该网页。 如果该指令丢失或未指定基于标准的文档类型，则 Internet Explorer 9 将以 IE5 模式（怪异模式）来显示该网页。</p>

<p>如果 &lt;!DOCTYPE> 指令指定了基于标准的文档类型，则 Internet Explorer 9 将以 IE9 模式显示该网页，但出现以下情况时除外：</p>

<p>为该网页启用了兼容性视图。
该网页是在 Intranet 区域中加载的，并且已将 Internet Explorer 9 配置为使用兼容性视图来显示 Intranet 区域中的网页。
已将 Internet Explorer 9 配置为使用兼容性视图来显示所有网站。
已将 Internet Explorer 9 配置为使用兼容性视图列表（其实是个黑名单，其中指定了一组始终使用兼容性视图显示的网站）。
已使用开发人员工具覆盖在该网页中指定的设置。
该网页遇到了页面布局错误，并且已将 Internet Explorer 9 配置为，通过在兼容性视图中重新打开网页来自动从此类错误中恢复。
此外，可以使用下面的注册表项来控制 Internet Explorer 对未包含 X-UA-Compatible 标头的页面的处理方式。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>HKEY_LOCAL_MACHINE (or HKEY_CURRENT_USER)
</span><span class='line'>     SOFTWARE
</span><span class='line'>          Microsoft
</span><span class='line'>               Internet Explorer
</span><span class='line'>                    Main
</span><span class='line'>                         FeatureControl
</span><span class='line'>                              FEATURE_BROWSER_EMULATION
</span><span class='line'>                                   iexplore.exe = (DWORD)  </span></code></pre></td></tr></table></div></figure>


<p>其中 DWORD 值必须等于下列值之一：</p>

<p>值    说明
7000    包含基于标准的 &lt;!DOCTYPE> 指令的页面将以 IE7 模式显示。
8000    包含基于标准的 &lt;!DOCTYPE> 指令的页面以 IE8 模式显示。
8888    页面始终以 IE8 模式显示，而不考虑 &lt;!DOCTYPE> 指令。 （这可绕过前面列出的例外情况。）
关于IE浏览器确定文档模式的整个流程，可以参看这篇文章 How IE8 Determines Document Mode，文中详细阐述了整个流程与内部机制。</p>

<p><em>小结</em>： 仍然坚持使用 &lt;!DOCTYPE html>，可最大程度减小发生错误的几率。</p>

<h3>文档模式的检测</h3>

<p>在 JavaScript 中可以通过 documentMode 来检测文档模式，在 IE6 和 IE7 中是使用 compatMode 来确定文档模式的，这个属性自 IE8 开始已经被 documentMode 所替代。</p>

<p>那么，如果需要兼容 IE6 和 IE7 的话（必须的 &hellip;），则相应的检测代码大致如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>engine = null;
</span><span class='line'>if (window.navigator.appName == "Microsoft Internet Explorer")
</span><span class='line'>{
</span><span class='line'>   // This is an IE browser. What mode is the engine in?
</span><span class='line'>   if (document.documentMode) // IE8 or later
</span><span class='line'>      engine = document.documentMode;
</span><span class='line'>   else // IE 5-7
</span><span class='line'>   {
</span><span class='line'>      engine = 5; // Assume quirks mode unless proven otherwise
</span><span class='line'>      if (document.compatMode)
</span><span class='line'>      {
</span><span class='line'>         if (document.compatMode == "CSS1Compat")
</span><span class='line'>            engine = 7; // standards mode
</span><span class='line'>      }
</span><span class='line'>      // There is no test for IE6 standards mode because that mode
</span><span class='line'>      // was replaced by IE7 standards mode; there is no emulation.
</span><span class='line'>   }
</span><span class='line'>   // the engine variable now contains the document compatibility mode.
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>IE6 和 IE7 中的 compatMode 有两个可能的值“CSS1Compat”和“BackCompat ”，分别对应了 IE6 和 IE7 中的标准模式和怪异模式。上面的代码首先假定是怪异模式，然后再试图推翻假设。这里没有包含“IE6 标准模式”，因为它已经被 IE7标准模式 所替代，没有模拟的情况。</p>

<p>这里要注意，不同的文档模式对 JavaScript 也有一些影响，我们不必去深究不同文档模式对 JavaScript 有何种不同影响，只需要在编码时进行特定的 特性检测 即可。</p>

<p><em>小结</em>： 一般情况下是没必要进行文档模式检测的，对于样式兼容我们可以写 CSS hack，而对于 JavaScript 来说，则更加推荐特性检测，而不是检测浏览器本身。</p>

<h3>浏览器模式与文档模式之间的关系</h3>

<p>浏览器模式可以决定页面默认的文档模式，但文档模式可能会受其他因素影响而改变，如上文所述。如果浏览器模式与文档模式设置不同的话，会不会有什么影响呢？</p>

<p>我们已经知道浏览器模式主要用于标识浏览器本身，原则上不会对页面渲染产生影响。但是我们又知道，浏览器模式可以影响条件注释，所以如果你的页面中有条件注释的话，那么浏览器模式的变化就会影响到页面渲染。</p>

<p>服务器端只能通过浏览器模式所标识的版本来确定客户端浏览器的版本，如果你将浏览器模式标识为IE9，但文档模式选择为IE7标准的话，就可能会有问题。不过这还要看服务器端是否有针对不同浏览器的处理策略，如果服务器端并未对不同浏览器的输出做差异化处理的话，那么这两个模式选项不同就不会有问题。</p>

<p><em>小结</em>： 如果服务器端对不同浏览器的输出做了差异化处理，那么浏览器模式和文档模式不一致就可能产生问题。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[测试Hibernate动态添加实体类]]></title>
    <link href="http://www.wangchaoqun.com/blog/2012/09/28/ce-shi-hibernatedong-tai-tian-jia-wei-pei-zhi-de-shi-ti-lei/"/>
    <updated>2012-09-28T07:54:33+08:00</updated>
    <id>http://www.wangchaoqun.com/blog/2012/09/28/ce-shi-hibernatedong-tai-tian-jia-wei-pei-zhi-de-shi-ti-lei</id>
    <content type="html"><![CDATA[<p>大家知道通过hibernate cfg或和spring集成的配置里，可用packagesToScan或mapping*之类声明实体类；但有需求可能要在某个项目中编码式加载实体类（例如某个不常用的或特定用户的实体类，并未事先配置），然后进行增删改查操作。下面代码配合spring test framework做了测试（注：hibernate升级到了4.3.final，与4.2有不同，spring3或4测试通过）：<!--more--></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@RunWith</span><span class="o">(</span><span class="n">SpringJUnit4ClassRunner</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
</span><span class='line'><span class="nd">@ContextConfiguration</span><span class="o">(</span><span class="n">locations</span> <span class="o">=</span> <span class="o">{</span> <span class="s">&quot;/spring-hibernate.xml&quot;</span> <span class="o">})</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ConfigurationTest</span> <span class="kd">extends</span> <span class="n">AbstractJUnit4SpringContextTests</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">session_factory</span> <span class="o">=</span> <span class="s">&quot;sessionFactory&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">// 值得注意: org.springframework.beans.factory.FactoryBean that creates a Hibernate org.hibernate.SessionFactory</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">local_session_factory</span> <span class="o">=</span> <span class="s">&quot;&amp;sessionFactory&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Test</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sessionFactoryAndFactoryBean</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">ClassNotFoundException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">SessionFactory</span> <span class="n">sessionFactory</span> <span class="o">=</span> <span class="o">(</span><span class="n">SessionFactory</span><span class="o">)</span> <span class="n">applicationContext</span><span class="o">.</span><span class="na">getBean</span><span class="o">(</span><span class="n">session_factory</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">ClassMetadata</span><span class="o">&gt;</span> <span class="n">meta</span> <span class="o">=</span> <span class="n">sessionFactory</span><span class="o">.</span><span class="na">getAllClassMetadata</span><span class="o">();</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="n">Entry</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">ClassMetadata</span><span class="o">&gt;</span> <span class="n">each</span> <span class="o">:</span> <span class="n">meta</span><span class="o">.</span><span class="na">entrySet</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">ClassMetadata</span> <span class="n">value</span> <span class="o">=</span> <span class="n">each</span><span class="o">.</span><span class="na">getValue</span><span class="o">();</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;entity name:&quot;</span> <span class="o">+</span> <span class="n">value</span><span class="o">.</span><span class="na">getEntityName</span><span class="o">());</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">LocalSessionFactoryBean</span> <span class="n">sessionFactoryBean</span> <span class="o">=</span> <span class="o">(</span><span class="n">LocalSessionFactoryBean</span><span class="o">)</span> <span class="n">applicationContext</span><span class="o">.</span><span class="na">getBean</span><span class="o">(</span><span class="n">local_session_factory</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">Configuration</span> <span class="n">config</span> <span class="o">=</span> <span class="n">sessionFactoryBean</span><span class="o">.</span><span class="na">getConfiguration</span><span class="o">();</span>
</span><span class='line'>      <span class="n">config</span><span class="o">.</span><span class="na">addAnnotatedClass</span><span class="o">(</span><span class="n">User</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>      <span class="n">ServiceRegistry</span> <span class="n">serviceRegistry</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StandardServiceRegistryBuilder</span><span class="o">().</span><span class="na">applySettings</span><span class="o">(</span><span class="n">config</span><span class="o">.</span><span class="na">getProperties</span><span class="o">()).</span><span class="na">build</span><span class="o">();</span>
</span><span class='line'>      <span class="n">SessionFactory</span> <span class="n">newSessionFactory</span> <span class="o">=</span> <span class="n">config</span><span class="o">.</span><span class="na">buildSessionFactory</span><span class="o">(</span><span class="n">serviceRegistry</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Session</span> <span class="n">session</span> <span class="o">=</span> <span class="n">newSessionFactory</span><span class="o">.</span><span class="na">openSession</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">User</span> <span class="n">user</span> <span class="o">=</span> <span class="k">new</span> <span class="n">User</span><span class="o">();</span>
</span><span class='line'>      <span class="n">user</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">&quot;username&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">session</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="n">user</span><span class="o">);</span>
</span><span class='line'>      <span class="n">session</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">user</span> <span class="o">=</span> <span class="o">(</span><span class="n">User</span><span class="o">)</span> <span class="n">session</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">User</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">user</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>
</span><span class='line'>      <span class="n">session</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;------&quot;</span> <span class="o">+</span> <span class="n">user</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;------&quot;</span> <span class="o">+</span> <span class="n">user</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">Iterator</span><span class="o">&lt;</span><span class="n">Table</span><span class="o">&gt;</span> <span class="n">mappings</span> <span class="o">=</span> <span class="n">config</span><span class="o">.</span><span class="na">getTableMappings</span><span class="o">();</span>
</span><span class='line'>      <span class="k">while</span> <span class="o">(</span><span class="n">mappings</span><span class="o">.</span><span class="na">hasNext</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">Table</span> <span class="n">each</span> <span class="o">=</span> <span class="n">mappings</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;table name:&quot;</span> <span class="o">+</span> <span class="n">each</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[9种排序算法的java实现]]></title>
    <link href="http://www.wangchaoqun.com/blog/2010/08/09/jiu-zhong-pai-xu-suan-fa-de-javashi-xian/"/>
    <updated>2010-08-09T13:09:09+08:00</updated>
    <id>http://www.wangchaoqun.com/blog/2010/08/09/jiu-zhong-pai-xu-suan-fa-de-javashi-xian</id>
    <content type="html"><![CDATA[<p>使用枚举类型存入各算法和接口实现，main方法打印排序后的数组，也可以加入nanotime、currentTimeMillis测试效率，但可能数组太小不明显</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">comcolalife</span><span class="o">.</span><span class="na">demo</span><span class="o">.</span><span class="na">sort</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 冒择入希快(快改进)归(归改进)堆：9种排序算法的java实现</span>
</span><span class='line'><span class="cm"> * @author wangchaoqun</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SortTest</span> <span class="o">{</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
<span class='line-number'>278</span>
<span class='line-number'>279</span>
<span class='line-number'>280</span>
<span class='line-number'>281</span>
<span class='line-number'>282</span>
<span class='line-number'>283</span>
<span class='line-number'>284</span>
<span class='line-number'>285</span>
<span class='line-number'>286</span>
<span class='line-number'>287</span>
<span class='line-number'>288</span>
<span class='line-number'>289</span>
<span class='line-number'>290</span>
<span class='line-number'>291</span>
<span class='line-number'>292</span>
<span class='line-number'>293</span>
<span class='line-number'>294</span>
<span class='line-number'>295</span>
<span class='line-number'>296</span>
<span class='line-number'>297</span>
<span class='line-number'>298</span>
<span class='line-number'>299</span>
<span class='line-number'>300</span>
<span class='line-number'>301</span>
<span class='line-number'>302</span>
<span class='line-number'>303</span>
<span class='line-number'>304</span>
<span class='line-number'>305</span>
<span class='line-number'>306</span>
<span class='line-number'>307</span>
<span class='line-number'>308</span>
<span class='line-number'>309</span>
<span class='line-number'>310</span>
<span class='line-number'>311</span>
<span class='line-number'>312</span>
<span class='line-number'>313</span>
<span class='line-number'>314</span>
<span class='line-number'>315</span>
<span class='line-number'>316</span>
<span class='line-number'>317</span>
<span class='line-number'>318</span>
<span class='line-number'>319</span>
<span class='line-number'>320</span>
<span class='line-number'>321</span>
<span class='line-number'>322</span>
<span class='line-number'>323</span>
<span class='line-number'>324</span>
<span class='line-number'>325</span>
<span class='line-number'>326</span>
<span class='line-number'>327</span>
<span class='line-number'>328</span>
<span class='line-number'>329</span>
<span class='line-number'>330</span>
<span class='line-number'>331</span>
<span class='line-number'>332</span>
<span class='line-number'>333</span>
<span class='line-number'>334</span>
<span class='line-number'>335</span>
<span class='line-number'>336</span>
<span class='line-number'>337</span>
<span class='line-number'>338</span>
<span class='line-number'>339</span>
<span class='line-number'>340</span>
<span class='line-number'>341</span>
<span class='line-number'>342</span>
<span class='line-number'>343</span>
<span class='line-number'>344</span>
<span class='line-number'>345</span>
<span class='line-number'>346</span>
<span class='line-number'>347</span>
<span class='line-number'>348</span>
<span class='line-number'>349</span>
<span class='line-number'>350</span>
<span class='line-number'>351</span>
<span class='line-number'>352</span>
<span class='line-number'>353</span>
<span class='line-number'>354</span>
<span class='line-number'>355</span>
<span class='line-number'>356</span>
<span class='line-number'>357</span>
<span class='line-number'>358</span>
<span class='line-number'>359</span>
<span class='line-number'>360</span>
<span class='line-number'>361</span>
<span class='line-number'>362</span>
<span class='line-number'>363</span>
<span class='line-number'>364</span>
<span class='line-number'>365</span>
<span class='line-number'>366</span>
<span class='line-number'>367</span>
<span class='line-number'>368</span>
<span class='line-number'>369</span>
<span class='line-number'>370</span>
<span class='line-number'>371</span>
<span class='line-number'>372</span>
<span class='line-number'>373</span>
<span class='line-number'>374</span>
<span class='line-number'>375</span>
<span class='line-number'>376</span>
<span class='line-number'>377</span>
<span class='line-number'>378</span>
<span class='line-number'>379</span>
<span class='line-number'>380</span>
<span class='line-number'>381</span>
<span class='line-number'>382</span>
<span class='line-number'>383</span>
<span class='line-number'>384</span>
<span class='line-number'>385</span>
<span class='line-number'>386</span>
<span class='line-number'>387</span>
<span class='line-number'>388</span>
<span class='line-number'>389</span>
<span class='line-number'>390</span>
<span class='line-number'>391</span>
<span class='line-number'>392</span>
<span class='line-number'>393</span>
<span class='line-number'>394</span>
<span class='line-number'>395</span>
<span class='line-number'>396</span>
<span class='line-number'>397</span>
<span class='line-number'>398</span>
<span class='line-number'>399</span>
<span class='line-number'>400</span>
<span class='line-number'>401</span>
<span class='line-number'>402</span>
<span class='line-number'>403</span>
<span class='line-number'>404</span>
<span class='line-number'>405</span>
<span class='line-number'>406</span>
<span class='line-number'>407</span>
<span class='line-number'>408</span>
<span class='line-number'>409</span>
<span class='line-number'>410</span>
<span class='line-number'>411</span>
<span class='line-number'>412</span>
<span class='line-number'>413</span>
<span class='line-number'>414</span>
<span class='line-number'>415</span>
<span class='line-number'>416</span>
<span class='line-number'>417</span>
<span class='line-number'>418</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="kt">int</span><span class="o">[]</span> <span class="n">original</span> <span class="o">=</span> <span class="o">{</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">21</span><span class="o">,</span> <span class="mi">43</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="mi">53</span> <span class="o">};</span>
</span><span class='line'>  <span class="c1">// 执行排序算法</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="n">Sorts</span> <span class="n">each</span> <span class="o">:</span> <span class="n">Sorts</span><span class="o">.</span><span class="na">values</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">each</span><span class="o">.</span><span class="na">name</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;   &quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="kt">int</span><span class="o">[]</span> <span class="n">data</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">copyOf</span><span class="o">(</span><span class="n">original</span><span class="o">,</span> <span class="n">original</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
</span><span class='line'>      <span class="n">each</span><span class="o">.</span><span class="na">impl</span><span class="o">().</span><span class="na">sort</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>      <span class="n">print</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="c1">// java.util.Arrays类使用调优的快速排序法</span>
</span><span class='line'>  <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">original</span><span class="o">);</span>
</span><span class='line'>  <span class="n">print</span><span class="o">(</span><span class="n">original</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">print</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">each</span> <span class="o">:</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">each</span> <span class="o">+</span> <span class="s">&quot; &quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 插入排序算法</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">InsertSort</span> <span class="kd">implements</span> <span class="n">Sort</span> <span class="o">{</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span> <span class="o">(</span><span class="n">j</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">data</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">[</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="o">]);</span> <span class="n">j</span><span class="o">--)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">j</span><span class="o">,</span> <span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 冒泡排序算法</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">BubbleSort</span> <span class="kd">implements</span> <span class="n">Sort</span> <span class="o">{</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span> <span class="n">j</span> <span class="o">&gt;</span> <span class="n">i</span><span class="o">;</span> <span class="n">j</span><span class="o">--)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">data</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">[</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="o">])</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">j</span><span class="o">,</span> <span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 选择排序算法</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">SelectionSort</span> <span class="kd">implements</span> <span class="n">Sort</span> <span class="o">{</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">lowIndex</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span> <span class="n">j</span> <span class="o">&gt;</span> <span class="n">i</span><span class="o">;</span> <span class="n">j</span><span class="o">--)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">data</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">[</span><span class="n">lowIndex</span><span class="o">])</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">lowIndex</span> <span class="o">=</span> <span class="n">j</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">i</span><span class="o">,</span> <span class="n">lowIndex</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 希尔排序算法</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">ShellSort</span> <span class="kd">implements</span> <span class="n">Sort</span> <span class="o">{</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="o">;</span> <span class="n">i</span> <span class="o">/=</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">i</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">insertSort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">j</span><span class="o">,</span> <span class="n">i</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="n">insertSort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">insertSort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">,</span> <span class="kt">int</span> <span class="n">start</span><span class="o">,</span> <span class="kt">int</span> <span class="n">inc</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">start</span> <span class="o">+</span> <span class="n">inc</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span> <span class="o">+=</span> <span class="n">inc</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span> <span class="o">(</span><span class="n">j</span> <span class="o">&gt;=</span> <span class="n">inc</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">data</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">[</span><span class="n">j</span> <span class="o">-</span> <span class="n">inc</span><span class="o">]);</span> <span class="n">j</span> <span class="o">-=</span> <span class="n">inc</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">j</span><span class="o">,</span> <span class="n">j</span> <span class="o">-</span> <span class="n">inc</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 快速排序算法</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">QuickSort</span> <span class="kd">implements</span> <span class="n">Sort</span> <span class="o">{</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">quickSort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">quickSort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">,</span> <span class="kt">int</span> <span class="n">first</span><span class="o">,</span> <span class="kt">int</span> <span class="n">last</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">(</span><span class="n">first</span> <span class="o">&gt;=</span> <span class="n">last</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">int</span> <span class="n">pivot</span> <span class="o">=</span> <span class="n">partition</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">first</span><span class="o">,</span> <span class="n">last</span><span class="o">,</span> <span class="n">first</span><span class="o">);</span>
</span><span class='line'>  <span class="n">quickSort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">first</span><span class="o">,</span> <span class="n">pivot</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span><span class="c1">// 对左半段排序</span>
</span><span class='line'>  <span class="n">quickSort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">pivot</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="n">last</span><span class="o">);</span><span class="c1">// 对右半段排序</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kt">int</span> <span class="nf">partition</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">,</span> <span class="kt">int</span> <span class="n">first</span><span class="o">,</span> <span class="kt">int</span> <span class="n">last</span><span class="o">,</span> <span class="kt">int</span> <span class="n">pivot</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">while</span> <span class="o">(</span><span class="n">data</span><span class="o">[++</span><span class="n">first</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">[</span><span class="n">pivot</span><span class="o">])</span>
</span><span class='line'>          <span class="o">;</span>
</span><span class='line'>      <span class="k">while</span> <span class="o">(</span><span class="n">data</span><span class="o">[--</span><span class="n">last</span><span class="o">]</span> <span class="o">&gt;</span> <span class="n">data</span><span class="o">[</span><span class="n">pivot</span><span class="o">])</span>
</span><span class='line'>          <span class="o">;</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">first</span> <span class="o">&gt;=</span> <span class="n">last</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">break</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">first</span><span class="o">,</span> <span class="n">last</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">last</span><span class="o">,</span> <span class="n">pivot</span><span class="o">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">last</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 改进的快速排序算法</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">ImprovedQuickSort</span> <span class="kd">implements</span> <span class="n">Sort</span> <span class="o">{</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">MAX_STACK_SIZE</span> <span class="o">=</span> <span class="mi">4096</span><span class="o">;</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">THRESHOLD</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="kt">int</span><span class="o">[]</span> <span class="n">stack</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">MAX_STACK_SIZE</span><span class="o">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">int</span> <span class="n">top</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">pivot</span><span class="o">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">pivotIndex</span><span class="o">,</span> <span class="n">l</span><span class="o">,</span> <span class="n">r</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">stack</span><span class="o">[++</span><span class="n">top</span><span class="o">]</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>  <span class="n">stack</span><span class="o">[++</span><span class="n">top</span><span class="o">]</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">while</span> <span class="o">(</span><span class="n">top</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">stack</span><span class="o">[</span><span class="n">top</span><span class="o">--];</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">stack</span><span class="o">[</span><span class="n">top</span><span class="o">--];</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">pivotIndex</span> <span class="o">=</span> <span class="o">(</span><span class="n">i</span> <span class="o">+</span> <span class="n">j</span><span class="o">)</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span>
</span><span class='line'>      <span class="n">pivot</span> <span class="o">=</span> <span class="n">data</span><span class="o">[</span><span class="n">pivotIndex</span><span class="o">];</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">pivotIndex</span><span class="o">,</span> <span class="n">j</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// partition</span>
</span><span class='line'>      <span class="n">l</span> <span class="o">=</span> <span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>      <span class="n">r</span> <span class="o">=</span> <span class="n">j</span><span class="o">;</span>
</span><span class='line'>      <span class="k">do</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">while</span> <span class="o">(</span><span class="n">data</span><span class="o">[++</span><span class="n">l</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">pivot</span><span class="o">)</span>
</span><span class='line'>              <span class="o">;</span>
</span><span class='line'>          <span class="k">while</span> <span class="o">((</span><span class="n">r</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">data</span><span class="o">[--</span><span class="n">r</span><span class="o">]</span> <span class="o">&gt;</span> <span class="n">pivot</span><span class="o">))</span>
</span><span class='line'>              <span class="o">;</span>
</span><span class='line'>          <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">l</span><span class="o">,</span> <span class="n">r</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">while</span> <span class="o">(</span><span class="n">l</span> <span class="o">&lt;</span> <span class="n">r</span><span class="o">);</span>
</span><span class='line'>      <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">l</span><span class="o">,</span> <span class="n">r</span><span class="o">);</span>
</span><span class='line'>      <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">l</span><span class="o">,</span> <span class="n">j</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="o">((</span><span class="n">l</span> <span class="o">-</span> <span class="n">i</span><span class="o">)</span> <span class="o">&gt;</span> <span class="n">THRESHOLD</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">stack</span><span class="o">[++</span><span class="n">top</span><span class="o">]</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span>
</span><span class='line'>          <span class="n">stack</span><span class="o">[++</span><span class="n">top</span><span class="o">]</span> <span class="o">=</span> <span class="n">l</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">((</span><span class="n">j</span> <span class="o">-</span> <span class="n">l</span><span class="o">)</span> <span class="o">&gt;</span> <span class="n">THRESHOLD</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">stack</span><span class="o">[++</span><span class="n">top</span><span class="o">]</span> <span class="o">=</span> <span class="n">l</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>          <span class="n">stack</span><span class="o">[++</span><span class="n">top</span><span class="o">]</span> <span class="o">=</span> <span class="n">j</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="n">insertSort</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">insertSort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span> <span class="o">(</span><span class="n">j</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">data</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">[</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="o">]);</span> <span class="n">j</span><span class="o">--)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">j</span><span class="o">,</span> <span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 归并排序算法</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">MergeSort</span> <span class="kd">implements</span> <span class="n">Sort</span> <span class="o">{</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="kt">int</span><span class="o">[]</span> <span class="n">temp</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
</span><span class='line'>  <span class="n">mergeSort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">temp</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">mergeSort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">temp</span><span class="o">,</span> <span class="kt">int</span> <span class="n">left</span><span class="o">,</span> <span class="kt">int</span> <span class="n">right</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">(</span><span class="n">left</span> <span class="o">==</span> <span class="n">right</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">mid</span> <span class="o">=</span> <span class="o">(</span><span class="n">left</span> <span class="o">+</span> <span class="n">right</span><span class="o">)</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span>
</span><span class='line'>  <span class="n">mergeSort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">temp</span><span class="o">,</span> <span class="n">left</span><span class="o">,</span> <span class="n">mid</span><span class="o">);</span>
</span><span class='line'>  <span class="n">mergeSort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">temp</span><span class="o">,</span> <span class="n">mid</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="n">right</span><span class="o">);</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">left</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">right</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">temp</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">copyOf</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">i1</span> <span class="o">=</span> <span class="n">left</span><span class="o">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">i2</span> <span class="o">=</span> <span class="n">mid</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">cur</span> <span class="o">=</span> <span class="n">left</span><span class="o">;</span> <span class="n">cur</span> <span class="o">&lt;=</span> <span class="n">right</span><span class="o">;</span> <span class="n">cur</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">i1</span> <span class="o">==</span> <span class="n">mid</span> <span class="o">+</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">data</span><span class="o">[</span><span class="n">cur</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">[</span><span class="n">i2</span><span class="o">++];</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">i2</span> <span class="o">&gt;</span> <span class="n">right</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">data</span><span class="o">[</span><span class="n">cur</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">[</span><span class="n">i1</span><span class="o">++];</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">temp</span><span class="o">[</span><span class="n">i1</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">temp</span><span class="o">[</span><span class="n">i2</span><span class="o">])</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">data</span><span class="o">[</span><span class="n">cur</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">[</span><span class="n">i1</span><span class="o">++];</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">data</span><span class="o">[</span><span class="n">cur</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">[</span><span class="n">i2</span><span class="o">++];</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 改进的归并排序算法</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">ImprovedMergeSort</span> <span class="kd">implements</span> <span class="n">Sort</span> <span class="o">{</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">THRESHOLD</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="kt">int</span><span class="o">[]</span> <span class="n">temp</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
</span><span class='line'>  <span class="n">mergeSort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">temp</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">mergeSort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">temp</span><span class="o">,</span> <span class="kt">int</span> <span class="n">left</span><span class="o">,</span> <span class="kt">int</span> <span class="n">right</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">i</span><span class="o">,</span> <span class="n">j</span><span class="o">,</span> <span class="n">k</span><span class="o">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">mid</span> <span class="o">=</span> <span class="o">(</span><span class="n">left</span> <span class="o">+</span> <span class="n">right</span><span class="o">)</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">(</span><span class="n">left</span> <span class="o">==</span> <span class="n">right</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">((</span><span class="n">mid</span> <span class="o">-</span> <span class="n">left</span><span class="o">)</span> <span class="o">&gt;=</span> <span class="n">THRESHOLD</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">mergeSort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">temp</span><span class="o">,</span> <span class="n">left</span><span class="o">,</span> <span class="n">mid</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">insertSort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">left</span><span class="o">,</span> <span class="n">mid</span> <span class="o">-</span> <span class="n">left</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">((</span><span class="n">right</span> <span class="o">-</span> <span class="n">mid</span><span class="o">)</span> <span class="o">&gt;</span> <span class="n">THRESHOLD</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">mergeSort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">temp</span><span class="o">,</span> <span class="n">mid</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="n">right</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">insertSort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">mid</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="n">right</span> <span class="o">-</span> <span class="n">mid</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="n">i</span> <span class="o">=</span> <span class="n">left</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">mid</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">temp</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">copyOf</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">right</span> <span class="o">-</span> <span class="n">mid</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">temp</span><span class="o">[</span><span class="n">right</span> <span class="o">-</span> <span class="n">j</span> <span class="o">+</span> <span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">data</span><span class="o">[</span><span class="n">j</span> <span class="o">+</span> <span class="n">mid</span><span class="o">];</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">temp</span><span class="o">[</span><span class="n">left</span><span class="o">];</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">temp</span><span class="o">[</span><span class="n">right</span><span class="o">];</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="n">i</span> <span class="o">=</span> <span class="n">left</span><span class="o">,</span> <span class="n">j</span> <span class="o">=</span> <span class="n">right</span><span class="o">,</span> <span class="n">k</span> <span class="o">=</span> <span class="n">left</span><span class="o">;</span> <span class="n">k</span> <span class="o">&lt;=</span> <span class="n">right</span><span class="o">;</span> <span class="n">k</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">a</span> <span class="o">&lt;</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">data</span><span class="o">[</span><span class="n">k</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">[</span><span class="n">i</span><span class="o">++];</span>
</span><span class='line'>          <span class="n">a</span> <span class="o">=</span> <span class="n">temp</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">data</span><span class="o">[</span><span class="n">k</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">[</span><span class="n">j</span><span class="o">--];</span>
</span><span class='line'>          <span class="n">b</span> <span class="o">=</span> <span class="n">temp</span><span class="o">[</span><span class="n">j</span><span class="o">];</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">insertSort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">,</span> <span class="kt">int</span> <span class="n">start</span><span class="o">,</span> <span class="kt">int</span> <span class="n">len</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">start</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">start</span> <span class="o">+</span> <span class="n">len</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span> <span class="o">(</span><span class="n">j</span> <span class="o">&gt;</span> <span class="n">start</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="n">data</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">[</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="o">];</span> <span class="n">j</span><span class="o">--)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">j</span><span class="o">,</span> <span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 堆排序算法</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">HeapSort</span> <span class="kd">implements</span> <span class="n">Sort</span> <span class="o">{</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">MaxHeap</span> <span class="n">h</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MaxHeap</span><span class="o">();</span>
</span><span class='line'>  <span class="n">h</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">h</span><span class="o">.</span><span class="na">remove</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="n">System</span><span class="o">.</span><span class="na">arraycopy</span><span class="o">(</span><span class="n">h</span><span class="o">.</span><span class="na">queue</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="n">data</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">MaxHeap</span> <span class="o">{</span>
</span><span class='line'>  <span class="kt">void</span> <span class="nf">init</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">queue</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">data</span><span class="o">.</span><span class="na">length</span> <span class="o">+</span> <span class="mi">1</span><span class="o">];</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">queue</span><span class="o">[++</span><span class="n">size</span><span class="o">]</span> <span class="o">=</span> <span class="n">data</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
</span><span class='line'>          <span class="n">fixUp</span><span class="o">(</span><span class="n">size</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">queue</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">remove</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">queue</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="n">size</span><span class="o">--);</span>
</span><span class='line'>      <span class="n">fixDown</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// fixdown</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">void</span> <span class="nf">fixDown</span><span class="o">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">j</span><span class="o">;</span>
</span><span class='line'>      <span class="k">while</span> <span class="o">((</span><span class="n">j</span> <span class="o">=</span> <span class="n">k</span> <span class="o">&lt;&lt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">&lt;=</span> <span class="n">size</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">j</span> <span class="o">&lt;</span> <span class="n">size</span> <span class="o">&amp;&amp;</span> <span class="n">queue</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">queue</span><span class="o">[</span><span class="n">j</span> <span class="o">+</span> <span class="mi">1</span><span class="o">])</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">j</span><span class="o">++;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">queue</span><span class="o">[</span><span class="n">k</span><span class="o">]</span> <span class="o">&gt;</span> <span class="n">queue</span><span class="o">[</span><span class="n">j</span><span class="o">])</span> <span class="o">{</span> <span class="c1">// 不用交换</span>
</span><span class='line'>              <span class="k">break</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">queue</span><span class="o">,</span> <span class="n">j</span><span class="o">,</span> <span class="n">k</span><span class="o">);</span>
</span><span class='line'>          <span class="n">k</span> <span class="o">=</span> <span class="n">j</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">void</span> <span class="nf">fixUp</span><span class="o">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">while</span> <span class="o">(</span><span class="n">k</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">k</span> <span class="o">&gt;&gt;</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">queue</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">&gt;</span> <span class="n">queue</span><span class="o">[</span><span class="n">k</span><span class="o">])</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">break</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">queue</span><span class="o">,</span> <span class="n">j</span><span class="o">,</span> <span class="n">k</span><span class="o">);</span>
</span><span class='line'>          <span class="n">k</span> <span class="o">=</span> <span class="n">j</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 排序算法接口</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">interface</span> <span class="nc">Sort</span> <span class="o">{</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 排序算法枚举</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">enum</span> <span class="n">Sorts</span> <span class="o">{</span>
</span><span class='line'><span class="n">INSERT</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Sort</span> <span class="nf">impl</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">new</span> <span class="nf">InsertSort</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">},</span>
</span><span class='line'><span class="n">BUBBLE</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Sort</span> <span class="nf">impl</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">new</span> <span class="nf">BubbleSort</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">},</span>
</span><span class='line'><span class="n">SELECTION</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Sort</span> <span class="nf">impl</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">new</span> <span class="nf">SelectionSort</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">},</span>
</span><span class='line'><span class="n">SHELL</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Sort</span> <span class="nf">impl</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">new</span> <span class="nf">ShellSort</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">},</span>
</span><span class='line'><span class="n">QUICK</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Sort</span> <span class="nf">impl</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">new</span> <span class="nf">QuickSort</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">},</span>
</span><span class='line'><span class="n">IMPROVED_QUICK</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Sort</span> <span class="nf">impl</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">new</span> <span class="nf">ImprovedQuickSort</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">},</span>
</span><span class='line'><span class="n">MERGE</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Sort</span> <span class="nf">impl</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">new</span> <span class="nf">MergeSort</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">},</span>
</span><span class='line'><span class="n">IMPROVED_MERGE</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Sort</span> <span class="nf">impl</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">new</span> <span class="nf">ImprovedMergeSort</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">},</span>
</span><span class='line'><span class="n">HEAP</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Sort</span> <span class="nf">impl</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">new</span> <span class="nf">HeapSort</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">};</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">abstract</span> <span class="n">Sort</span> <span class="nf">impl</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 排序算法工具类</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">SortUtil</span> <span class="o">{</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">swap</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">,</span> <span class="kt">int</span> <span class="n">i</span><span class="o">,</span> <span class="kt">int</span> <span class="n">j</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">data</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
</span><span class='line'>  <span class="n">data</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">data</span><span class="o">[</span><span class="n">j</span><span class="o">];</span>
</span><span class='line'>  <span class="n">data</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">print</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">each</span> <span class="o">:</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">each</span> <span class="o">+</span> <span class="s">&quot; &quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[宁静（二）]]></title>
    <link href="http://www.wangchaoqun.com/blog/2009/07/09/ning-jing-2/"/>
    <updated>2009-07-09T14:40:21+08:00</updated>
    <id>http://www.wangchaoqun.com/blog/2009/07/09/ning-jing-2</id>
    <content type="html"><![CDATA[<p>我已经开始喜欢这种感觉了，
晚上，
关了门，关了灯，一个人，
听着音乐，享受独处，真是美妙！</p>

<p>生活是多少新鲜，
我的心里充满了好奇，
如太阳朝升夕落，每天都是新的，
哦，拥抱激情，真是美妙！</p>

<p>站在不高的山头，
看远处绿树舞动，
动物奔跑，鸟儿飞翔，
还有太阳、云朵和天空，
大自然啊，真是美妙！</p>

<p>我们有生命，我们有思想，
我们生在一个美丽的星球，
宇宙充满未知，我们困惑，
除此之外，我们勇敢，
锲而不舍，孜孜不倦，
哦，去探索，真是美妙！</p>

<p>活着的意义是什么？
你发现了吗？你发现了吗？
真正意义之所在？！
不要止于提问，
紧随其后的更加精彩！</p>

<p>不知生，不知死，
生亦何欢，死亦何哀，
如此百年，吾当何为？！
诸行无常，为之奈何？！
oh,my God，真是美妙！</p>

<p>这万物之灵长，
何能与自己的灵魂对话，
真正了知自我，而不迷失，
如同太阳底下的花儿和小草，
快乐的生长？</p>

<p>我知道这个世上有人在等我，
虽然我不知道是谁，
哦，就是这个，
我每天都非常快乐，真是美妙！</p>

<p>金钱买不到幸福，
我们却都在追逐金钱，
乐此不疲！
何不如一箪食，一瓢饮，
居陋室，享其乐！
哦，真是美妙！</p>

<p>幸福，我是幸福的，
不为权柄，不为金银，
在我饿的时候可以吃，
能爱人时亦能被人爱，
哦，真是美妙！</p>

<p>用心聆听，用心思考，
原来熟悉的其实很陌生，
或许你会发现有一种东西，
它一直在这里，总是在这里！
哦，真是美妙！</p>

<p>语言是苍白的，
一堆没有生命的字词，
它却能刮起一阵心灵风暴，
让我们拥有不可战胜的力量，
哦，这充满爱的语言，真是美妙！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[宁静（一）]]></title>
    <link href="http://www.wangchaoqun.com/blog/2009/07/05/ning-jing-1/"/>
    <updated>2009-07-05T15:11:10+08:00</updated>
    <id>http://www.wangchaoqun.com/blog/2009/07/05/ning-jing-1</id>
    <content type="html"><![CDATA[<p>现在是周五的晚上，已经十点半了，我想睡觉，可是，要求如此却也不能如愿：房间隔音效果不太好，这倒问题不大，但兄弟姐妹们着实很喜欢十点以后（当然也包括十一二点以后）聊天，唱歌，喧嚣……好几次我是睡了又起，看会书，等等再睡，这次就写点东西吧——是为记。</p>

<p>我一直觉得，在人生的不同阶段，对于人生的认识多少都会有所改变，在我们的童年，基本上没有谁会考虑生死；青春少年时，思想萌动，恰如“独上西楼，为赋新诗强说愁”，其实我们的那点阅历和体验简直如西湖里的单细胞生物般微不足道，更多时候脑袋里充斥着青春期的躁动、叛逆……对于生命，有过多少真正的思考呢？<!--more--><br/>
人生美丽的花季雨季，于我而言，已变得遥远而又模糊，竟没有多少记忆了，好像那时候时间很快，仅有的印象是我在上学，我在学习，无他。很快的，到了大学，这是几乎所有人都认为是人生最美好的一段时光，我的感受是自由，无论是世事还是人际，你都是你自己。这个时候，大家心中都有了自己的人生意义，区别只在于思考的深度罢了。那时候，我晚上经常坐到洞门山的石头上，仰面看星空，看云月，再看看灯光点缀的校园，偶尔也思考着这些生死的或人生的问题，没什么特别的意义，只是给自己找到个答案，而且自己还很满意。如今，解答这些问题已然无从着落，想想之前的念头和答案是多么幼稚了。</p>

<p>去探究人生的真理，无过于探究人生的意义，只是这个命题太大了。对此，也许有人会说：你想这些干什么？但是我同意苏格拉底所说：未经审视的生活是毫无意义的，或者用周国平的话说，对意义的寻求是人的最基本的需要，如果我们找寻不到，则会感到精神空虚，是为“存在的空虚”，如果可望不可即，则会有挫折之感，是为“存在的挫折”。如果说我相信他们，试问，我怎能不去思考它？</p>

<p>古往今来，几乎没有人不思考人生，先哲的思想也给了我们很多启发，人有生死是个亘古不变的事情，子曰：未知生，焉知死；而与此相应西方则认为：未知死，焉知生。且不谈东西方思想文化差异，至少我们要认识生和死，才可能去探究人生的意义。而问题恰恰在于生与死：何为生，何为死？据我所知，个体的人不是横空出世，却是生于偶然，从生理上是万千精子中的一个与卵子的结合才有了你，真是奇妙；而无奈的是生你之前，几万万年月沧海桑田，无不尽去，今年今月今日有你；却人生自古谁无死，自你死后，几万万年月沧海桑田，依然尽去，与你何干？如此百年人生，与几万万年月相比何其短暂，你怎能不思考活而为何？</p>

<p>佛曰：诸行无常，诸法无我，寂静涅槃，人生的虚无就在一个“空”字上，一切皆为虚幻，让众生追求无我境界，那么人生到底是不是虚幻的呢？这个问题经常让我想起《黑客帝国》这部电影，其中有关感知的论述就说：你的感觉是真实的吗？你感觉到的就存在吗？从生理上来说，感觉只是传入大脑的电流罢了。我有时会想比如说颜色，几乎所有的人都认可的红色，而实际上如果是绿色呢？在我们几十亿人，假如只有一个人看是绿色，毫无疑问我们说他是色盲，问题是如果他是对的呢？再者，如同电影里的人生活在虚拟世界，如果我们现在的世界实际上就是个虚拟世界，每个人都是上帝（但是，上帝死了，这在哲学里是毫无疑问的）操纵的，那你又作何感想？你是不是会去想到底什么是真实？到底有没有真实？到底这个世界本来的面目是什么样子？到底什么才是存在呢？关于“存在是什么”在哲学上也是个很深的问题，你有兴趣可以去读一下海德格尔《存在与时间》、萨特的《存在与虚无》。思考的翅膀可以飞的很高很远，但是在现实生活中，在有限的认知里，我们还得相信凭感官所感知的事物是真实存在的，否则我们将寸步难行。
思考活而何为不得，其实可以去思考该怎么活的问题，“好好活着就是去做有意义的事，比如让所爱的人幸福”，但是别忘了思考意义本身是什么。</p>

<p>人生是有限的，如果我们说要活的有意义就是要突破这有限而到达永恒，那么请定义永恒。你可能想到不随时间流逝而消灭就是永恒，但是你知道什么是时间吗？难道是我们无时无刻不在说的时分秒、日月年吗，请注意这些只是我们衡量时间的尺度，那被衡量的东西是什么？如果说时间是永恒的，空间是无限的，那么人的个体生命显得是多么的渺小和空幻，果真是“天地之蜉蝣，沧海之一粟”！昨日已去，明日未知，只有今日，只有当下，但是它也是转瞬即逝的，你还没来得及喊出“现在”，现在已成过去了。</p>

<p>佛曰因果循环，人们常说有因有果，有果有因，换句话说，世上发生的每一件事必定都是有原因的，如没有原因，就不会有任何事情发生，是这样吗？典型的如《黑客帝国》里的那个法国人，比如我们所知的蝴蝶效应，从发生海啸可以倒推到一直不知趣的蝴蝶扇动了一下翅膀；比如《本杰明巴顿奇事》里女主角遭遇车祸，影片也是描绘了一系列原因，说如果“女乘客去拿东西，司机去喝咖啡，朋友系鞋带……”等这些恰有一个不发生，那车祸是否会发生呢？如果是因果性，那么可以说世上的一切事物都是由上帝（如果有上帝的话）安排好的，那么人也就没了自由意志，或者说我们都是有命运的，命该如此的。天哪，你不觉得荒谬吗？但是换个角度思考，你怎么知道海啸的发生这个事实是因为蝴蝶扇动了一下翅膀这个事实而导致的呢？也就是说，你知道蝴蝶扇动了翅膀，发生了海啸这两个事实，可是你看到它们的因果关系了吗？你看到的只是它们相继出现的关系，从这种关系你能推断出因果关系吗？其实，所谓因果关系只不过是我们习惯性的联想，至于事实上是否存在，我们永远也无法知道。即使你天天看到太阳升起，你也不能据此断定说因为你天天看到太阳升起，所以明天早上太阳一定升起。所谓因果关系是一事实必然导致另一事实的关系，可是观察和实验总是有限的，经验只能说明过去，不能说明未来，从经验中不能得出永远有效的必然判断。这样一来，如果因果关系都不存在，何谈因、果呢？还是那句话，思考虽如此，回到现实生活，我们还是到处把握着原因与结果。</p>

<p>是不是这些东西太虚了，一点都不实用？是啊，有些事情就是务虚的，当然还是务实的更多，比如谈处事交际的、谈成功励志的各类技巧，于此完全不在一个层面。思考这些，认识这些，或去探究人生的意义，或去去建立你自己的精神体系、价值体系，比如塑造什么样的灵魂，能否企及永恒，有什么样的生命状态，怎样才能幸福，如何面对苦难……等等逐一展开。为什么不去想？果真懒得动脑，懒得思考？我说还是那句话：未经审视的生活是毫无意义的。</p>

<p>一些想法，写完睡觉，不知所云——Colalife。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[本地搭建SVN服务器及配置]]></title>
    <link href="http://www.wangchaoqun.com/blog/2008/10/23/ben-di-da-jian-svnfu-wu-qi-ji-pei-zhi/"/>
    <updated>2008-10-23T12:50:35+08:00</updated>
    <id>http://www.wangchaoqun.com/blog/2008/10/23/ben-di-da-jian-svnfu-wu-qi-ji-pei-zhi</id>
    <content type="html"><![CDATA[<h4>1. 创建SVN数据库</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>svnadmin create D:\svn</span></code></pre></td></tr></table></div></figure>


<p>说明：
 repository创建完毕后会在目录下生成若干个文件和文件夹，
 dav目录是提供给Apache与mod_dav_svn使用的目录，让它们存储内部数据；
 db目录就是所有版本控制的数据文件；
 hooks目录放置hook脚本文件的目录；
 locks用来放置Subversion文件库锁定数据的目录，用来追踪存取文件库的客户端；
 format文件是一个文本文件，里面只放了一个整数，表示当前文件库配置的版本号；</p>

<!--more-->


<h4>2. 创建服务</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sc create svnservice binpath= "D:\Subversion\bin\svnserve.exe --service -r D:\svn" displayname= "SVNService" depend= Tcpip</span></code></pre></td></tr></table></div></figure>


<h4>3. 删除服务</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sc delete svnservice</span></code></pre></td></tr></table></div></figure>


<p></p>

<h4>4. 启动服务/停止服务</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>net start svnservice</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>net stop svnservice</span></code></pre></td></tr></table></div></figure>


<p>也可以在运行里输入 services.msc 找到名称为“svnservice”的服务 手动启动或停止</p>

<h4>5. 导入工程</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>svn import E:\workspace\myproject\ svn://localhost/svn -m "initial import" --username admin --password mypassword</span></code></pre></td></tr></table></div></figure>


<p></p>

<h4>6. 导出工程</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>svn co svn://localhost/server --username admin --password mypassword</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[缤纷（三）]]></title>
    <link href="http://www.wangchaoqun.com/blog/2008/07/02/bin-fen-3/"/>
    <updated>2008-07-02T07:49:30+08:00</updated>
    <id>http://www.wangchaoqun.com/blog/2008/07/02/bin-fen-3</id>
    <content type="html"><![CDATA[<p>昨日的一切历历在目，现实却是弹指一挥间四年大学生活已然结束。现在想写些什么，还是不知所云了。期间有缤纷（一），缤纷（二），就作为缤纷三部曲，这个应是缤纷三部曲的完结篇了。­</p>

<p>离别总是很伤人，泪水和抽泣声，还有紧紧的拥抱，道一声再见了亲爱的同学，再见了我们的宿舍，再见了我的大学！一切都注定会尘封在记忆里。我不愿意刚刚离别就翻看纪念册，让它尘封，在一年两年十年二十年之后，这一切又将是真真切切，想念着你带给我的点点滴滴，不管是好的，坏的，悲伤的或快乐的，因为我知道一切都已过去了，一切都还在我的心里，恍惚中故地重游，怅然。­<!--more--></p>

<p>人说四年大学生活只是你人生中的一个短暂的驿站，但是就是这四年，才是我们每个人一生中最为宝贵和灿烂的青春年华。我们最深厚的友情，山盟海誓最纯洁的爱情，一切的美好，曾经的拥有。道一声珍重，道一声后会有期，何时，翻看书页中那片鹅掌楸叶，也去看看校园中那棵孤独飘摇的老树，问一声老友可好？­</p>

<p>泪眼看花，花替人愁，挥手作别，云淡月圆。人说怀旧是人的通病，我不想把回忆的东西写在这篇上，回忆就像酒，时间久了只会更香醇。现在的心情，描述的话是黯然而心中憋得满是酸楚的东西。也许正如“少年不识愁滋味，为赋新诗强说愁”，现在是“却道天凉好个秋”了。到底在这里要写些什么呢？完结的使命，是去完结，也是迎接一个新的开始。­</p>

<p>“然而说到希望，却是不能够抹杀的，因为希望是在于将来，绝不能以我之必无的证明，来折服了他之所谓可有。”这时候又想起先生的话来，我无从知道他对于可能性到底是何种态度，但是我一直都坚持相信一切都是可能的，除非你能够使我相信你的确信。希望，多么美妙的词，给人勇气，给人斗志，不屈不挠去活着。还是说到了生死，在我们每个人的每个人生阶段，对于生死，对于活着都有不同的认识，至少我是这样认为。活着是为了什么？为了理想，为了不白活，为了爱自己的人，也为了自己所爱的人，为了实现自我或者超越自我……如此种种，这其中也有我曾经所坚信的，但是说到为什么要问“活着是为了什么”这个问题的时候，我想这不是因为生活充满艰辛需要勇气（当然尤其在这个时代，活着还需要有些幽默感吧），一切都不像看起来那么简单，当然，看起来简单明白的事情，人们也不愿意去相信。活着是有意义的，而且是有必要的，因为如此便可以是人类继续保存并得以延续下去。生命应该被热爱，人应该有益于自己和他人。所有这些“应该”和“为了”暗示了一切，甚至将来：“我”活着是有价值的，所以“我”应该活下去。­</p>

<p>关于死亡，叔本华的论说或许可以给你一些启发，他说“死亡根本就不存在，一个人活着的时候，死亡与他无关。一个人死了的时候，便也不复存在，死亡更与之无关”。有一部电影，叫做《PK.COM.CN》，名如其片果真另类，我看过四遍（对于电影和音乐，我向来很虔诚的去欣赏，而喜欢不喜欢的定论，我真不敢妄下，因为我怕自己不了解甚至是误解），非常不错，正如宣传所说它是80后的电影。这里面就有句台词，说“只有活着才会有死亡”。怎么理解呢，不去管它了，还是活着吧，而且要堂堂正正磊磊落落的活。­</p>

<p>关于信念，有时候也许只是你做人处事的原则，而你在成长，这个也随着你的成长而成长，在你每个人生时期也会改变，当然主要的改变或许是之间的轻重分量了。比如说我坚持“简约不简单，自信不自负”，我坚持“一切都是可能的”，这些具体化了是在行为与看问题的视角方面。而“要有爱，要怜悯”，却是处在统领地位的。很多人都会同意要有爱，但是要怜悯，至少我知道有一个人很抵制，尤其是“同情”（我一直抱有希望，就是怜悯不是同情，但是话说回来它们同义性很大，还是要明白了）这个词。同情不好吗？对别人的痛苦感同身受，其实是看到的痛苦已然加在自己身上，庆幸了自己没有这种痛苦，特别是因为觉得我们的行为消除了我们为之愤慨的某种非正义而快乐。更甚者，用他的话说是“有些人喜欢将自己扮成命运之神的角色，他实在完全不懂你我内心深处被称为不幸的那种真正痛苦和纠缠”。这个人就是经常被人称为疯子的尼采，一个大孤独者。很不幸，我并不同意他的“同情论”，因为他以偏盖全，没有每个人都会庆幸和虚伪，也没有人都会扮成命运之神的角色，我的“要怜悯”是在“要有爱”的前提下保有对生命和对一切美好的虔诚之心，如天使般，不仅是神圣，更是爱的化身，当然也应该是你自己。­</p>

<p>勿以善小而不为，勿以恶小而为之。于卑贱者来说，一切高贵和宽宏大量的情操都是不当的，因为最高等的和最上流的都是不可信的。“一个人怎么可能甘愿处于不利的地位且乐意如此？”他们称高贵者为白痴，他们轻蔑于高贵者的快乐，且嘲笑高贵者的神采飞扬，他们惊讶而且不解。其实，这很简单，“有一种是必须如此，那就是为善”。如果说这不足以改变你的看法，我倒希望德兰修女的箴言可以勉励我们，这就是：“如果人们不讲道理、思想谬误、自我中心，不管怎样，总是爱他们；如果你做善事，人们说你自私自利、别有用心，不管怎样，总要做善事；如果你成功后，身边尽是假的朋友和真的敌人，不管怎样，总是要成功；如果你做的善事可能明天就会被遗忘，不管怎样，总要做善事；诚实与坦率可能使你易受攻击，不管怎样，总是要诚实和坦率；你耗费数年所建设的一切可能毁于一旦，不管怎样，总是要建设；人们确实需要帮助，而你若帮助他们却可能遭受攻击，不管怎样，总要帮助；将你拥有最好的东西献给世界，你可能会被踢掉牙齿，不管怎样，总是要将你所拥有最好的东西献给世界！”­</p>

<p>现实是残酷的，这句话听了无数遍，而且还将继续听下去，我不希望现实是这样的，当然估计很少有人会希望是。这种残酷体现在哪里？说白了，如同你的感觉：无奈，无助，无限……一个人在大都市里就像在茫茫沙漠里一样孤独，每个人都以异样的眼光看着你，且用自己的尺度来评价他人的好与坏。当你指着他们的评价不准确时，并没有人会羞愧脸红，也没有人会对你的不满表示愤怒，他们对你的指责也许只会付之一笑。他们败坏，他们没有理性良知，他们固然可耻，但是我们有更可怕的，是那些不去追问始终重复一致的论调且欣然接受的人云亦云者，更是鄙俗可悲。善良不算什么，倘使在一个人的信仰中，他不能坚守那份真实以此作为最内在的渴求和最迫切的需要，为此足以区分一个人的高低。­</p>

<p>管它现实是什么残酷的，我们还是要坚持真我，不为普通人所理解认同，更不能获得赞许，甚至被人误解，受到错误的评判，遭人厌恶或者诽谤中伤，这是我们的命运。选择有益的自由的轻松的愉快的孤独吧，他将使你有权保持善，不管是何种意义上的善。一个人的孤独，是在舞台上的独舞，有自己的心见证，有“纵然天下人负我，我不负天下人”的气概。­</p>

<p>做真我很需要勇气，这些都给了我勇气，也都是我鼓励自己的话语，但是我还不够强大。曾经有好友说“你不要把自己想的如神一般，要去拯救地球似的”。我洗耳恭听，但我不能违背我的心，我也做不到。你说我理想化，或者是爱幻想不切实际，种种言论都不能让我信服，不过你有确定的一点，那就是我会用生命去捍卫你说话的权利。去包容，去宽容，但是绝不会见惯不惯了那些邪恶与低俗，那其实是“哀莫大于心死”。­</p>

<p>我希望，我们能够橡树一样地生长，将根更有力地伸向深处，深入邪恶，同时更加亲切地去拥抱天堂，以宽广的枝叶吸收天堂之光……我们更加勇敢，我们更加坚忍，我们更加单纯，我们更加愉快，我们愈来愈接近光明，我们以此为荣！­</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[转]软件设计的七大原则]]></title>
    <link href="http://www.wangchaoqun.com/blog/2008/04/30/zhuan-ruan-jian-she-ji-de-qi-da-yuan-ze/"/>
    <updated>2008-04-30T11:18:52+08:00</updated>
    <id>http://www.wangchaoqun.com/blog/2008/04/30/zhuan-ruan-jian-she-ji-de-qi-da-yuan-ze</id>
    <content type="html"><![CDATA[<p>设计模式遵循的一般原则：
<a href="http://www.cnblogs.com/areliang/archive/2006/03/07/345111.html" target="_blank">来自On the way</a></p>

<p>1.开-闭原则(Open-Closed Principle, OCP):一个软件实体应当对扩展开发,对修改关闭.说的是,再设计一个模块的时候,应当使这个模块可以在不被修改的前提下被扩展.换言之,应当可以在不必修改源代码的情况下改变这个模块的行为，在保持系统一定稳定性的基础上，对系统进行扩展。这是面向对象设计（OOD）的基石，也是最重要的原则。</p>

<p>2.里氏代换原则(Liskov Substitution Principle,常缩写为.LSP)  <!--more-->
(1).由Barbar Liskov(芭芭拉.里氏)提出，是继承复用的基石。</p>

<p>(2).严格表达:如果每一个类型为T1的对象o1,都有类型为T2的对象o2,使得以T1定义的所有程序P在所有的对象o1都代换称o2时,程序P的行为没有变化,那么类型T2是类型T1的子类型.<br/>
换言之,一个软件实体如果使用的是一个基类的话,那么一定适用于其子类,而且它根本不能察觉出基类对象和子类对象的区别.只有衍生类可以替换基类，软件单位的功能才能不受影响，基类才能真正被复用，而衍生类也能够在基类的基础上增加新功能。</p>

<p>(3).反过来的代换不成立</p>

<p>(4).&lt;墨子.小取>中说:&ldquo;白马,马也; 乘白马,乘马也.骊马(黑马),马也;乘骊马,乘马也.&rdquo;</p>

<p>(5).该类西方著名的例程为:正方形是否是长方形的子类(答案是&#8221;否&#8221;)。类似的还有椭圆和圆的关系。</p>

<p>(6).应当尽量从抽象类继承,而不从具体类继承,一般而言,如果有两个具体类A,B有继承关系,那么一个最简单的修改方案是建立一个抽象类C,然后让类A和B成为抽象类C的子类.即如果有一个由继承关系形成的登记结构的话,那么在等级结构的树形图上面所有的树叶节点都应当是具体类;而所有的树枝节点都应当是抽象类或者接口.</p>

<p>(7).&ldquo;基于契约设计(Design By Constract),简称DBC&#8221;这项技术对LISKOV代换原则提供了支持.该项技术Bertrand Meyer伯特兰做过详细的介绍:
使用DBC,类的编写者显式地规定针对该类的契约.客户代码的编写者可以通过该契约获悉可以依赖的行为方式.契约是通过每个方法声明的前置条件(preconditions)和后置条件(postconditions)来指定的.要使一个方法得以执行,前置条件必须为真.执行完毕后,该方法要保证后置条件为真.就是说,在重新声明派生类中的例程(routine)时,只能使用相等或者更弱的前置条件来替换原始的前置条件,只能使用相等或者更强的后置条件来替换原始的后置条件.</p>

<p>3.依赖倒置原则(Dependence Inversion Principle),要求客户端依赖于抽象耦合.</p>

<p>(1)表述:抽象不应当依赖于细节,细节应当依赖于抽象.(Program to an interface, not an implementaction)</p>

<p>(2)表述二:针对接口编程的意思是说,应当使用接口和抽象类进行变量的类型声明,参量的类型声明,方法的返还类型声明,以及数据类型的转换等.不要针对实现编程的意思就是说,不应当使用具体类进行变量的类型声明,参量类型声明,方法的返还类型声明,以及数据类型的转换等.
   要保证做到这一点,一个具体的类应等只实现接口和抽象类中声明过的方法,而不应当给出多余的方法.
   只要一个被引用的对象存在抽象类型,就应当在任何引用此对象的地方使用抽象类型,包括参量的类型声明,方法返还类型的声明,属性变量的类型声明等.</p>

<p>(3)接口与抽象的区别就在于抽象类可以提供某些方法的部分实现,而接口则不可以,这也大概是抽象类唯一的优点.如果向一个抽象类加入一个新的具体方法,那么所有的子类型一下子就都得到得到了这个新的具体方法,而接口做不到这一点.如果向一个接口加入了一个新的方法的话,所有实现这个接口的类就全部不能通过编译了,因为它们都没有实现这个新声明的方法.这显然是接口的一个缺点.</p>

<p>(4)一个抽象类的实现只能由这个抽象类的子类给出,也就是说,这个实现处在抽象类所定义出的继承的登记结构中,而由于一般语言都限制一个类只能从最多一个超类继承,因此将抽象作为类型定义工具的效能大打折扣.
   反过来,看接口,就会发现任何一个实现了一个接口所规定的方法的类都可以具有这个接口的类型,而一个类可以实现任意多个接口.</p>

<p>(5)从代码重构的角度上讲,将一个单独的具体类重构成一个接口的实现是很容易的,只需要声明一个接口,并将重要的方法添加到接口声明中,然后在具体类定义语句中加上保留字以继承于该接口就行了.
   而作为一个已有的具体类添加一个抽象类作为抽象类型不那么容易,因为这个具体类有可能已经有一个超类.这样一来,这个新定义的抽象类只好继续向上移动,变成这个超类的超类,如此循环,最后这个新的抽象类必定处于整个类型等级结构的最上端,从而使登记结构中的所有成员都会受到影响.</p>

<p>(6)接口是定义混合类型的理想工具,所为混合类型,就是在一个类的主类型之外的次要类型.一个混合类型表明一个类不仅仅具有某个主类型的行为,而且具有其他的次要行为.</p>

<p>(7)联合使用接口和抽象类:
   由于抽象类具有提供缺省实现的优点,而接口具有其他所有优点,所以联合使用两者就是一个很好的选择.
   首先,声明类型的工作仍然接口承担的,但是同时给出的还有一个抽象类,为这个接口给出一个缺省实现.其他同属于这个抽象类型的具体类可以选择实现这个接口,也可以选择继承自这个抽象类.如果一个具体类直接实现这个接口的话,它就必须自行实现所有的接口;相反,如果它继承自抽象类的话,它可以省去一些不必要的的方法,因为它可以从抽象类中自动得到这些方法的缺省实现;如果需要向接口加入一个新的方法的话,那么只要同时向这个抽象类加入这个方法的一个具体实现就可以了,因为所有继承自这个抽象类的子类都会从这个抽象类得到这个具体方法.这其实就是缺省适配器模式(Defaule Adapter).</p>

<p>(8)什么是高层策略呢?它是应用背后的抽象,是那些不随具体细节的改变而改变的真理. 它是系统内部的系统____隐喻.</p>

<p>4.接口隔离原则(Interface Segregation Principle, ISP)</p>

<p>（1）一个类对另外一个类的依赖是建立在最小的接口上。</p>

<p>（2）使用多个专门的接口比使用单一的总接口要好.根据客户需要的不同,而为不同的客户端提供不同的服务是一种应当得到鼓励的做法.就像&#8221;看人下菜碟&#8221;一样,要看客人是谁,再提供不同档次的饭菜.</p>

<p>（3）胖接口会导致他们的客户程序之间产生不正常的并且有害的耦合关系.当一个客户程序要求该胖接口进行一个改动时,会影响到所有其他的客户程序.因此客户程序应该仅仅依赖他们实际需要调用的方法.</p>

<p>5.合成/聚合复用原则(Composite/Aggregate Reuse Principle,CARP)
在一个新的对象里面使用一些已有的对象,使之成为新对象的一部分;新的对象通过这些向对象的委派达到复用已有功能的目的.这个设计原则有另一个简短的表述:要尽量使用合成/聚合,尽量不要使用继承.</p>

<p>6.迪米特法则(Law of Demeter LoD)又叫做最少知识原则(Least Knowledge Principle,LKP),就是说,一个对象应当对其他对象有尽可能少的了了解.</p>

<p>迪米特法则最初是用来作为面向对象的系统设计风格的一种法则,与1987年秋天由Ian Holland在美国东北大学为一个叫做迪米特(Demeter)的项目设计提出的,因此叫做迪米特法则[LIEB89][LIEB86].这条法则实际上是很多著名系统,比如火星登陆软件系统,木星的欧罗巴卫星轨道飞船的软件系统的指导设计原则.</p>

<p>没有任何一个其他的OO设计原则象迪米特法则这样有如此之多的表述方式,如下几种:</p>

<p>(1)只与你直接的朋友们通信(Only talk to your immediate friends)</p>

<p>(2)不要跟&#8221;陌生人&#8221;说话(Don&rsquo;t talk to strangers)</p>

<p>(3)每一个软件单位对其他的单位都只有最少的知识,而且局限于那些本单位密切相关的软件单位.
就是说,如果两个类不必彼此直接通信,那么这两个类就不应当发生直接的相互作用,如果其中的一个类需要调用另一个类的某一个方法的话,可以通过第三者转发这个调用。</p>

<p>7.单一职责原则(Simple responsibility pinciple SRP)
就一个类而言,应该仅有一个引起它变化的原因,如果你能想到多于一个的动机去改变一个类,那么这个类就具有多于一个的职责.应该把多于的指责分离出去,分别再创建一些类来完成每一个职责.</p>

<p>另外：常说的OO五大原则就是指其中的 ：1、单一职责原则；2、开放闭合原则；3、里氏替换原则；4、依赖倒置原则；5、接口隔离原则。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[转]好的软件人员一生必看的六十本书]]></title>
    <link href="http://www.wangchaoqun.com/blog/2008/04/29/zhuan-hao-de-ruan-jian-ren-yuan-yi-sheng-bi-kan-de-liu-shi-ben-shu/"/>
    <updated>2008-04-29T13:07:09+08:00</updated>
    <id>http://www.wangchaoqun.com/blog/2008/04/29/zhuan-hao-de-ruan-jian-ren-yuan-yi-sheng-bi-kan-de-liu-shi-ben-shu</id>
    <content type="html"><![CDATA[<p>好的软件人员一生必看的六十本书，好歹看过一些（<strong>加粗的</strong>）：
<a href="http://nescaped.blog.edu.cn/2008/130819.html" target="_blank">来自紫炙寒雪</a></p>

<p>一、 科学哲学和管理哲学 13<!--more--></p>

<ol>
<li><p>“程序开发心理学”（The Psychology of Computer Programming ： Silver Anniversary Edition） 13</p></li>
<li><p>“系统化思维导论”（An Introduction to Systems Thinking， Silver Anniversary Edition） 14</p></li>
<li><p>“系统设计的一般原理”（ General Principles of Systems Design） 15</p></li>
<li><p>“质量·软件·管理（第1卷）—— 系统思维”（Quality Software Management：Systems Thinking） 16</p></li>
<li><p>“成为技术领导者——解决问题的有机方法”(Becoming A Technical Leader：An Organic Problem-Solving Approach) 16</p></li>
<li><p><strong>“你的灯亮着吗？－发现问题的真正所在”</strong>（ Are Your Lights On? How to Figure Out What the Problem Really Is） 18</p></li>
<li><p><strong>“程序员修炼之道”（The Pragmatic Programmer</strong>） 20</p></li>
<li><p>“与熊共舞：软件项目风险管理” (Waltzing With Bears： Managing Risk on Software Projects) 23</p></li>
<li><p>“第五项修炼： 学习型组织的艺术与实务”( The Fifth Discipline) 24</p></li>
</ol>


<p>二、 计算机科学基础(<strong>大学时的教材</strong>) 26</p>

<ol>
<li><p>“计算机程序设计艺术”(The Art of Computer Programming) 26</p></li>
<li><p>“深入理解计算机系统”(Computer Systems A Programmer&rsquo;s Perspective ) 29</p></li>
<li><p>“算法导论”（Introduction to Algorithms， Second Edition） 30</p></li>
<li><p>“数据结构与算法分析 —— C语言描述（原书第2版） ”（Data Structure &amp; Algorithm Analysis in C, Second Edition) 31</p></li>
<li><p>“自动机理论、语言和计算导论（第2版）”（Introduction to Automata Theory， Languages， and Computation（Second
Edition）） 32</p></li>
<li><p>“离散数学及其应用（原书第四版）”(Discrete Mathematics and Its Applications，Fourth Edition) 33</p></li>
<li><p>“编译原理”（Compilers： Principles， Techniques and Tools） 34</p></li>
<li><p>“现代操作系统”(Modern Operating System) 35</p></li>
<li><p>“计算机网络（第4版）”(Computer Networks) 35</p></li>
<li><p>“数据库系统导论（第7版）”(An Introduction to Database Systems(Seventh Edition)) 36</p></li>
</ol>


<p>三、 软件工程思想 37</p>

<ol>
<li><p>“人件”（Peopleware ： Productive Projects and Teams， 2nd Ed.） 38</p></li>
<li><p>“人件集 —— 人性化的软件开发”( The Peopleware Papers： Notes on the Human Side of Software) 39</p></li>
<li><p><strong>“人月神话”</strong>（The Mythical Man-Month） 40</p></li>
<li><p>“软件工程 — 实践者的研究方法（原书第5版）”（Software Engineering： A Practitioner&rsquo;s Approach， Fifth Edition） 56</p></li>
<li><p><strong>“敏捷软件开发-原则、模式与实践”</strong>(Agile Software Development： Principles， Patterns， and Practices) 57</p></li>
<li><p>“规划极限编程”(  Planning Extreme Programming) 58</p></li>
<li><p>“RUP导论（原书第3版）”(The Rational Unified Process：An Introduction，Third Edition ) 59</p></li>
<li><p>“统一软件开发过程”(The Unified Software Development Process) 60</p></li>
</ol>


<p>四、 软件需求 62</p>

<ol>
<li><p>“探索需求－设计前的质量”（  Exploring Requirements： Quality Before Design） 63</p></li>
<li><p>“编写有效用例”（Writing Effective Use Cases ） 64</p></li>
</ol>


<p>五、 软件设计和建模 66</p>

<ol>
<li><p>“面向对象方法原理与实践” 66</p></li>
<li><p>“面向对象软件构造（英文版.第2版）”(Object-Oriented Software Construction，Second Edition ) 68</p></li>
<li><p>“面向对象分析与设计（原书第2版）”(Object-Oriented Analysis and Design with Applications,2E ) 69</p></li>
<li><p>“UML面向对象设计基础”（Fundamentals of Object-Oriented Design in UML） 70</p></li>
<li><p>“UML精粹 —— 标准对象建模语言简明指南（第2版）”（  UML Distilled： A Brief Guide to the Standard Object Modeling
Language (2nd Edition)） 71</p></li>
<li><p>“UML和模式应用（原书第2版）”（Applying UML and Patterns： An Introduction to Object-Oriented Analysis and
Design and the Unified Process， Second Edition ） 72</p></li>
<li><p>“设计模式精解”(Design Patterns Explained) 74</p></li>
<li><p><strong>“设计模式：可复用面向对象软件的基础”</strong>（  Design Patterns：Elements of Reusable Object-Oriented software） 75</p></li>
<li><p>“面向模式的软件体系结构 卷1：模式系统”（ Pattern-Oriented Software Architecture， Volume 1： A System of
Patterns） 76</p></li>
<li><p>“软件设计的艺术”(Bringing Design to Software) 77</p></li>
</ol>


<p>六、 程序设计 79</p>

<ol>
<li><p>“编程珠矶”（Programming Pearls Second Edition ） 80</p></li>
<li><p>“C程序设计语言（第2版·新版）”（The C Programming Language ） 81</p></li>
<li><p>“C++ 程序设计语言（特别版）”（The C++ Programming Language， Special Edition） 82</p></li>
<li><p>“C++ Primer (3RD)” 83</p></li>
<li><p>“C++语言的设计和演化”（  The Design and Evolution of C++） 84</p></li>
<li><p>“C++ 编程思想（2ND）”（Thinking in C++ Second Edition） 85</p></li>
<li><p>“Effective C++” &amp; “More Effective C++” 86</p></li>
<li><p>“C++编程艺术 ”（The Art of C++ ） 88</p></li>
<li><p><strong>“Java 编程思想：第3版”</strong>( Thinking in Java， Third Edition) 89</p></li>
<li><p>“Effective Java” 90</p></li>
</ol>


<p>七、 软件测试 91</p>

<ol>
<li><p>“测试驱动开发（中文版）”（Test-driven development：by example ） 91</p></li>
<li><p>“面向对象系统的测试”（Testing Object-Oriented System： Models， Patterns， and Tools） 92</p></li>
<li><p>“单元测试之道Java版 —— 使用Junit”/ “单元测试之道C#版——使用NUnit” （Pragmatic Unit Testing：In Java with JUnit
/  Pragmatic Unit Testing：In C# with NUnit ) 93</p></li>
</ol>


<p>八、 软件维护和重构 95</p>

<ol>
<li><strong>“重构－改善既有代码的设计”</strong>（Refactoring： Improving the Design of Existing Code） 96</li>
</ol>


<p>九、 配置管理和版本控制 97</p>

<ol>
<li>“版本控制之道 —— 使用CVS”（程序员修炼三部曲第一部：Pragmatic Version Control Using CVS） 97</li>
</ol>


<p>十、 领域专题（网络、平台、数据库相关） 99</p>

<ol>
<li><p>“TCP/IP详解”（ TCP/IP Illustracted） 99</p></li>
<li><p>“Unix网络编程”(UNIX Network Programming) 100</p></li>
<li><p>“UNIX环境高级编程”（Advanced Programming in the UNIX Environment） 102</p></li>
<li><p>“UNIX 编程艺术”（The Art of Unix Programming） 103</p></li>
<li><p>“数据访问模式 —— 面向对象应用中的数据库交互” 103</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[转]有挑战性的JAVA程序员面试32问]]></title>
    <link href="http://www.wangchaoqun.com/blog/2008/03/03/zhuan-cheng-xu-ren-sheng-you-tiao-zhan-xing-de-javacheng-xu-yuan-mian-shi-32wen/"/>
    <updated>2008-03-03T10:01:02+08:00</updated>
    <id>http://www.wangchaoqun.com/blog/2008/03/03/zhuan-cheng-xu-ren-sheng-you-tiao-zhan-xing-de-javacheng-xu-yuan-mian-shi-32wen</id>
    <content type="html"><![CDATA[<p><a href="http://tech.ccidnet.com/art/3539/20080228/1374267_1.html" target="_blank">来自赛迪网</a><br/>
   第一，谈谈final， finally， finalize的区别。</p>

<p>　　第二，Anonymous Inner Class （匿名内部类） 是否可以extends（继承）其它类，是否可以implements（实现）interface（接口）？</p>

<p>　　第三，Static Nested Class 和 Inner Class的不同，说得越多越好（面试题有的很笼统）。</p>

<p>　　第四，&amp;和&amp;&amp;的区别。</p>

<!--more-->


<p>　　第五，HashMap和Hashtable的区别。</p>

<p>　　第六，Collection 和 Collections的区别。</p>

<p>　　第七，什么时候用assert.</p>

<p>　　第八，GC是什么？ 为什么要有GC？</p>

<p>　　第九，String s = new String（&#8221;xyz&#8221;）；创建了几个String Object？</p>

<p>　　第十，Math.round（11.5）等於多少？ Math.round（-11.5）等於多少？</p>

<p>　　第十一，short s1 = 1； s1 = s1 + 1；有什么错？ short s1 = 1； s1 += 1；有什么错？</p>

<p>　　第十二，sleep（） 和 wait（） 有什么区别？</p>

<p>　　第十三，Java有没有goto？</p>

<p>　　第十四，数组有没有length（）这个方法？ String有没有length（）这个方法？</p>

<p>　　第十五，Overload和Override的区别。Overloaded的方法是否可以改变返回值的类型？</p>

<p>　　第十六，Set里的元素是不能重复的，那么用什么方法来区分重复与否呢？ 是用==还是equals（）？ 它们有何区别？</p>

<p>　　第十七，给我一个你最常见到的runtime exception.</p>

<p>　　第十八，error和exception有什么区别？</p>

<p>　　第十九，List， Set， Map是否继承自Collection接口？</p>

<p>　　第二十，abstract class和interface有什么区别？</p>

<p>　　第二十一，abstract的method是否可同时是static，是否可同时是native，是否可同时是synchronized？</p>

<p>　　第二十二，接口是否可继承接口？ 抽象类是否可实现（implements）接口？ 抽象类是否可继承实体类（concrete class）？</p>

<p>　　第二十三，启动一个线程是用run（）还是start（）？</p>

<p>　　第二十四，构造器Constructor是否可被override？</p>

<p>　　第二十五，是否可以继承String类？</p>

<p>　　第二十六，当一个线程进入一个对象的一个synchronized方法后，其它线程是否可进入此对象的其它方法？</p>

<p>　　第二十七，try {}里有一个return语句，那么紧跟在这个try后的finally {}里的code会不会被执行，什么时候被执行，在return前还是后？</p>

<p>　　第二十八，编程题： 用最有效率的方法算出2乘以8等於几？</p>

<p>　　第二十九，两个对象值相同（x.equals（y） == true），但却可有不同的hash code，这句话对不对？</p>

<p>　　第三十，当一个对象被当作参数传递到一个方法后，此方法可改变这个对象的属性，并可返回变化后的结果，那么这里到底是值传递还是引用传递？</p>

<p>　　第三十一，swtich是否能作用在byte上，是否能作用在long上，是否能作用在String上？</p>

<p>　　第三十二，编程题： 写一个Singleton出来。</p>

<p>　　以下是答案</p>

<p>　　第一，谈谈final， finally， finalize的区别。</p>

<p>　　final?修饰符（关键字）如果一个类被声明为final，意味着它不能再派生出新的子类，不能作为父类被继承。因此一个类不能既被声明为 abstract的，又被声明为final的。将变量或方法声明为final，可以保证它们在使用中不被改变。被声明为final的变量必须在声明时给定初值，而在以后的引用中只能读取，不可修改。被声明为final的方法也同样只能使用，不能重载finally?再异常处理时提供 finally 块来执行任何清除操作。如果抛出一个异常，那么相匹配的 catch 子句就会执行，然后控制就会进入 finally 块（如果有的话）。</p>

<p>　　finalize?方法名。Java 技术允许使用 finalize（） 方法在垃圾收集器将对象从内存中清除出去之前做必要的清理工作。这个方法是由垃圾收集器在确定这个对象没有被引用时对这个对象调用的。它是在 Object 类中定义的，因此所有的类都继承了它。子类覆盖 finalize（） 方法以整理系统资源或者执行其他清理工作。finalize（） 方法是在垃圾收集器删除对象之前对这个对象调用的。</p>

<p>　　第二，Anonymous Inner Class （匿名内部类） 是否可以extends（继承）其它类，是否可以implements（实现）interface（接口）？</p>

<p>　　匿名的内部类是没有名字的内部类。不能extends（继承） 其它类，但一个内部类可以作为一个接口，由另一个内部类实现。</p>

<p>　　第三，Static Nested Class 和 Inner Class的不同，说得越多越好（面试题有的很笼统）。</p>

<p>　　Nested Class （一般是C++的说法），Inner Class （一般是JAVA的说法）。Java内部类与C++嵌套类最大的不同就在于是否有指向外部的引用上。具体可见http： //www.frontfree.net/articles/services/view.asp？id=704&amp;page=1注： 静态内部类（Inner Class）意味着1创建一个static内部类的对象，不需要一个外部类对象，2不能从一个static内部类的一个对象访问一个外部类对象</p>

<p>　　第四，&amp;和&amp;&amp;的区别。</p>

<p>　　&amp;是位运算符。&amp;&amp;是布尔逻辑运算符。</p>

<p>　　第五，HashMap和Hashtable的区别。</p>

<p>　　都属于Map接口的类，实现了将惟一键映射到特定的值上。</p>

<p>　　HashMap 类没有分类或者排序。它允许一个 null 键和多个 null 值。</p>

<p>　　Hashtable 类似于 HashMap，但是不允许 null 键和 null 值。它也比 HashMap 慢，因为它是同步的。</p>

<p>　　第六，Collection 和 Collections的区别。</p>

<p>　　Collections是个java.util下的类，它包含有各种有关集合操作的静态方法。</p>

<p>　　Collection是个java.util下的接口，它是各种集合结构的父接口。</p>

<p>　　第七，什么时候用assert.断言是一个包含布尔表达式的语句，在执行这个语句时假定该表达式为 true.如果表达式计算为 false，那么系统会报告一个 AssertionError.它用于调试目的：assert（a > 0）； // throws an AssertionError if a &lt;= 0断言可以有两种形式：assert Expression1 ；assert Expression1 ： Expression2 ；Expression1 应该总是产生一个布尔值。</p>

<p>　　Expression2 可以是得出一个值的任意表达式。这个值用于生成显示更多调试信息的 String 消息。</p>

<p>　　断言在默认情况下是禁用的。要在编译时启用断言，需要使用 source 1.4 标记：javac -source 1.4 Test.java要在运行时启用断言，可使用 -enableassertions 或者 -ea 标记。</p>

<p>　　要在运行时选择禁用断言，可使用 -da 或者 -disableassertions 标记。</p>

<p>　　要系统类中启用断言，可使用 -esa 或者 -dsa 标记。还可以在包的基础上启用或者禁用断言。</p>

<p>　　可以在预计正常情况下不会到达的任何位置上放置断言。断言可以用于验证传递给私有方法的参数。不过，断言不应该用于验证传递给公有方法的参数，因为不管是否启用了断言，公有方法都必须检查其参数。不过，既可以在公有方法中，也可以在非公有方法中利用断言测试后置条件。另外，断言不应该以任何方式改变程序的状态。</p>

<p>　　第八，GC是什么？ 为什么要有GC？ （基础）。</p>

<p>　　GC是垃圾收集器。Java 程序员不用担心内存管理，因为垃圾收集器会自动进行管理。要请求垃圾收集，可以调用下面的方法之一：System.gc（）</p>

<p>　　Runtime.getRuntime（）。gc（）</p>

<p>　　第九，String s = new String（&#8221;xyz&#8221;）；创建了几个String Object？</p>

<p>　　两个对象，一个是“xyx”，一个是指向“xyx”的引用对象s.</p>

<p>　　第十，Math.round（11.5）等於多少？ Math.round（-11.5）等於多少？</p>

<p>　　Math.round（11.5）返回（long）12，Math.round（-11.5）返回（long）-11；</p>

<p>　　第十一，short s1 = 1； s1 = s1 + 1；有什么错？ short s1 = 1； s1 += 1；有什么错？</p>

<p>　　short s1 = 1； s1 = s1 + 1；有错，s1是short型，s1+1是int型，不能显式转化为short型。可修改为s1 =（short）（s1 + 1） .short s1 = 1； s1 += 1正确。</p>

<p>　　第十二，sleep（） 和 wait（） 有什么区别？ 搞线程的最爱sleep（）方法是使线程停止一段时间的方法。在sleep 时间间隔期满后，线程不一定立即恢复执行。这是因为在那个时刻，其它线程可能正在运行而且没有被调度为放弃执行，除非（a）“醒来”的线程具有更高的优先级（b）正在运行的线程因为其它原因而阻塞。</p>

<p>　　wait（）是线程交互时，如果线程对一个同步对象x 发出一个wait（）调用，该线程会暂停执行，被调对象进入等待状态，直到被唤醒或等待时间到。</p>

<p>　　第十三，Java有没有goto？</p>

<p>　　Goto?java中的保留字，现在没有在java中使用。</p>

<p>　　第十四，数组有没有length（）这个方法？ String有没有length（）这个方法？</p>

<p>　　数组没有length（）这个方法，有length的属性。</p>

<p>　　String有有length（）这个方法。</p>

<p>　　第十五，Overload和Override的区别。Overloaded的方法是否可以改变返回值的类型？</p>

<p>　　方法的重写Overriding和重载Overloading是Java多态性的不同表现。重写Overriding是父类与子类之间多态性的一种表现，重载Overloading是一个类中多态性的一种表现。如果在子类中定义某方法与其父类有相同的名称和参数，我们说该方法被重写 （Overriding）。子类的对象使用这个方法时，将调用子类中的定义，对它而言，父类中的定义如同被“屏蔽”了。如果在一个类中定义了多个同名的方法，它们或有不同的参数个数或有不同的参数类型，则称为方法的重载（Overloading）。Overloaded的方法是可以改变返回值的类型。</p>

<p>　　第十六，Set里的元素是不能重复的，那么用什么方法来区分重复与否呢？ 是用==还是equals（）？ 它们有何区别？</p>

<p>　　Set里的元素是不能重复的，那么用iterator（）方法来区分重复与否。equals（）是判读两个Set是否相等。</p>

<p>　　equals（）和==方法决定引用值是否指向同一对象equals（）在类中被覆盖，为的是当两个分离的对象的内容和类型相配的话，返回真值。</p>

<p>　　第十七，给我一个你最常见到的runtime exception. ArithmeticException， ArrayStoreException， BufferOverflowException， BufferUnderflowException， CannotRedoException， CannotUndoException， ClassCastException， CMMException， ConcurrentModificationException， DOMException， EmptyStackException， IllegalArgumentException， IllegalMonitorStateException， IllegalPathStateException， IllegalStateException，ImagingOpException， IndexOutOfBoundsException， MissingResourceException， NegativeArraySizeException， NoSuchElementException， NullPointerException， ProfileDataException， ProviderException， RasterFormatException， SecurityException， SystemException， UndeclaredThrowableException， UnmodifiableSetException， UnsupportedOperationException</p>

<p>　　第十八，error和exception有什么区别？</p>

<p>　　error 表示恢复不是不可能但很困难的情况下的一种严重问题。比如说内存溢出。不可能指望程序能处理这样的情况。</p>

<p>　　exception 表示一种设计或实现问题。也就是说，它表示如果程序运行正常，从不会发生的情况。</p>

<p>　　第十九，List， Set， Map是否继承自Collection接口？</p>

<p>　　List，Set是</p>

<p>　　Map不是</p>

<p>　　第二十，abstract class和interface有什么区别？</p>

<p>　　声明方法的存在而不去实现它的类被叫做抽象类（abstract class），它用于要创建一个体现某些基本行为的类，并为该类声明方法，但不能在该类中实现该类的情况。不能创建abstract 类的实例。然而可以创建一个变量，其类型是一个抽象类，并让它指向具体子类的一个实例。不能有抽象构造函数或抽象静态方法。Abstract 类的子类为它们父类中的所有抽象方法提供实现，否则它们也是抽象类为。取而代之，在子类中实现该方法。知道其行为的其它类可以在类中实现这些方法。</p>

<p>　　接口（interface）是抽象类的变体。在接口中，所有方法都是抽象的。多继承性可通过实现这样的接口而获得。接口中的所有方法都是抽象的，没有一个有程序体。接口只可以定义static final成员变量。接口的实现与子类相似，除了该实现类不能从接口定义中继承行为。当类实现特殊接口时，它定义（即将程序体给予）所有这种接口的方法。然后，它可以在实现了该接口的类的任何对象上调用接口的方法。由于有抽象类，它允许使用接口名作为引用变量的类型。通常的动态联编将生效。引用可以转换到接口类型或从接口类型转换，instanceof 运算符可以用来决定某对象的类是否实现了接口。</p>

<p>　　第二十一，abstract的method是否可同时是static，是否可同时是native，是否可同时是synchronized？</p>

<p>　　都不能</p>

<p>　　第二十二，接口是否可继承接口？ 抽象类是否可实现（implements）接口？ 抽象类是否可继承实体类（concrete class）？</p>

<p>　　接口可以继承接口。抽象类可以实现（implements）接口，抽象类是否可继承实体类，但前提是实体类必须有明确的构造函数。</p>

<p>　　第二十三，启动一个线程是用run（）还是start（）？</p>

<p>　　启动一个线程是调用start（）方法，使线程所代表的虚拟处理机处于可运行状态，这意味着它可以由JVM调度并执行。这并不意味着线程就会立即运行。run（）方法可以产生必须退出的标志来停止一个线程。</p>

<p>　　第二十四，构造器Constructor是否可被override？</p>

<p>　　构造器Constructor不能被继承，因此不能重写Overriding，但可以被重载Overloading.</p>

<p>　　第二十五，是否可以继承String类？</p>

<p>　　String类是final类故不可以继承。</p>

<p>　　第二十六，当一个线程进入一个对象的一个synchronized方法后，其它线程是否可进入此对象的其它方法？</p>

<p>　　不能，一个对象的一个synchronized方法只能由一个线程访问。</p>

<p>　　第二十七，try {}里有一个return语句，那么紧跟在这个try后的finally {}里的code会不会被执行，什么时候被执行，在return前还是后？</p>

<p>　　会执行，在return前执行。</p>

<p>　　第二十八，编程题： 用最有效率的方法算出2乘以8等於几？</p>

<p>　　有C背景的程序员特别喜欢问这种问题。</p>

<p>　　2 &lt;&lt; 3</p>

<p>　　第二十九，两个对象值相同（x.equals（y） == true），但却可有不同的hash code，这句话对不对？</p>

<p>　　不对，有相同的hash code.</p>

<p>　　第三十，当一个对象被当作参数传递到一个方法后，此方法可改变这个对象的属性，并可返回变化后的结果，那么这里到底是值传递还是引用传递？</p>

<p>　　是值传递。Java 编程语言只由值传递参数。当一个对象实例作为一个参数被传递到方法中时，参数的值就是对该对象的引用。对象的内容可以在被调用的方法中改变，但对象的引用是永远不会改变的。</p>

<p>　　第三十一，swtich是否能作用在byte上，是否能作用在long上，是否能作用在String上？</p>

<p>　　switch（expr1）中，expr1是一个整数表达式。因此传递给 switch 和 case 语句的参数应该是 int、 short、 char 或者 byte.long，string 都不能作用于swtich.</p>

<p>　　第三十二，编程题： 写一个Singleton出来。</p>

<p>　　Singleton模式主要作用是保证在Java应用程序中，一个类Class只有一个实例存在。</p>

<p>　　一般Singleton模式通常有几种种形式：第一种形式： 定义一个类，它的构造函数为private的，它有一个static的private的该类变量，在类初始化时实例话，通过一个public的getInstance方法获取对它的引用，继而调用其中的方法。</p>

<p>　　public class Singleton { private Singleton（）{} //在自己内部定义自己一个实例，是不是很奇怪？</p>

<p>　　//注意这是private 只供内部调用private static Singleton instance = new Singleton（）；//这里提供了一个供外部访问本class的静态方法，可以直接访问public static Singleton getInstance（） { return instance；}第二种形式：public class Singleton { private static Singleton instance = null；public static synchronized Singleton getInstance（） { //这个方法比上面有所改进，不用每次都进行生成对象，只是第一次//使用时生成实例，提高了效率！</p>

<p>　　if （instance==null）</p>

<p>　　instance＝new Singleton（）；return instance； 　　} }其他形式：定义一个类，它的构造函数为private的，所有方法为static的。</p>

<p>　　一般认为第一种形式要更加安全些第三十三 Hashtable和HashMap Hashtable继承自Dictionary类，而HashMap是Java1.2引进的Map interface的一个实现</p>

<p>　　HashMap允许将null作为一个entry的key或者value，而Hashtable不允许</p>

<p>　　还有就是，HashMap把Hashtable的contains方法去掉了，改成containsvalue和containsKey.因为contains方法容易让人引起误解。</p>

<p>　　最大的不同是，Hashtable的方法是Synchronize的，而HashMap不是，在多个线程访问Hashtable时，不需要自己为它的方法实现同步，而HashMap就必须为之提供外同步。</p>

<p>　　Hashtable和HashMap采用的hash/rehash算法都大概一样，所以性能不会有很大的差异。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[缤纷（二）]]></title>
    <link href="http://www.wangchaoqun.com/blog/2006/10/24/bin-fen-2/"/>
    <updated>2006-10-24T14:21:05+08:00</updated>
    <id>http://www.wangchaoqun.com/blog/2006/10/24/bin-fen-2</id>
    <content type="html"><![CDATA[<p>想了很久，总要为了自己已经走过的二十年做些什么呢？现在坐在图书馆里，自己独占了四五个位子——这样的晚上，大家还是很少出来吧。看不见对面的钟，有的只是酒店的霓虹，还有极能挑动大家神经的音乐——有人在搞什么舞会，喧闹……­</p>

<p>  突然想到寂寞，有一首歌就是叫做《寂寞在唱歌》，凄婉的感觉，“……你听寂寞在唱歌,轻轻的,狠狠的,歌声是这么残忍,让人忍不住泪流成河……”或者每个人都有这种经历：你心平静，静到能听到自己的心跳，耳边飘着一首歌，让你哽咽，让你泪流，让你抽泣……很多人不喜欢，寂寞，有时候它却能够带给你很多很多你所需要的东西，就像聆听寂寞在唱歌——那是一种自由，或是对影成三人的自由，你可以去触摸，去抓住自己赤裸的灵魂；去品味，去探求天与地，生与死之间的万物，或是去想想存在是什么……</p>

<!--more-->


<p>
二十年，长吗?当然长了，不然，怎能经历那么多事情，全部存在自己的记忆里，能够如数家珍的话，至少得花上几天吧。有些事还是应该做的——回头看看自己走过的路，那路边的风景，还有那些走进走出你生命的人儿……­</p>

<p>  人生苦短，但在人生中，二十年就根本不算什么了。当我回首，想到人生充满苦难的时候，有些庆幸：相比而言，走过的磕磕碰碰，勉强算的上是些不大不小的挫折之类，更别提什么苦难了。文天祥说“痛定思痛，痛何如痛哉？”，过去的东西，可以被淡化了，你很难再清晰的感受当时的心境；生老病死，时运不济，悲欢离合……别人看来，或是大大的苦难了。但是上天对你不薄，想到这些会有什么呢？信心激情，充溢胸间：明天，太阳还是新的……­</p>

<p>  缤纷，很好的一个词，前些时候写了一篇缤纷（一），是些回忆的文字，却如同沧海之一粟——每个人的故事都能说上几天几夜的。很多事情会有原因，就像我写的那篇缤纷，初衷嘛，环顾四周，更如这网络，有多少人是你了解的，又有多少人是了解你的，还有，你自己又了解你多少呢？­</p>

<p>一二三，三篇足矣，因为水平不够，写不了太多；多了反而让别人挠头，自己迷失——还是要找到自己。沧海之一粟，希望一滴水珠真的能够折射太阳的光辉吧。­</p>

<p>  思绪还是无头绪——静下来吧，静下来吧……­</p>

<p>  时间，很奇妙的东西。她悄悄的来到人们面前，一笑而过——没有丝毫的留恋，没有一丁点怜惜，却带走了太多的东西。看看此间天空中的月，薄纱似的轻云飘过，朦朦胧胧，投在地上……<br/>
  有些东西，还是深埋在心地吧……我只想说，珍惜现在，你现在的所有；别把所有都押在明天，或者，明天你会一无所有……­</p>

<p>  远了，思绪跑的太远了；我的“领地”——旁边的位子都有同学坐了，抬头望望，皎洁的月，还有几颗星。­</p>

<p>  写一点收获吧，至少这二十年没有白活，也不后悔走这一遭。­</p>

<p>信念：简约不简单，自信不自负；相信一切都是可能的，但世上没有不劳而获的东西，你必需努力！­</p>

<p>不放松：永远不放松对自己的要求，永远不放松自己的准则和人生的信念！­</p>

<p>坚持：在你坚持不下的时候，咬咬牙，再坚持一会，再坚持一会……从绝望中寻找希望，永不言弃！­</p>

<p>自以为是：别为自己或别人下定论，因为一切皆有可能——猴子对着键盘，也能敲打出一部《圣经》，虽然时间可能是一亿年！­</p>

<p>尊严：除了你自己，没有人会为你而保留它，而你要做的就是——有实力！­</p>

<p>公平：别去抱怨什么不公平，你的不公平恰是别人的公平，你只需努力去争取自己的那份公平！­</p>

<p>爱情：追求你真正爱的人，只要自己认为是值得的，那就是值得的！坚持或放弃，我是说对爱情来说，重要的是坚持你的选择！­</p>

<p>时间：它能冲淡很多东西，快乐的痛苦的；试着每天重复做同一件事，不是吃饭或睡觉之类，比如早起。­</p>

<p>拿出勇气，希望不会遥远，梦想一定实现！­</p>

<p>从来没有像现在这样，我的心里充满着对生活的热切渴望，哪怕要面对无数的挫折，失败，苦难，因为­</p>

<p>You，Keep Fighting，Never Give Up!­</p>

<p>人生，一帆风顺固然值得羡慕，艰辛坎坷更应该赢得尊敬；人生苦短，风景恰在那些曲曲折折中——精彩人生­</p>

<p>Fighting！（加油）我准备好了！­</p>

<p>PS:­</p>

<p>写到这里，心里平静了许多；终于还是快奔三的人了，想起了那句“我们还年轻”，应该是“我们青春无悔”更好些。二十年，有收获，更多的还是没有的经历；爱情嘛，我又懂得多少呢，或是理想主义更恰当：）­</p>

<p>   很多时候，我觉得自己是自作解人，自以为是；也许是妄自菲薄，或是不自信（好像冯巩说过），我想情况还不太糟——如果这算是自我批评反思的话，你说，是自信呢还是不自信？­</p>

<pre><code>  记录自己的轨迹，回头看看走过的路……后来，再后来……我依然能够找到自己­
                                          ——献给我那已然成为记忆的二十年的美丽人生
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[缤纷（一）]]></title>
    <link href="http://www.wangchaoqun.com/blog/2006/08/08/bin-fen-1/"/>
    <updated>2006-08-08T13:25:45+08:00</updated>
    <id>http://www.wangchaoqun.com/blog/2006/08/08/bin-fen-1</id>
    <content type="html"><![CDATA[<p>“记忆是阵阵花香，一起走过谁都不能忘……你比我勇敢……”­</p>

<p>花香常在，时光却如流水般，一去不再。有人说，回忆过去是老的表现，我觉得老就老了，反正你不会越活越年轻，只要有一颗年轻的心，对这生活充满着虔诚的向往，你就不会老去。很多时候，我们说大胆的向前走吧，不要再回头……向前看没错，可也要停下来回首，看看亲爱的人，看看走过的路……人生本不算长，几十年的光景，匆匆走过，留下些美丽的回忆；吹去灰尘，打开记忆的匣子，回味……然后，收起记忆，勇敢的出发吧。­<!--more--></p>

<p>今天整个下午是在人民广场度过的，广场的名字是我问了N个人之后才知道的，汗吧，胶州话听不懂。坐在广场边的石凳上，看着里面人们玩乐，老少闲适，怡然之景，我越来越喜欢这儿了。­</p>

<p>可思绪却很奇怪，它总会跑得很远，收不住……­</p>

<p>先生说“其实地上本没有路，走的人多了，也便成了路”，又使我想起走过的那条乡间小路，从小学走到初中毕业，是七八年，而不是走几遍。记忆中小路其实很普通，一边是麦地，另一边是几排白杨树，沿着小路种下。春天我们会爬上树折树枝，抽掉条做喇叭，长长的吹起来很响，很招摇；夏天拿了绳子系在两树之间，荡秋千，或是晚上去捉知了猴，往往能捉到好几十个，晚了，伙伴们十几个会大呼小叫的回家……­</p>

<p>时光啊，玩玩闹闹，童年走到少年，初中、高中，考了大学……还会想起的小路，寒假里又走了一遍，已是不复存在：没有了白杨树，也没有了曾经的麦田，有的只是一条宽宽的柏油路和路边整齐的房屋和商店，闲适的人们坐在门前，笑语夹在过往汽车声中，欣欣然的景象。没去观光那拥有我童年的小学校，估计会变得漂亮了吧。玩耍的童年，快乐的时光，美丽的记忆，任它尘封……­</p>

<p>以后的日子竟是飞逝，初中三年、然后高中三年，像是刚入学，转眼间已近毕业。那时候同窗忙着填纪念册，总要留下点什么吧，毕竟三年最好的光景。虽是如此，我没有一点感觉，并没有什么可留恋的。学习，生活……三年来感觉很充实，没有什么遗憾和后悔之类，抑或是后面还有高考，高中生活还没结束，纪念册以后再说。事实很无奈，高考之后，同窗就没见过几次，或许是大家新的生活即将开始，或许明天就要天南地北了，都忙吧。在即将开学的那些日子，心中那别离的苦楚日日积压，翻看着纪念册里的留言，想起在一起的日子，到最后还是一了百了：再见了，我的花季雨季还有那群不知走向何处的兄弟们……­</p>

<p>有些失望，又带着一丝憧憬，开始了我的大学生活。“大学，对某些人来说是一个美丽、浪漫，挥洒青春快乐的地方；对某些人来说是一个展示自我、尽显个人风采的地方；对某些人来说是为自己生命之光爆发的那一刻默默积蓄力量的地方；对某些人来说是一个与世无争、平平淡淡走一生的驿站。所以，有人说，大学是一个“染缸”，能够染出五颜六色的布来；有人说，大学像一面镜子，能折射出各种各样的面孔……”很早就听比我大几岁的哥哥姐姐这样评价大学，不同的是那时候只有向往，还要努力，并没有任何体会。­</p>

<p>现在却是大学时光过了一半，转眼开学升大三，心中自然明白了很多。明白了“知道不知道，不知道不知道，不知道知道，知道知道”，明白了兄弟们为啥时常感慨时光流逝，岁月匆匆；明白了为啥大学生比洋葱都便宜，也明白了洋葱和洋葱是不一样的……还有那些纯或不纯的恋情……是生活的旅程，是一无所获，两手空空遗憾的，是心中自有那挥斥方遒的壮志激情，是Just a game抑或铭心刻骨的儿女情长……于我，逝去的日子，我不后悔，因为心中还有一份渴求生活奋发的情感，我的大学也会留下无尽的精彩……­</p>

<p>灿烂的夏天，送走了亲爱的兄弟，他们毕业了，我们还有两年。那些人，那些留恋的光阴；那些日，那些醉人的故事……依依惜别，现实却不容，但在最后的日子里我们尽情享受，释放……同样的心情，从每一个人的眼神中，都可以读到；同样的故事，年复一年，在毕业生中重演，走向各自的远方，带着永恒的祝福……­</p>

<p>就不要想太多，留到两年之后吧，舍不得蓝的天空狂的风，舍不得小池边的柳树，舍不得洞门山上的蔓藤松子，还有拿馒头屑砸过的那些鱼儿……已成回忆­</p>

<p>“随风奔跑自由是方向，追逐雷和闪电的力量，把浩瀚的海洋装进我胸膛，即使再小的帆也能远航；随风飞翔有梦做翅膀，敢爱敢做勇敢闯一闯，哪怕遇见再大的风，再大的浪，也会有默契的目光……”唱起我们心爱的歌，去拥抱我们的完美生活……­</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tags Test]]></title>
    <link href="http://www.wangchaoqun.com/blog/2004/01/09/tags-test/"/>
    <updated>2004-01-09T09:48:58+08:00</updated>
    <id>http://www.wangchaoqun.com/blog/2004/01/09/tags-test</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
</feed>
