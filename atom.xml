<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[超群的博客]]></title>
  <link href="http://wangchaoqun.com/atom.xml" rel="self"/>
  <link href="http://wangchaoqun.com/"/>
  <updated>2014-04-17T16:58:12+08:00</updated>
  <id>http://wangchaoqun.com/</id>
  <author>
    <name><![CDATA[wang chaoqun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Spring Cache之Ehcache和Memcached]]></title>
    <link href="http://wangchaoqun.com/blog/2014/04/spring-cache-zhi-ehcache-he-memcached.html/"/>
    <updated>2014-04-15T14:52:05+08:00</updated>
    <id>http://wangchaoqun.com/blog/2014/04/spring-cache-zhi-ehcache-he-memcached</id>
    <content type="html"><![CDATA[<p>spring框架从3.1版本开始提供了缓存支持：在spring-context.jar里的org.springframework.cache包，以及spring-context-support.jar里的org.springframework.cache包；而且提供了基于ConcurrentHashMap、JCacheCache、EhCache、GuavaCache的实现。<br/>
这里我们先看下基于EhCache的使用，然后考虑<a target=_self href="http://wangchaoqun.com/blog/2014/04/spring-cache-zhi-ehcache-he-memcached.html/#memcached">集成Memcached</a>；版本：spring3.2和spring4，EhCache2.7，spyMemcached2.8；<br/>
内容还涉及HashMap、LinkedHashMap、synchronizedMap、ConcurrentHashMap、ReentrantLock……  <br/>
<a href="http://docs.spring.io/spring/docs/4.0.x/spring-framework-reference/html/cache.html">参考资料：spring framework 4.0.x reference</a><!--more--><a href='http://wangchaoqun.com' style='color:#f5f5f5;text-decoration:none;'>wang chaoqun</a></p>

<h2>一、EhCache配置  </h2>

<h3>1. 添加相关jar，添加ehcache.xml</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;ehcache</span> <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
</span><span class='line'>    <span class="na">xsi:noNamespaceSchemaLocation=</span><span class="s">&quot;ehcache.xsd&quot;</span> <span class="na">updateCheck=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>  <span class="na">monitoring=</span><span class="s">&quot;autodetect&quot;</span> <span class="na">dynamicConfig=</span><span class="s">&quot;true&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;diskStore</span> <span class="na">path=</span><span class="s">&quot;java.io.tmpdir&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;defaultCache</span> <span class="na">maxElementsInMemory=</span><span class="s">&quot;10000&quot;</span> <span class="na">maxElementsOnDisk=</span><span class="s">&quot;100000&quot;</span>
</span><span class='line'>      <span class="na">eternal=</span><span class="s">&quot;false&quot;</span> <span class="na">timeToIdleSeconds=</span><span class="s">&quot;120&quot;</span> <span class="na">timeToLiveSeconds=</span><span class="s">&quot;120&quot;</span> <span class="na">overflowToDisk=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>      <span class="na">diskPersistent=</span><span class="s">&quot;false&quot;</span> <span class="na">diskExpiryThreadIntervalSeconds=</span><span class="s">&quot;120&quot;</span> <span class="na">memoryStoreEvictionPolicy=</span><span class="s">&quot;LRU&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;cache</span> <span class="na">name=</span><span class="s">&quot;notice_cache&quot;</span> <span class="na">maxElementsInMemory=</span><span class="s">&quot;10000&quot;</span> <span class="na">maxElementsOnDisk=</span><span class="s">&quot;100000&quot;</span>
</span><span class='line'>      <span class="na">eternal=</span><span class="s">&quot;true&quot;</span> <span class="na">overflowToDisk=</span><span class="s">&quot;true&quot;</span> <span class="na">diskSpoolBufferSizeMB=</span><span class="s">&quot;50&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/ehcache&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>属性意义基本明确，这里我配置了一个名称是notice_cache的cache节点，其他的可以按此添加。</p>

<h3>2. spring-cache.xml</h3>

<p>配置cacheManager和cacheManagerFactory，并将ehcache.xml配入即可</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;beans</span> <span class="na">xmlns=</span><span class="s">&quot;http://www.springframework.org/schema/beans&quot;</span>
</span><span class='line'>  <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="na">xmlns:cache=</span><span class="s">&quot;http://www.springframework.org/schema/cache&quot;</span>
</span><span class='line'>  <span class="na">xmlns:p=</span><span class="s">&quot;http://www.springframework.org/schema/p&quot;</span>
</span><span class='line'>  <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd</span>
</span><span class='line'><span class="s">      http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;cache:annotation-driven</span> <span class="na">cache-manager=</span><span class="s">&quot;cacheManager&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">&quot;cacheManager&quot;</span> <span class="na">class=</span><span class="s">&quot;org.springframework.cache.ehcache.EhCacheCacheManager&quot;</span>
</span><span class='line'>      <span class="na">p:cacheManager-ref=</span><span class="s">&quot;cacheManagerFactory&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      
</span><span class='line'>  <span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">&quot;cacheManagerFactory&quot;</span> <span class="na">class=</span><span class="s">&quot;org.springframework.cache.ehcache.EhCacheManagerFactoryBean&quot;</span>
</span><span class='line'>      <span class="na">p:configLocation=</span><span class="s">&quot;classpath:ehcache.xml&quot;</span> <span class="na">p:shared=</span><span class="s">&quot;false&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/beans&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>3. @Cacheable\@CacheEvict\@CachePut\@Caching&hellip;</h3>

<p>注解加在相应方法上，支持spel，详细参见文档<a href="http://docs.spring.io/spring/docs/4.0.x/spring-framework-reference/html/cache.html">查阅spring 4.0.x reference</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Cacheable</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">&quot;notice_cache&quot;</span><span class="o">,</span> <span class="n">key</span> <span class="o">=</span> <span class="s">&quot;&#39;notice&#39;+#id&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="n">Notice</span> <span class="nf">get</span><span class="o">(</span><span class="n">String</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">noticeDao</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Cacheable</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">&quot;notice_cache&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Notice</span><span class="o">&gt;</span> <span class="nf">search</span><span class="o">(</span><span class="n">String</span> <span class="n">keywords</span><span class="o">,</span> <span class="n">Date</span> <span class="n">fromTime</span><span class="o">,</span> <span class="n">Date</span> <span class="n">toTime</span><span class="o">,</span> <span class="n">Integer</span><span class="o">[]</span> <span class="n">status</span><span class="o">,</span> <span class="n">Page</span> <span class="n">page</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="c1">//...</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>至此配置完了，run一下，报错：没有序列化，将vo实现Serializable接口</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Notice</span> <span class="kd">implements</span> <span class="n">Serializable</span> <span class="o">{</span>
</span></code></pre></td></tr></table></div></figure>


<p>标签：<a href="http://wangchaoqun.com/blog/categories/spring">spring</a></p>

<p>这样ehcache集成完了，get方法对同一条记录只从数据库查询一次，cache是成功的，但search方法却一直读库，这里没有设置cache的key，设置的话如果是固定的，那么每次结果集都一样，不会更新；文档说不设key，将使用默认key生成器DefaultKeyGenerator：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultKeyGenerator</span> <span class="kd">implements</span> <span class="n">KeyGenerator</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">NO_PARAM_KEY</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">NULL_PARAM_KEY</span> <span class="o">=</span> <span class="mi">53</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Object</span> <span class="nf">generate</span><span class="o">(</span><span class="n">Object</span> <span class="n">target</span><span class="o">,</span> <span class="n">Method</span> <span class="n">method</span><span class="o">,</span> <span class="n">Object</span><span class="o">...</span> <span class="n">params</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">params</span><span class="o">.</span><span class="na">length</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="o">(</span><span class="n">params</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">?</span> <span class="n">NULL_PARAM_KEY</span> <span class="o">:</span> <span class="n">params</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">params</span><span class="o">.</span><span class="na">length</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">NO_PARAM_KEY</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">hashCode</span> <span class="o">=</span> <span class="mi">17</span><span class="o">;</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="n">Object</span> <span class="n">object</span> <span class="o">:</span> <span class="n">params</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">hashCode</span> <span class="o">=</span> <span class="mi">31</span> <span class="o">*</span> <span class="n">hashCode</span> <span class="o">+</span> <span class="o">(</span><span class="n">object</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">?</span> <span class="n">NULL_PARAM_KEY</span> <span class="o">:</span> <span class="n">object</span><span class="o">.</span><span class="na">hashCode</span><span class="o">());</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">Integer</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">hashCode</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>问题</strong>就在于object.hashCode()，看方法的参数string没问题，date没问题，Integer数组使用的就是Object类的hashCode是个内存地址，每次执行都变，要改用Arrays.hashCode(array)才不会变；<br/>
当然，分页类page也要重写hashCode；顺便说下，apache的commons-lang.jar提供了EqualsBuilder、HashCodeBuilder、ToStringBuilder可用于重写各方法。还要<strong>注意</strong>：分页列表不仅要缓存list，还要缓存分页信息，这样到前端才会分页，否则是不知道这个list是多少页的，故方法的返回值（上面search方法只返回list是不行的）可采用类似<code>org.springframework.data.domain.Page</code>内部包含结果集</p>

<h4>4. 自定义key生成器</h4>

<p>解决上面问题：重写生成器（继承DefaultKeyGenerator，需要注意的是对于param是list,set,map取hashcode，其泛型类也要重写hashCode方法）并配置:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;</span><span class="nl">cache:</span><span class="n">annotation</span><span class="o">-</span><span class="n">driven</span> <span class="n">cache</span><span class="o">-</span><span class="n">manager</span><span class="o">=</span><span class="s">&quot;cacheManager&quot;</span> <span class="n">key</span><span class="o">-</span><span class="n">generator</span><span class="o">=</span><span class="s">&quot;keyGenerator&quot;</span><span class="o">/&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">bean</span> <span class="n">id</span><span class="o">=</span><span class="s">&quot;keyGenerator&quot;</span> <span class="n">class</span><span class="o">=</span><span class="s">&quot;......CustomKeyGenerator&quot;</span> <span class="o">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">CustomKeyGenerator</span> <span class="kd">extends</span> <span class="n">DefaultKeyGenerator</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Object</span> <span class="nf">generate</span><span class="o">(</span><span class="n">Object</span> <span class="n">target</span><span class="o">,</span> <span class="n">Method</span> <span class="n">method</span><span class="o">,</span> <span class="n">Object</span><span class="o">...</span> <span class="n">params</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">StringBuffer</span> <span class="n">buffer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuffer</span><span class="o">();</span>
</span><span class='line'>      <span class="n">buffer</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">target</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">()).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;.&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">buffer</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">method</span><span class="o">.</span><span class="na">getName</span><span class="o">()).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;.&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">params</span><span class="o">.</span><span class="na">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="n">Object</span> <span class="n">each</span> <span class="o">:</span> <span class="n">params</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">each</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="k">if</span> <span class="o">(</span><span class="n">each</span> <span class="k">instanceof</span> <span class="n">Boolean</span> <span class="o">||</span> <span class="n">each</span> <span class="k">instanceof</span> <span class="n">Character</span> <span class="o">||</span> <span class="n">each</span> <span class="k">instanceof</span> <span class="n">Void</span>
</span><span class='line'>                          <span class="o">||</span> <span class="n">each</span> <span class="k">instanceof</span> <span class="n">Short</span> <span class="o">||</span> <span class="n">each</span> <span class="k">instanceof</span> <span class="n">Byte</span> <span class="o">||</span> <span class="n">each</span> <span class="k">instanceof</span> <span class="n">Double</span>
</span><span class='line'>                          <span class="o">||</span> <span class="n">each</span> <span class="k">instanceof</span> <span class="n">Float</span> <span class="o">||</span> <span class="n">each</span> <span class="k">instanceof</span> <span class="n">Integer</span> <span class="o">||</span> <span class="n">each</span> <span class="k">instanceof</span> <span class="n">Long</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                      <span class="n">buffer</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">each</span><span class="o">);</span>
</span><span class='line'>                  <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">each</span> <span class="k">instanceof</span> <span class="n">Object</span><span class="o">[])</span> <span class="o">{</span>
</span><span class='line'>                      <span class="n">buffer</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">hashCode</span><span class="o">((</span><span class="n">Object</span><span class="o">[])</span> <span class="n">each</span><span class="o">));</span> <span class="c1">// 后面会说到可替换Arrays.deepHashCode</span>
</span><span class='line'>                  <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                      <span class="n">buffer</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">each</span><span class="o">.</span><span class="na">hashCode</span><span class="o">());</span> <span class="c1">// list,map,set其内的元素类型一直才好</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>              <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">buffer</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">NO_PARAM_KEY</span><span class="o">);</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">buffer</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">NO_PARAM_KEY</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">buffer</span><span class="o">.</span><span class="na">toString</span><span class="o">().</span><span class="na">hashCode</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>5. 添加、更新、删除</h4>

<p>显然@Cacheable是缓存，@CacheEvict是擦除，@CachePut相当于擦除后再缓存，对于key是确定的很好，比如getById(id)，update(obj)，其key可以用id，obj.id；update时也可以用@CachePut，要注意update方法要返回更新后的obj，void不行。</p>

<p><strong>问题</strong>又出现了：不明确的key如何更新？例如search，当新添加一条记录后，就不能使用@CacheEvict(value=&ldquo;notice_cache&rdquo;, key=&ldquo;?&rdquo;)，因为取不到key，也不能模糊匹配；这种情况下只能使用@CacheEvict(value = &ldquo;notice_cache&rdquo;, allEntries = true)，将notice_cache所有的缓存擦除，多少有点粗糙，而memcached甚至没有某个cache的removeAll，这就要自己写个MemcachedCache</p>

<p>还有一个<strong>注意事项</strong>：因其使用aop的动态代理，对于内部调用无效，例如publish方法没加cache注解，内部调用update方法（加了@CachePut）更新状态值，但cache不会更新；controller调用service方法可以，controller方法也可以加，但如果参数有request，每次都变，所以没用，一般加在service方法上。</p>

<h2>二、<a name="memcached">集成Memcached</a>  </h2>

<p>背景：现在的项目使用memcached做缓存，基本上是编码式的，在需要的时候，生成key，将value转为json再set到缓存，因此打算使用注解式更优雅的处理，就需要实现spring cache的相关接口和自定义一些方法</p>

<h4>1. spring集成Memcached，使用spyMemcached</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">&quot;memcachedClient&quot;</span> <span class="na">class=</span><span class="s">&quot;net.spy.memcached.spring.MemcachedClientFactoryBean&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;servers&quot;</span> <span class="na">value=</span><span class="s">&quot;${memcached.servers}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;protocol&quot;</span> <span class="na">value=</span><span class="s">&quot;BINARY&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;transcoder&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;bean</span> <span class="na">class=</span><span class="s">&quot;net.spy.memcached.transcoders.SerializingTranscoder&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;compressionThreshold&quot;</span> <span class="na">value=</span><span class="s">&quot;${memcached.transcoder.compressionThreshold}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/bean&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;opTimeout&quot;</span> <span class="na">value=</span><span class="s">&quot;${memcached.opTimeout}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;timeoutExceptionThreshold&quot;</span> <span class="na">value=</span><span class="s">&quot;1998&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;hashAlg&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;value</span> <span class="na">type=</span><span class="s">&quot;net.spy.memcached.DefaultHashAlgorithm&quot;</span><span class="nt">&gt;</span>${memcached.hashAlg}<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;locatorType&quot;</span> <span class="na">value=</span><span class="s">&quot;${memcached.locatorType}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;failureMode&quot;</span> <span class="na">value=</span><span class="s">&quot;${memcached.failureMode}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;useNagleAlgorithm&quot;</span> <span class="na">value=</span><span class="s">&quot;${memcached.useNagleAlgorithm}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/bean&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>properties:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>####memcached config
</span><span class='line'>memcached.servers=ip:port
</span><span class='line'>memcached.protocol=BINARY
</span><span class='line'>memcached.transcoder.compressionThreshold=1024
</span><span class='line'>memcached.opTimeout=1000
</span><span class='line'>memcached.timeoutExceptionThreshold=1998
</span><span class='line'>memcached.hashAlg=KETAMA_HASH
</span><span class='line'>memcached.locatorType=CONSISTENT
</span><span class='line'>memcached.failureMode=Redistribute
</span><span class='line'>memcached.useNagleAlgorithm=false
</span></code></pre></td></tr></table></div></figure>


<p>标签：<a href="http://wangchaoqun.com/blog/categories/tech">技术</a></p>

<h4>2. 实现MemcachedCacheManager和MemcachedCache</h4>

<p>参考ehcache的源码（org.springframework.cache.ehcache包里）：EhCacheCache和EhCacheCacheManager，manager用来获取cache，重写了getCache和loadCaches方法，这样配置在ehcache.xml里的cache name都会实例化成每个EhCacheCache，当执行到@Cacheable的方法上，就会调用getCache(name)获取cache，再根据key取得value；</p>

<p><strong>MemcachedCacheManager</strong>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MemcachedCacheManager</span> <span class="kd">extends</span> <span class="n">AbstractCacheManager</span> <span class="o">{</span>
</span><span class='line'>  <span class="c1">// cache集合</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">Collection</span><span class="o">&lt;</span><span class="n">Cache</span><span class="o">&gt;</span> <span class="n">caches</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">// 注入memcachedClient（后面会有配置）</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">MemcachedClient</span> <span class="n">client</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">MemcachedCacheManager</span><span class="o">()</span> <span class="o">{}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">MemcachedCacheManager</span><span class="o">(</span><span class="n">MemcachedClient</span> <span class="n">client</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">client</span> <span class="o">=</span> <span class="n">client</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setClient</span><span class="o">(</span><span class="n">MemcachedClient</span> <span class="n">client</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">client</span> <span class="o">=</span> <span class="n">client</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">// AbstractCacheManager不允许loadCaches返回空，所以初始化时添加一个默认cache</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="n">Collection</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="n">Cache</span><span class="o">&gt;</span> <span class="n">loadCaches</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">caches</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">caches</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LinkedHashSet</span><span class="o">&lt;</span><span class="n">Cache</span><span class="o">&gt;();</span>
</span><span class='line'>          <span class="n">caches</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">MemcachedCache</span><span class="o">(</span><span class="s">&quot;DEFAULT_CACHE&quot;</span><span class="o">,</span> <span class="n">client</span><span class="o">));</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">caches</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 根据名称获取cache，对应注解里的value如notice_cache，没有就创建并加入cache管理</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Cache</span> <span class="nf">getCache</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Cache</span> <span class="n">cache</span> <span class="o">=</span> <span class="kd">super</span><span class="o">.</span><span class="na">getCache</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">cache</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">cache</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MemcachedCache</span><span class="o">(</span><span class="n">name</span><span class="o">,</span> <span class="n">client</span><span class="o">);</span>
</span><span class='line'>          <span class="kd">super</span><span class="o">.</span><span class="na">addCache</span><span class="o">(</span><span class="n">cache</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">cache</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样应用启动时实例化manager，在执行加缓存注解的的方法时，会调用getCache(获取或新建cache)，根据缓存的key从cache中取值（没有就读库，然后将结果加入cache，下次相同的key就能取到缓存的值了）<br/>
要写MemcachedCache实现<code>org.springframework.cache.Cache</code>接口，先来分析<strong>EhCacheCache</strong>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">EhCacheCache</span> <span class="kd">implements</span> <span class="n">Cache</span> <span class="o">{</span>
</span><span class='line'>  <span class="c1">// 使用Ehcache的cache，来做get,put,evict...，集成memcached就要使用memcachedClient</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">final</span> <span class="n">Ehcache</span> <span class="n">cache</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * Create an {@link EhCacheCache} instance.</span>
</span><span class='line'><span class="cm">  * @param ehcache backing Ehcache instance</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">EhCacheCache</span><span class="o">(</span><span class="n">Ehcache</span> <span class="n">ehcache</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Assert</span><span class="o">.</span><span class="na">notNull</span><span class="o">(</span><span class="n">ehcache</span><span class="o">,</span> <span class="s">&quot;Ehcache must not be null&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Status</span> <span class="n">status</span> <span class="o">=</span> <span class="n">ehcache</span><span class="o">.</span><span class="na">getStatus</span><span class="o">();</span>
</span><span class='line'>      <span class="n">Assert</span><span class="o">.</span><span class="na">isTrue</span><span class="o">(</span><span class="n">Status</span><span class="o">.</span><span class="na">STATUS_ALIVE</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">status</span><span class="o">),</span>
</span><span class='line'>              <span class="s">&quot;An &#39;alive&#39; Ehcache is required - current cache is &quot;</span> <span class="o">+</span> <span class="n">status</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">cache</span> <span class="o">=</span> <span class="n">ehcache</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="c1">// 也就是ehcache.xml里配置的</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">cache</span><span class="o">.</span><span class="na">getName</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="c1">// 底层使用的cache，要改用memcachedClient</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Ehcache</span> <span class="nf">getNativeCache</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">cache</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="c1">// 从cache取值，改用memcachedClient取值</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">ValueWrapper</span> <span class="nf">get</span><span class="o">(</span><span class="n">Object</span> <span class="n">key</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Element</span> <span class="n">element</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">cache</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">key</span><span class="o">);</span>
</span><span class='line'>      <span class="k">return</span> <span class="o">(</span><span class="n">element</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">?</span> <span class="k">new</span> <span class="n">SimpleValueWrapper</span><span class="o">(</span><span class="n">element</span><span class="o">.</span><span class="na">getObjectValue</span><span class="o">())</span> <span class="o">:</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="c1">// 改用memcachedClient存值</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">put</span><span class="o">(</span><span class="n">Object</span> <span class="n">key</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">cache</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="k">new</span> <span class="n">Element</span><span class="o">(</span><span class="n">key</span><span class="o">,</span> <span class="n">value</span><span class="o">));</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="c1">// 擦除delete</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">evict</span><span class="o">(</span><span class="n">Object</span> <span class="n">key</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">cache</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">key</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="c1">// 清空cache，这个是例如@CacheEvict(value = &quot;notice_cache&quot;, allEntries = true)时调用的</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">clear</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">cache</span><span class="o">.</span><span class="na">removeAll</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>好了，来写memcachedCache，<strong>问题来了</strong>：<br/>
1.clear方法，spy的client没有removeAll，clear之类的方法，有个flush是全部清空，服务器N多个cache都会擦掉<br/>
2.@CacheEvict(value = &ldquo;notice_cache&rdquo;, allEntries = true)就是用的clear，“添加个notice都要清掉其他非notice_cache缓存”就很可怕，能不能根据cache名称清除呢？<br/>
3.上面两个实际是一个问题，memcached是key-value存储，所以要对key进行分组，采用一个集合保存key，然后将实际的key-value存入；如果想<strong>模糊匹配</strong>也是可行的，需要在此基础上做修改：key就得用字符串而不是字符串的hashCode了，或者自定义注解</p>

<p>常用的集合数据类型如list，map，set它也支持，考虑到key的字符限制和单个value不超过1MB，使用一个set存储一个cache里所有的key能达到2万以上(看key的字节数)，使用压缩存储的更多，同时使用LRU（如LinkedHashMap，将过期的或长期不用的移除），基本满足使用<br/>
标签：<a href="http://wangchaoqun.com/blog/categories/memcached">memcached</a></p>

<p><strong>MemcachedCache</strong>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MemcachedCache</span> <span class="kd">implements</span> <span class="n">Cache</span> <span class="o">{</span>
</span><span class='line'>  <span class="c1">// 单个cache存储的key最大数量</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">maxElement</span> <span class="o">=</span> <span class="mi">10000</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">// 默认过期时间10天</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">expire</span> <span class="o">=</span> <span class="mi">10</span> <span class="o">*</span> <span class="mi">24</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">*</span> <span class="mi">60</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">MemcachedClient</span> <span class="n">client</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">// 存储key的集合，使用LinkedHashMap实现</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">KeySet</span> <span class="n">keys</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">MemcachedCache</span><span class="o">()</span> <span class="o">{}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">MemcachedCache</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="n">MemcachedClient</span> <span class="n">client</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">keys</span> <span class="o">=</span> <span class="k">new</span> <span class="n">KeySet</span><span class="o">(</span><span class="n">maxElement</span><span class="o">);</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">client</span> <span class="o">=</span> <span class="n">client</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Object</span> <span class="nf">getNativeCache</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">client</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="c1">// ckey是key+cacheName作为前缀，也是最终存入缓存的key</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">ValueWrapper</span> <span class="nf">get</span><span class="o">(</span><span class="n">Object</span> <span class="n">key</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">ckey</span> <span class="o">=</span> <span class="n">toStringWithCacheName</span><span class="o">(</span><span class="n">key</span><span class="o">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">keys</span><span class="o">.</span><span class="na">containsKey</span><span class="o">(</span><span class="n">ckey</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">Object</span> <span class="n">value</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">ckey</span><span class="o">);</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">value</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">?</span> <span class="k">new</span> <span class="n">SimpleValueWrapper</span><span class="o">(</span><span class="n">value</span><span class="o">)</span> <span class="o">:</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="c1">// 将ckey加入key集合并将ckey-value存入缓存</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">put</span><span class="o">(</span><span class="n">Object</span> <span class="n">key</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">ckey</span> <span class="o">=</span> <span class="n">toStringWithCacheName</span><span class="o">(</span><span class="n">key</span><span class="o">);</span>
</span><span class='line'>      <span class="n">keys</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">ckey</span><span class="o">);</span>
</span><span class='line'>      <span class="n">client</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">ckey</span><span class="o">,</span> <span class="n">expire</span><span class="o">,</span> <span class="n">value</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="c1">// 从keys集合清除ckey，并从缓存清除</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">evict</span><span class="o">(</span><span class="n">Object</span> <span class="n">key</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">ckey</span> <span class="o">=</span> <span class="n">toStringWithCacheName</span><span class="o">(</span><span class="n">key</span><span class="o">);</span>
</span><span class='line'>      <span class="n">keys</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">ckey</span><span class="o">);</span>
</span><span class='line'>      <span class="n">client</span><span class="o">.</span><span class="na">delete</span><span class="o">(</span><span class="n">ckey</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="nf">toStringWithCacheName</span><span class="o">(</span><span class="n">Object</span> <span class="n">obj</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">name</span> <span class="o">+</span> <span class="s">&quot;.&quot;</span> <span class="o">+</span> <span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">obj</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="c1">// 遍历清除</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">clear</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="n">ckey</span> <span class="o">:</span> <span class="n">keys</span><span class="o">.</span><span class="na">keySet</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">client</span><span class="o">.</span><span class="na">delete</span><span class="o">(</span><span class="n">ckey</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="n">keys</span><span class="o">.</span><span class="na">clear</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">MemcachedClient</span> <span class="nf">getClient</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">client</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setClient</span><span class="o">(</span><span class="n">MemcachedClient</span> <span class="n">client</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">client</span> <span class="o">=</span> <span class="n">client</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">getKeys</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">keys</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这里keys也可以使用cacheName作为key存入缓存，就需要在put,evict,clear方法里使用<code>client.replace(name, expire, keys);</code>保持更新，但好像成本多了，收益不大</p>

<p><strong>KeySet</strong>继承LinkedHashMap，为了使用removeEldestEntry，满了移除最旧元素，保持initSize:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">KeySet</span> <span class="kd">extends</span> <span class="n">LinkedHashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">max</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">KeySet</span><span class="o">(</span><span class="kt">int</span> <span class="n">initSize</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">(</span><span class="n">initSize</span><span class="o">,</span> <span class="mf">0.75</span><span class="n">F</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">max</span> <span class="o">=</span> <span class="n">initSize</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">add</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">key</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">removeEldestEntry</span><span class="o">(</span><span class="n">Map</span><span class="o">.</span><span class="na">Entry</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">eldest</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="k">this</span><span class="o">.</span><span class="na">max</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>3. 线程安全</h4>

<p>因为要存储keys，所以考虑使用哪种集合：HashSet\HashMap都不是线程安全的，例如<a href="http://coolshell.cn/articles/9606.html">Java HashMap的死循环</a>;<br/>
安全的如Collections.synchronizedMap和ConcurrentHashMap（不允许value为null）；<br/>
两者的区别是锁不同：synchronizedMap使用对象锁，相当于在方法上声明synchronized；ConcurrentHashMap比较复杂，在segment上加锁，将范围控制的很小，因而并发性能就高；<br/>
这里使用LinkedHashMap，ConcurrentHashMap不好包装，synchronizedMap效率低，不如加个ReentrantLock，或者使用读写锁ReentrantReadWriteLock(但这篇文章介绍了读写锁可能存在问题：<a href="http://skydream.iteye.com/blog/1562880">小心LinkedHashMap的get()方法</a>)：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">lock</span><span class="o">.</span><span class="na">lock</span><span class="o">();</span>
</span><span class='line'><span class="k">try</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">client</span><span class="o">.</span><span class="na">set</span><span class="o">(...);</span>
</span><span class='line'><span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">lock</span><span class="o">.</span><span class="na">unlock</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>下面是HashMap占用cpu 100% bug的代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MapTest</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">InterruptedException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">temp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;&gt;(</span><span class="mi">2</span><span class="o">);</span>
</span><span class='line'>      <span class="kd">final</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">map</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>
</span><span class='line'>      <span class="c1">//     final Map&lt;String, String&gt; map = new LinkedHashMap&lt;&gt;(temp);</span>
</span><span class='line'>      <span class="c1">//     final Map&lt;String, String&gt; map = new ConcurrentHashMap&lt;&gt;(temp);</span>
</span><span class='line'>      <span class="c1">//     final Map&lt;String, String&gt; map = Collections.synchronizedMap(temp);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">Thread</span> <span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">Runnable</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>          <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10000</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="k">new</span> <span class="nf">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">Runnable</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>                      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>                          <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">UUID</span><span class="o">.</span><span class="na">randomUUID</span><span class="o">().</span><span class="na">toString</span><span class="o">(),</span> <span class="s">&quot;&quot;</span><span class="o">);</span>
</span><span class='line'>                      <span class="o">}</span>
</span><span class='line'>                  <span class="o">}).</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">});</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="na">join</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>4. Spring 4.0.x Cache</h4>

<p>以上3.2.x使用正常，4.0版本改动了key生成器，源码也很简单：SimpleKeyGenerator和SimpleKey，toString方法将参数转为字符串，嫌长就改用hashCode</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SimpleKeyGenerator</span> <span class="kd">implements</span> <span class="n">KeyGenerator</span> <span class="o">{</span>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Object</span> <span class="nf">generate</span><span class="o">(</span><span class="n">Object</span> <span class="n">target</span><span class="o">,</span> <span class="n">Method</span> <span class="n">method</span><span class="o">,</span> <span class="n">Object</span><span class="o">...</span> <span class="n">params</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">params</span><span class="o">.</span><span class="na">length</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">SimpleKey</span><span class="o">.</span><span class="na">EMPTY</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">params</span><span class="o">.</span><span class="na">length</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">params</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">params</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">new</span> <span class="nf">SimpleKey</span><span class="o">(</span><span class="n">params</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">final</span> <span class="kd">class</span> <span class="nc">SimpleKey</span> <span class="kd">implements</span> <span class="n">Serializable</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">SimpleKey</span> <span class="n">EMPTY</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleKey</span><span class="o">();</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">final</span> <span class="n">Object</span><span class="o">[]</span> <span class="n">params</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * Create a new {@link SimpleKey} instance.</span>
</span><span class='line'><span class="cm">  * @param elements the elements of the key</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">SimpleKey</span><span class="o">(</span><span class="n">Object</span><span class="o">...</span> <span class="n">elements</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Assert</span><span class="o">.</span><span class="na">notNull</span><span class="o">(</span><span class="n">elements</span><span class="o">,</span> <span class="s">&quot;Elements must not be null&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">params</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Object</span><span class="o">[</span><span class="n">elements</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">arraycopy</span><span class="o">(</span><span class="n">elements</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">params</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">elements</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">equals</span><span class="o">(</span><span class="n">Object</span> <span class="n">obj</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="o">(</span><span class="k">this</span> <span class="o">==</span> <span class="n">obj</span> <span class="o">||</span> <span class="o">(</span><span class="n">obj</span> <span class="k">instanceof</span> <span class="n">SimpleKey</span> <span class="o">&amp;&amp;</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">params</span><span class="o">,</span> <span class="o">((</span><span class="n">SimpleKey</span><span class="o">)</span> <span class="n">obj</span><span class="o">).</span><span class="na">params</span><span class="o">)));</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">hashCode</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">hashCode</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">params</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;SimpleKey [&quot;</span> <span class="o">+</span> <span class="n">StringUtils</span><span class="o">.</span><span class="na">arrayToCommaDelimitedString</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">params</span><span class="o">)</span> <span class="o">+</span> <span class="s">&quot;]&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>事实上</strong>，对于复杂的，类似Object数组（下面会有），那么无论是上面自定义keyGenerator还是spring4.0的都会有问题（hashCode和toString，不一致就取不到cache，会每次都读库），测试简单数组如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Integer</span><span class="o">[]</span> <span class="n">array</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Integer</span><span class="o">[]</span> <span class="o">{</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span> <span class="o">};</span>
</span><span class='line'>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">array</span><span class="o">);</span> <span class="c1">// [Ljava.lang.Integer;@5f4fcc96</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">ObjectUtils</span><span class="o">.</span><span class="na">nullSafeToString</span><span class="o">(</span><span class="n">array</span><span class="o">));</span> <span class="c1">// {1, 2, 3} </span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">array</span><span class="o">));</span> <span class="c1">// [1, 2, 3]</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">deepToString</span><span class="o">(</span><span class="n">array</span><span class="o">));</span> <span class="c1">// [1, 2, 3]</span>
</span><span class='line'>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">array</span><span class="o">.</span><span class="na">hashCode</span><span class="o">());</span> <span class="c1">// 1599065238</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">hashCode</span><span class="o">(</span><span class="n">array</span><span class="o">));</span> <span class="c1">// 30817 </span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">deepHashCode</span><span class="o">(</span><span class="n">array</span><span class="o">));</span> <span class="c1">// 30817</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">array</span><span class="o">).</span><span class="na">hashCode</span><span class="o">());</span> <span class="c1">// -412129978</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// StringUtils是spring的：org.springframework.util.StringUtils</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">StringUtils</span><span class="o">.</span><span class="na">arrayToCommaDelimitedString</span><span class="o">(</span><span class="n">array</span><span class="o">));</span> <span class="c1">// 1,2,3</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">StringUtils</span><span class="o">.</span><span class="na">arrayToCommaDelimitedString</span><span class="o">(</span><span class="n">array</span><span class="o">).</span><span class="na">hashCode</span><span class="o">());</span> <span class="c1">//46612798</span>
</span></code></pre></td></tr></table></div></figure>


<p>这个测试Arrays.hashCode(array)和SimpleKey.toString()多次运行是一致的，也就是自定义keyGenerator和SimpleKeyGenerator正确</p>

<p><strong>复杂的</strong>：<code>Object[] mixed = new Object[] { 1, "11", array, list };</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">List</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="n">Lists</span><span class="o">.</span><span class="na">newArrayList</span><span class="o">(</span><span class="n">array</span><span class="o">);</span>
</span><span class='line'><span class="n">Object</span><span class="o">[]</span> <span class="n">mixed</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="mi">1</span><span class="o">,</span> <span class="s">&quot;11&quot;</span><span class="o">,</span> <span class="n">array</span><span class="o">,</span> <span class="n">list</span> <span class="o">};</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">mixed</span><span class="o">);</span> <span class="c1">// [Ljava.lang.Object;@549f9afb</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">ObjectUtils</span><span class="o">.</span><span class="na">nullSafeToString</span><span class="o">(</span><span class="n">mixed</span><span class="o">));</span> <span class="c1">// {1, 11, [Ljava.lang.Integer;@5f4fcc96, [1, 2, 3]}</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">mixed</span><span class="o">));</span> <span class="c1">// [1, 11, [Ljava.lang.Integer;@5f4fcc96, [1, 2, 3]]</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">deepToString</span><span class="o">(</span><span class="n">mixed</span><span class="o">));</span> <span class="c1">// [1, 11, [1, 2, 3], [1, 2, 3]]</span>
</span><span class='line'>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">mixed</span><span class="o">.</span><span class="na">hashCode</span><span class="o">());</span> <span class="c1">// 1419746043</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">hashCode</span><span class="o">(</span><span class="n">mixed</span><span class="o">));</span> <span class="c1">// -1966094197</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">deepHashCode</span><span class="o">(</span><span class="n">mixed</span><span class="o">));</span> <span class="c1">// 3446304</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">mixed</span><span class="o">).</span><span class="na">hashCode</span><span class="o">());</span> <span class="c1">// -691776533</span>
</span><span class='line'>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">StringUtils</span><span class="o">.</span><span class="na">arrayToCommaDelimitedString</span><span class="o">(</span><span class="n">mixed</span><span class="o">));</span> <span class="c1">// 1,11,[Ljava.lang.Integer;@5f4fcc96,[1, 2, 3]</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">StringUtils</span><span class="o">.</span><span class="na">arrayToCommaDelimitedString</span><span class="o">(</span><span class="n">mixed</span><span class="o">).</span><span class="na">hashCode</span><span class="o">());</span> <span class="c1">// 572153479</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>结论</strong>：多次运行发现只有Arrays.deepToString和Arrays.deepHashCode是一致的，也就是对每个元素，如果是数组再递归;同理，如果是集合list,set,map之类，最好使用泛型，类型一致，不要混合</p>

<h2>三、总结  </h2>

<p>spring cache用好要注意很多：<br/>
1、搞清各注解意义和使用时机，逻辑正确，更新一致<br/>
2、缓存key的使用很重要，自定义key要考虑参数的hashCode和toString<br/>
3、返回结果如分页结果集，不仅要有list还要有page<br/>
4、可虑清楚并测试加了Cacheable确实生效？<br/>
5、效益最大化：使用多注解多缓存的情景，一次方法执行缓存多个信息（要更新时也得多个更新，才能保持一致）</p>

<p class='post-footer' style='background:none repeat scroll 0pt 0pt #eee;padding: 5px;margin-top:10px;color:gray;font-size:90%;'>
            &nbsp;原文地址：
            <a href='http://wangchaoqun.com/blog/2014/04/spring-cache-zhi-ehcache-he-memcached.html/'>http://wangchaoqun.com/blog/2014/04/spring-cache-zhi-ehcache-he-memcached.html/</a><br/>
            &nbsp;written by &nbsp;<a href='http://wangchaoqun.com'>wang chaoqun</a> &nbsp;posted at &nbsp;<a href='http://wangchaoqun.com'>http://wangchaoqun.com</a><br/>
            &nbsp;版权声明：自由转载-非商用-非衍生-保持署名 | <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[转]Code Kata：编码套路]]></title>
    <link href="http://wangchaoqun.com/blog/2013/12/zhuan-code-kata-bian-ma-tao-lu.html/"/>
    <updated>2013-12-03T10:39:05+08:00</updated>
    <id>http://wangchaoqun.com/blog/2013/12/zhuan-code-kata-bian-ma-tao-lu</id>
    <content type="html"><![CDATA[<p><a href="http://blog.csdn.net/happydeer/article/details/17023229" target="_blank">来自happydeer</a><br/>
[正文]
最近，我大量阅读了Steve Yegge的文章。其中有一篇叫“Practicing Programming”（练习编程），写成于2005年，读后令我惊讶不已：</p>

<p>与你所相信的恰恰相反，单纯地每天埋头于工作并不能算是真正意义上的锻炼——参加会议并不能锻炼你的人际交往能力；回复邮件并不能提高你的打字水平。你必须定期留出时间，集中锻炼，这样才能把事情做得更好。<!--more--><a href='http://wangchaoqun.com' style='color:#f5f5f5;text-decoration:none;'>wang chaoqun</a></p>

<p>我认识很多杰出的程序员——这是在亚马逊工作最好的额外“福利”之一。如果仔细观察他们，你会发现他们时时都在锻炼。他们已经很优秀了，但他们仍然不忘锻炼。他们锻炼的方法林林总总，而我在这篇文章中只会介绍其中的几种。</p>

<p>据我了解，这些杰出程序员之所以如此成功，就是因为他们一直在锻炼。完美的身材要靠定期的锻炼才能获得，而且必须坚持锻炼才能保持，否则身材就会走形。对于编程和软件工程来说，道理是一样的。</p>

<p>这是一个重要的区别——我每天都开车去上班，但我的驾驶水平远远不如专业车手；类似的情况，天天编程可能并不足以使你成为一名专业的程序员。那么，什么才能把一个普通人变成一名专业车手或者专业程序员呢？你需要锻炼什么呢？</p>

<p>答案就在《科学美国人》的一篇名为“The Expert Mind”（专家思维）的文章里：</p>

<p>爱立信提出，重要的并不是经验本身，而是“努力的学习”，也就是要不断地挑战自身能力之外的东西。一些狂热的爱好者花费了大量的时间去下棋、打高尔夫球或者玩乐器，但他们可能始终停留在业余水平上，而一个训练有素的学生却可以在相对较短的时间里超越他们，原因就在这里。值得注意的是，在提高水平方面，花费在下棋上的大量时间（即使参加各种比赛）似乎还是比不过专门的训练来得更为有效。训练的主要价值在于发现弱点，并有针对性地进行提高。</p>

<p>“努力的学习”意味着，要常常去处理那些刚好在你能力极限上的问题，也就是那些对你来说有很大可能失败的事情。如果不经历一些失败的话，你可能就不会成长。你必须不断地挑战自我，超越自己的极限。</p>

<p>那样的挑战有时会在工作中碰到，但也未必。将锻炼从职业工作中分离出来，这在编程领域常被人称为“编码套路”（Code Kata）。</p>

<p>Code Kata的概念是由David Thomas提出的，他是《程序员修炼之道：从小工到专家》的作者之一。这个概念主要指的是，针对某一种特定技术或技能进行重复性的练习，从而将其熟练掌握。——译者注</p>

<p>所谓套路，就是一系列的招式。这个概念借鉴于武术。</p>

<p>如果你想要看一些编码套路的例子（也就是努力学习和磨练编程技能的方法），SteveYegge的文章里倒是提出了一些不错的建议。他把它们称作为“实践演练”：
   1.写一份自己的简历。把自己所有的相关技能都罗列出来，然后把那些在100年后还用得到的标出来。给每个技能打分，满分为10分。</p>

<p>   2.罗列出你所景仰的程序员。尽量包括那些与你一起工作的人，因为你会在工作中从他们身上获取一些技能。记录下他们身上的1 ~ 2个闪光点，也就是你希望自己有所提高的方面。</p>

<p>   3.查看维基百科上的“计算机科学”栏目，找到“计算机领域先驱者”这个分类，从这个列表中挑选一个人，阅读他的事迹，并且在阅读时打开任何你感兴趣的链接。</p>

<p>   4.花20分钟通读别人的代码。读出色的代码和读糟糕的代码都是有益的，两者都要读，轮流切换。如果你无法感觉出它们之间的区别，可以求助于一位你尊敬的程序员，让他给你展示一下什么是出色的代码、什么是糟糕的代码。把你读过的代码给别人也看看，问问他们的看法。</p>

<p>   5.罗列出你最喜欢的10个编程工具——那些你觉得你用得最多、非有不行的工具。随机挑选其中的一个工具，花一个小时去阅读它的文档。在这一个小时里，努力去学习这个工具的某个你不曾意识到的新功能，或者发现某种新的使用方法。</p>

<p>   6.想一想，除了编程之外你最擅长什么事情？再想一想，你是通过怎样的锻炼才变得如此熟练和专业的？这对于你的编程工作又有什么启发呢？（怎么把这些经验应用到编程方面？）</p>

<p>   7.拿出一叠简历，并和一组面试官在同一个房间里待上一个小时。确保每份简历都至少被3个面试官看过，并且要给出1 ~ 3分的评分。针对那些不同面试官评判大相径庭的简历展开讨论。</p>

<p>   8.参与一个电话面试。事后写下你的反馈，抛出你的观点，然后与主持电话面试的人聊一聊，看看你们是否达成了一致的结论。</p>

<p>   9.进行一次技术面试，并且被面试的人应该是某个你不太了解的领域里的专家。让他假定听众在该领域里一无所知，因此请他从最基础的讲起。努力去理解他所说的，必要时问一些问题。</p>

<p>   10.有机会参与别人的技术面试。期间，你只是认真地听、认真地学。在应聘者努力解决技术问题的同时，你也要在自己脑子里尝试解决这些问题。</p>

<p>   11.找到一个能和你交换实际问题的人，每隔一周，相互交流编程问题。花10 ~ 15分钟来尝试解决这些问题，再用10 ~ 15分钟进行讨论（无论能否解决）。</p>

<p>   12.当你听到任何你一时之间也无法解决的面试问题时，赶紧回到你的座位上，把这个问题用电子邮件发给自己，以留作日后的提醒。在那一周里找出点时间，用自己最喜欢的编程语言来解决它。</p>

<p>我之所以喜欢Steve开出的这个清单，是因为它看上去很全面。有些程序员一想到“锻炼”，总认为就是一些编码上的难题。但在我看来，编程更在于人，而不是代码。因此，通过解决世上所有的、并且晦涩的编程面试题目，在提高你的个人能力方面，这种方法是有局限的。</p>

<p>关于“努力的学习”，我也很喜欢Peter Norvig在“Teach Yourself Programming in TenYears”（花10年时间自学编程）一文中提出的诸多建议：</p>

<p>   1.与别的程序员交流。读别人的代码。这比任何书籍或培训课程都更重要。</p>

<p>   2.动手写程序！最好的学习方法就是边做边学。</p>

<p>   3.在本科或研究生的课程中学习编程课程。</p>

<p>   4.找一些项目来做，并且需要与其他程序员形成团队来合作。在项目的进行过程中，学会辨别最出色的程序员以及最糟糕的程序员。</p>

<p>   5.在项目中跟随别的程序员一起工作，了解如何维护那些不是你写的代码，并且学习如何写出利于他人维护的代码。</p>

<p>   6.学习多种不同的编程语言，特别是那些与你现在所熟悉的语言有着不同的世界观和编程模型的。</p>

<p>   7.了解硬件对软件的影响。知道你的电脑执行一条指令需要多少时间，从内存中取出一个字（在有缓存或没缓存的情况下）需要多少时间，在以太网（或者因特网）上传输数据需要多少时间，从磁盘中读取连续的数据或者在磁盘上跳转到另一个位置需要多少时间，等等。</p>

<p>你还可以从Dave Thomas的21种实用的编码套路中获取灵感（CodeKata.com），或者你更愿意加入一个你家当地的“编程武馆”（CodingDojo.org）。</p>

<p>对于“努力的学习”，我无法像Steve，Peter或者Dave那样提供一个长长的建议列表。我远不如他们有耐心。实际上，在我看来，“编程套路”只需两个招式：</p>

<p>   1.写博客。我在2004年初创办了CodingHorror.com博客，作为我自己努力学习的一种形式。它在一开始很不起眼，到后来成为我职业生涯中做过的最重要的一件事。所以，你也应该写博客。最后“闻达于天下”的人，往往就是那些能够有效书写和沟通的人。他们的声音最响亮，是他们在制定游戏规则，并且引领世界的潮流。</p>

<p>   2.积极参与著名的开源项目。所有的高谈阔论听起来都很好，但是，你是一个大话王还是一名实干家呢？别光说不练，这个非常重要，因为人们会用你的行动来衡量你，而不是你的言论。努力在公众面前留下些实实在在有用的东西吧，到时候你就可以说，“我在那个项目中出过力。”</p>

<p>当你能编写精彩的代码、并且能用精彩的言辞向世人解释那些代码时，到那时候，我会觉得你已经掌握了最牛的编码套路！</p>

<p class='post-footer' style='background:none repeat scroll 0pt 0pt #eee;padding: 5px;margin-top:10px;color:gray;font-size:90%;'>
            &nbsp;原文地址：
            <a href='http://wangchaoqun.com/blog/2013/12/zhuan-code-kata-bian-ma-tao-lu.html/'>http://wangchaoqun.com/blog/2013/12/zhuan-code-kata-bian-ma-tao-lu.html/</a><br/>
            &nbsp;written by &nbsp;<a href='http://wangchaoqun.com'>wang chaoqun</a> &nbsp;posted at &nbsp;<a href='http://wangchaoqun.com'>http://wangchaoqun.com</a><br/>
            &nbsp;版权声明：自由转载-非商用-非衍生-保持署名 | <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB replSet集群和shard分片]]></title>
    <link href="http://wangchaoqun.com/blog/2013/11/mongodb-replsetji-qun-he-shardfen-pian.html/"/>
    <updated>2013-11-17T16:11:35+08:00</updated>
    <id>http://wangchaoqun.com/blog/2013/11/mongodb-replsetji-qun-he-shardfen-pian</id>
    <content type="html"><![CDATA[<p>mongodb的集群有两种：1.主从(master, slave)  2.副本集(Replica Set)<br/>
区别是副本集没有固定的&#8221;主节点&#8221;, 有一个活跃节点(primary)和  一个或多个备份节点(secondary), 而且可以在活跃节点有问题时自动切换（仲裁\选举方式）<br/>
本文内容的结果是：建立2个分片，每个分片3个备份节点（端口1000x,2000x），2个选举节点（端口10000,20000），1个路由(端口7701，想选7000被占了)，3个config节点(端口660x，想选6000也被占了)，总共12个<!--more--><a href='http://wangchaoqun.com' style='color:#f5f5f5;text-decoration:none;'>wang chaoqun</a></p>

<h4>1. MongoDB集群</h4>

<p>将mongodb的zip解压到不同的文件夹（本文是windows下，linux类似），建立3个节点（1000X是myshard1分片的），注意端口号，启动：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>c:\mongo10001\bin\mongod -f c:\mongo10001\config
</span><span class='line'>c:\mongo10002\bin\mongod -f c:\mongo10002\config
</span><span class='line'>c:\mongo10003\bin\mongod -f c:\mongo10003\config</span></code></pre></td></tr></table></div></figure>


<p>使用config文件配置，mongo10001节点的内容如下，其他相应修改即可：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>port=10001
</span><span class='line'>dbpath=C:\mongo10001\data\
</span><span class='line'>logpath=C:\mongo10001\log\mongo.log
</span><span class='line'>replSet=myshard1/127.0.0.1:10002,127.0.0.1:10003
</span><span class='line'>shardsvr=true
</span><span class='line'>logappend=true
</span><span class='line'>rest=true</span></code></pre></td></tr></table></div></figure>


<p>仲裁节点（可选，要的话后面还有要addArb）</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>c:\mongo10000\bin\mongod -f c:\mongo10000\config
</span><span class='line'>or
</span><span class='line'>c:\mongo10000\bin\mongod --dbpath=c:\mongo10000\data --port 10000 --replSet myshard1/127.0.0.1:10001  </span></code></pre></td></tr></table></div></figure>


<p>将各节点启动后，cmd下连接并执行初始化命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mongo 127.0.0.1:10001/admin
</span><span class='line'>db.runCommand({"replSetInitiate":{ "_id":"myshard1", "members":[{ "_id":1, "host":"127.0.0.1:10001"}, { "_id":2, "host":"127.0.0.1:10002"}, { "_id":3, "host":"127.0.0.1:10003"}] }})</span></code></pre></td></tr></table></div></figure>


<p>这个2000X是myshard2分片的3个节点，需要像前面一样配好、启动、执行，不分片可忽略</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mongo 127.0.0.1:20001/admin
</span><span class='line'>db.runCommand({"replSetInitiate":{ "_id":"myshard2", "members":[{ "_id":1, "host":"127.0.0.1:20001"}, { "_id":2, "host":"127.0.0.1:20002"}, { "_id":3, "host":"127.0.0.1:20003"}] }})</span></code></pre></td></tr></table></div></figure>


<p>查看状态</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rs.status()</span></code></pre></td></tr></table></div></figure>


<p>仲裁节点（可选，前面没配置就不要add了）</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rs.addArb("127.0.0.1:10000")</span></code></pre></td></tr></table></div></figure>


<p></p>

<p><strong>测试</strong>在一个节点导入数据后，查看其他节点数据也有了</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mongorestore -h 127.0.0.1:10001 --directoryperdb b:\mongo\dump</span></code></pre></td></tr></table></div></figure>


<p>
<strong>注意</strong>：关于节点的读写操作
在primary节点中添加数据: db.xxxx.insert
如果在secondary备份节点查询，会出现错误:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>error: { "$err" : "not master and slaveok=false", "code" : 13435 }</span></code></pre></td></tr></table></div></figure>


<p>执行如下语句:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.getMongo().setSlaveOk();</span></code></pre></td></tr></table></div></figure>


<p>这是因为对于replica set中的secondary节点默认是不可读的，由Secondary来分担读的压力，Primary只承担写操作，通过在连接时指定或者在主库指定slaveOk即可</p>

<h4>spring data mongodb的集群配置（未分片）</h4>

<p>原来使用单一mongo的，现在要用集群，就把spring xml配置和properties做相应修改：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;mongo:mongo replica-set="${mongo.replica.set}"/&gt;
</span><span class='line'>
</span><span class='line'>mongo.replica.set=127.0.0.1:10001,127.0.0.1:10002,127.0.0.1:10003</span></code></pre></td></tr></table></div></figure>


<h4>2. MongoDB分片</h4>

<p>[摘录]基本思想就是将集合切分成小块，这些块分散到若干片里面，每个片只负责总数据的一部分；应用程序不必知道
哪片对应哪些数据，甚至不需要知道数据已经被拆分了，所以在分片之前要运行一个路由进程，进程名mongos，这个路由器知道
所有数据的存放位置，所以应用可以连接它来正常发送请求；对应用来说，它仅知道连接了一个普通的mongod；路由器知道和片的
对应关系，能够转发请求到正确的片上；如果请求有了回应，路由器将其收集起来回送给应用。<br/>
标签：<a href="http://wangchaoqun.com/blog/categories/mongodb">mongodb</a><br/>
所以，<strong>在下面的分片完成后</strong>，上面spring data mongodb的集群配置就要<strong>改回单一mongo的，注意要连接的是mongos，不是原来那个</strong></p>

<p>好了，这里要有路由节点和config节点<br/>
开启<strong>config服务器</strong>（我配了3个，为了测试有节点挂掉的情况，这只是第1个），使用参数或config文件启动</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>c:\mongo6001\bin\mongod --dbpath=c:\mongo6001\data --port 6001 --configsvr
</span><span class='line'>c:\mongo6001\bin\mongod -f c:\mongo6001\config</span></code></pre></td></tr></table></div></figure>


<p>config文件：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>port=6001
</span><span class='line'>dbpath=C:\mongo6001\data\
</span><span class='line'>logpath=C:\mongo6001\log\mongo.log
</span><span class='line'>configsvr=true
</span><span class='line'>logappend=true
</span><span class='line'>rest=true</span></code></pre></td></tr></table></div></figure>


<p>开启<strong>mongos服务器</strong>，使用参数或config文件启动</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>c:\mongo7701\bin\mongos --port 7701 --configdb=127.0.0.1:6001
</span><span class='line'>c:\mongo7701\bin\mongos -f c:\mongo7701\config  </span></code></pre></td></tr></table></div></figure>


<p>config文件：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>port=7701
</span><span class='line'>logpath=C:\mongo7701\log\mongo.log
</span><span class='line'>#configdb说明：一个就写一个，多个就写多个，这里是3个
</span><span class='line'>configdb=127.0.0.1:6001,127.0.0.1:6002,127.0.0.1:6003 
</span><span class='line'>logappend=true</span></code></pre></td></tr></table></div></figure>


<p><strong>启动mongod服务器，上面集群配了3个，启动即可（2000X是myshard2分片的，也启动）</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>c:\mongo10001\bin\mongod -f c:\mongo10001\config
</span><span class='line'>c:\mongo10002\bin\mongod -f c:\mongo10002\config
</span><span class='line'>c:\mongo10003\bin\mongod -f c:\mongo10003\config
</span><span class='line'>c:\mongo20001\bin\mongod -f c:\mongo20001\config
</span><span class='line'>c:\mongo20002\bin\mongod -f c:\mongo20002\config
</span><span class='line'>c:\mongo20003\bin\mongod -f c:\mongo20003\config</span></code></pre></td></tr></table></div></figure>


<p><strong>连接mongos服务器</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\Users\wangchaoqun&gt;mongo 127.0.0.1:7701/admin
</span><span class='line'>MongoDB shell version: 2.4.8
</span><span class='line'>connecting to: 127.0.0.1:7701/admin</span></code></pre></td></tr></table></div></figure>


<p>然后将10001，10002，10003的mongod交给mongos,添加分片也就是addshard()<br/>
<strong>两个分片的集群，每个分片3个备份节点</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.runCommand({addshard:"myshard1/127.0.0.1:10001,127.0.0.1:10002,127.0.0.1:10003",allowlocal:true})
</span><span class='line'>db.runCommand({addshard:"myshard2/127.0.0.1:20001,127.0.0.1:20002,127.0.0.1:20003",allowlocal:true})</span></code></pre></td></tr></table></div></figure>


<p>片已经集群了，但是mongos不知道该如何切分数据，要在mongos设置片键：<br/>
1. 开启数据库分片功能</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mongos&gt; db.runCommand({"enablesharding":"mytestdb"})
</span><span class='line'>{ "ok" : 1 }</span></code></pre></td></tr></table></div></figure>


<p>
2. 指定集合中分片的片键，这里使用users里的name</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mongos&gt; db.runCommand({shardcollection:"mytestdb.users",key:{name:1}})
</span><span class='line'>{ "collectionsharded" : "mytestdb.users", "ok" : 1 }</span></code></pre></td></tr></table></div></figure>


<p></p>

<h4>3. 测试</h4>

<p>通过mongos向mongodb插入10w记录</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use mytestdb
</span><span class='line'>for(var i=0;i&lt;100000;i++){
</span><span class='line'>  var x="poiuytrewqasdfghjklmnbvcxz";
</span><span class='line'>  var c=x.charAt(Math.ceil(Math.random() * 25));
</span><span class='line'>  var t=Math.ceil(Math.random() * 100000);
</span><span class='line'>  var content=c+t;
</span><span class='line'>  var time=new Date().getTime()-Math.ceil(Math.random() * 100)*t;
</span><span class='line'>  db.users.insert({"content":content,"creatorId":""+i%7,"createtime":time});
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>
通过printShardingStatus命令查看mongodb的数据分片情况</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.printShardingStatus();</span></code></pre></td></tr></table></div></figure>


<p>每个节点都看看，是不是数据都有了</p>

<h4>4. 参考</h4>

<p><a href="http://blog.sina.com.cn/s/blog_498e79cc0101115v.html">http://blog.sina.com.cn/s/blog_498e79cc0101115v.html</a>
<a href="http://www.cnblogs.com/huangxincheng/archive/2012/03/04/2379755.html">http://www.cnblogs.com/huangxincheng/archive/2012/03/04/2379755.html</a>
<a href="http://www.cnblogs.com/refactor/archive/2012/08/13/2600140.html">http://www.cnblogs.com/refactor/archive/2012/08/13/2600140.html</a></p>

<p class='post-footer' style='background:none repeat scroll 0pt 0pt #eee;padding: 5px;margin-top:10px;color:gray;font-size:90%;'>
            &nbsp;原文地址：
            <a href='http://wangchaoqun.com/blog/2013/11/mongodb-replsetji-qun-he-shardfen-pian.html/'>http://wangchaoqun.com/blog/2013/11/mongodb-replsetji-qun-he-shardfen-pian.html/</a><br/>
            &nbsp;written by &nbsp;<a href='http://wangchaoqun.com'>wang chaoqun</a> &nbsp;posted at &nbsp;<a href='http://wangchaoqun.com'>http://wangchaoqun.com</a><br/>
            &nbsp;版权声明：自由转载-非商用-非衍生-保持署名 | <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mongodb, Mysql导出备份至ftp]]></title>
    <link href="http://wangchaoqun.com/blog/2013/11/mongodb-he-mysql-dao-chu-bei-fen-bing-shang-chuan-zhi-ftp.html/"/>
    <updated>2013-11-03T17:10:32+08:00</updated>
    <id>http://wangchaoqun.com/blog/2013/11/mongodb-he-mysql-dao-chu-bei-fen-bing-shang-chuan-zhi-ftp</id>
    <content type="html"><![CDATA[<p>前提是mongodb和mysql已经安装使用，先安装vsftp，配置完成后，在编写shell脚本，使用计划任务执行<br/>
1. 安装vsftp</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rpm -q vsftpd
</span><span class='line'>yum -y install vsftpd</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p><a href='http://wangchaoqun.com' style='color:#f5f5f5;text-decoration:none;'>wang chaoqun</a><br/>
设置开机启动</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chkconfig vsftpd on</span></code></pre></td></tr></table></div></figure>


<p>启动vsftpd服务</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>service vsftpd start</span></code></pre></td></tr></table></div></figure>


<p>增加新用户ftpuser，设置权限和密码</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>useradd -d /home/ftpuser -s /sbin/nologin ftpuser
</span><span class='line'>chown -R ftpuser /home/ftpuser
</span><span class='line'>chmod 777 -R /home/ftpuser
</span><span class='line'>passwd ftpuser</span></code></pre></td></tr></table></div></figure>


<p>配置vsftp</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vi /etc/vsftpd/vsftpd.conf</span></code></pre></td></tr></table></div></figure>


<p>内容删掉换成以下</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>anonymous_enable=NO
</span><span class='line'>local_enable=YES
</span><span class='line'>write_enable=YES
</span><span class='line'>local_umask=022
</span><span class='line'>dirmessage_enable=YES
</span><span class='line'>xferlog_enable=YES
</span><span class='line'>connect_from_port_20=YES
</span><span class='line'>xferlog_std_format=YES
</span><span class='line'>chroot_list_enable=YES
</span><span class='line'>chroot_list_file=/etc/vsftpd/chroot_list
</span><span class='line'>listen=YES
</span><span class='line'>pam_service_name=vsftpd
</span><span class='line'>userlist_enable=YES
</span><span class='line'>tcp_wrappers=YES
</span><span class='line'>pasv_min_port=10000 
</span><span class='line'>pasv_max_port=10030</span></code></pre></td></tr></table></div></figure>


<p>添加chroot_list文件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vi /etc/vsftpd/chroot_list</span></code></pre></td></tr></table></div></figure>


<p>内容<code>ftpuser</code><br/>
重启服务<code>service vsftpd restart</code><br/>
防火墙开放21端口</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>service iptables stop
</span><span class='line'>vi /etc/sysconfig/iptables</span></code></pre></td></tr></table></div></figure>


<p>添加</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-A INPUT -m state --state NEW -m tcp -p tcp --dport 21 -j ACCEPT</span></code></pre></td></tr></table></div></figure>


<p>
重启防火墙服务</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>service iptables start</span></code></pre></td></tr></table></div></figure>


<p>
解决用户无法进入目录问题，终端执行：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>setsebool -P ftp_home_dir 1</span></code></pre></td></tr></table></div></figure>


<p>
然后重启FTP服务：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>service vsftpd restart</span></code></pre></td></tr></table></div></figure>


<h2>2. mongodb导出、压缩、上传脚本，删除过期文件  </h2>

<p>先定义好服务器、数据库、各目录、用户名、密码</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/bash
</span><span class='line'>MONGO_HOST="127.0.0.1:27017"
</span><span class='line'>MONGO_DB="mydbname"
</span><span class='line'>MONGO_DUMP="/usr/local/mongo/bin/mongodump"
</span><span class='line'>MONGO_BACKUP="/usr/local/mongo/backup"
</span><span class='line'>NEW_TIMESTAMP=$(date +%F-%H%M)
</span><span class='line'>OLD_TIMESTAMP=$(date -d '-5 days' "+%F-%H%M")
</span><span class='line'>NEW_BACKUP_FILE="$MONGO_DB.$NEW_TIMESTAMP.tar.gz"
</span><span class='line'>OLD_BACKUP_FILE="$MONGO_DB.$OLD_TIMESTAMP.tar.gz"
</span><span class='line'>
</span><span class='line'># 0.temp dir
</span><span class='line'>if [ ! -d $MONGO_BACKUP/$MONGO_DB.$NEW_TIMESTAMP ]
</span><span class='line'>then
</span><span class='line'> mkdir $MONGO_BACKUP/$MONGO_DB.$NEW_TIMESTAMP
</span><span class='line'>fi
</span><span class='line'>
</span><span class='line'># 1.mongodump then delete old dir and file
</span><span class='line'>$MONGO_DUMP -h $MONGO_HOST -d $MONGO_DB -o $MONGO_BACKUP/$MONGO_DB.$NEW_TIMESTAMP
</span><span class='line'>cd $MONGO_BACKUP/$MONGO_DB.$NEW_TIMESTAMP && tar -zcf $MONGO_BACKUP/$NEW_BACKUP_FILE */
</span><span class='line'>rm -rf $MONGO_BACKUP/$MONGO_DB.$NEW_TIMESTAMP
</span><span class='line'>rm -rf $MONGO_BACKUP/$OLD_BACKUP_FILE
</span><span class='line'>
</span><span class='line'># 2.upload new and delte old files
</span><span class='line'>#!/bin/sh
</span><span class='line'>FTP_HOST="192.168.100.119"
</span><span class='line'>FTP_PORT="21"
</span><span class='line'>FTP_USER="ftpuser"
</span><span class='line'>FTP_PSWD="123456"
</span><span class='line'>FTP_DIR="mongo-backup"
</span><span class='line'>
</span><span class='line'>ftp -nv &lt;&lt;!
</span><span class='line'>open $FTP_HOST $FTP_PORT
</span><span class='line'>user $FTP_USER $FTP_PSWD
</span><span class='line'>binary
</span><span class='line'>prompt
</span><span class='line'>cd $FTP_DIR
</span><span class='line'>mdelete $OLD_BACKUP_FILE
</span><span class='line'>lcd $MONGO_BACKUP
</span><span class='line'>mput $NEW_BACKUP_FILE
</span><span class='line'>close
</span><span class='line'>bye
</span><span class='line'>!
</span><span class='line'>echo "============== $MONGO_DB backup ends at $NEW_TIMESTAMP =============="</span></code></pre></td></tr></table></div></figure>


<p>
标签：<a href="http://wangchaoqun.com/blog/categories/tech">技术</a></p>

<h2>3. mysql导出、压缩、上传脚本  </h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#! /bin/bash
</span><span class='line'>MYSQL_HOST="192.168.100.119"
</span><span class='line'>MYSQL_PORT='3306'
</span><span class='line'>MYSQL_USER='myuser'
</span><span class='line'>MYSQL_PSWD='mypass'
</span><span class='line'>MYSQL_DB='mydbname'
</span><span class='line'>MYSQL_DUMP="/usr/bin/mysqldump"
</span><span class='line'>MYSQL_BACKUP="/usr/local/mysql/backup"
</span><span class='line'>NEW_TIMESTAMP=$(date +%F-%H%M)
</span><span class='line'>OLD_TIMESTAMP=$(date -d '-5 days' "+%F-%H%M")
</span><span class='line'>GZIP="$(which gzip)"
</span><span class='line'>
</span><span class='line'># 1.mysql dump and delete old files
</span><span class='line'>$MYSQL_DUMP -h $MYSQL_HOST -P $MYSQL_PORT -u $MYSQL_USER -p$MYSQL_PSWD $MYSQL_DB | $GZIP -9 &gt; $MYSQL_BACKUP/$MYSQL_DB.$NEW_TIMESTAMP.gz
</span><span class='line'>rm -rf $MYSQL_BACKUP/$MYSQL_DB.$OLD_TIMESTAMP.gz
</span><span class='line'>echo "============== mysqldump ends at $NEW_TIMESTAMP =============="
</span><span class='line'>
</span><span class='line'># 2.upload new and delete old files
</span><span class='line'>FTP_HOST="192.168.100.119"
</span><span class='line'>FTP_PORT="21"
</span><span class='line'>FTP_USER="ftpuser"
</span><span class='line'>FTP_PSWD="123456"
</span><span class='line'>FTP_DIR="mysql-backup"
</span><span class='line'>
</span><span class='line'>ftp -nv &lt;&lt;!
</span><span class='line'>open $FTP_HOST $FTP_PORT
</span><span class='line'>user $FTP_USER $FTP_PSWD
</span><span class='line'>binary
</span><span class='line'>prompt
</span><span class='line'>cd $FTP_DIR
</span><span class='line'>lcd $MYSQL_BACKUP
</span><span class='line'>mput $MYSQL_DB.$NEW_TIMESTAMP.gz
</span><span class='line'>mdelete $MYSQL_DB.$OLD_TIMESTAMP.gz
</span><span class='line'>close
</span><span class='line'>bye
</span><span class='line'>!
</span><span class='line'>echo "============== mysql upload ends at $NEW_TIMESTAMP =============="</span></code></pre></td></tr></table></div></figure>


<h2>4. 添加计划任务</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>crontab -e
</span><span class='line'>#every day at 00m
</span><span class='line'>00 * * * * /bin/bash /usr/local/mongo/cmd/mongo_backup.sh</span></code></pre></td></tr></table></div></figure>


<p class='post-footer' style='background:none repeat scroll 0pt 0pt #eee;padding: 5px;margin-top:10px;color:gray;font-size:90%;'>
            &nbsp;原文地址：
            <a href='http://wangchaoqun.com/blog/2013/11/mongodb-he-mysql-dao-chu-bei-fen-bing-shang-chuan-zhi-ftp.html/'>http://wangchaoqun.com/blog/2013/11/mongodb-he-mysql-dao-chu-bei-fen-bing-shang-chuan-zhi-ftp.html/</a><br/>
            &nbsp;written by &nbsp;<a href='http://wangchaoqun.com'>wang chaoqun</a> &nbsp;posted at &nbsp;<a href='http://wangchaoqun.com'>http://wangchaoqun.com</a><br/>
            &nbsp;版权声明：自由转载-非商用-非衍生-保持署名 | <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[转]Tomcat 生产服务器性能优化]]></title>
    <link href="http://wangchaoqun.com/blog/2013/07/zhuan-tomcat-sheng-chan-fu-wu-qi-xing-neng-you-hua.html/"/>
    <updated>2013-07-25T10:08:06+08:00</updated>
    <id>http://wangchaoqun.com/blog/2013/07/zhuan-tomcat-sheng-chan-fu-wu-qi-xing-neng-you-hua</id>
    <content type="html"><![CDATA[<p>tomcat优化+eclipse优化之类的文章网上有很多，这个收藏当作就手的工具。<br/>
<a href="http://www.oschina.net/translate/tomcat-performance-tuning" target="_blank">来自oschina</a>  : 参与翻译(4人)：Garfielt, Lesus, MtrS, 大志darcy</p>

<p>[正文]考虑一下这种场景，你开发了一个应用，它有十分优秀的布局设计，最新的特性以及其它的优秀特点。但是在性能这方面欠缺，不管这个应用如何都会遭到客户拒绝。客户总是期望它们的应用应该有更好的性能。如果你在产品中使用了Tomcat服务器，那么这篇文章就会给你几方面来提升Tomcat服务器的性能。<!--more--><a href='http://wangchaoqun.com' style='color:#f5f5f5;text-decoration:none;'>wang chaoqun</a>  <br/>
感谢ITWorld article给本文提供资源。经过沉思我已经知道了和早期版本相比最新的Tomcat提供更好的性能和稳定性。所以一直使用最新的Tomcat版本。现在本文使用下面几步来提高Tomcat服务器的性能。
1. 增加JVM堆内存大小<br/>
2. 修复JRE内存泄漏<br/>
3. 线程池设置<br/>
4. 压缩<br/>
5. 数据库性能调优<br/>
6. Tomcat本地库<br/>
7. 其它选项</p>

<h4>第一步  – 提高JVM栈内存Increase JVM heap memory</h4>

<p>你使用过tomcat的话，简单的说就是“内存溢出”. 通常情况下，这种问题出现在实际的生产环境中.产生这种问题的原因是tomcat使用较少的内存给进程,通过配置TOmcat的配置文件(Windows 下的catalina.bat或Linux下的catalina.sh)可以解决这种问题.这种解决方法是通过增加JVM的栈内存实现的.也就是说，JVM通常不去调用垃圾回收器，所以服务器可以更多关注处理web请求，并要求尽快完成。要更改文件(catalina.sh) 位于&#8221;\tomcat server folder\bin\catalina.sh&#8221;，下面，给出这个文件的配置信息，</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>JAVA_OPTS="-Djava.awt.headless=true -Dfile.encoding=UTF-8
</span><span class='line'>-server -Xms1024m -Xmx1024m
</span><span class='line'>-XX:NewSize=512m -XX:MaxNewSize=512m -XX:PermSize=512m
</span><span class='line'>-XX:MaxPermSize=512m -XX:+DisableExplicitGC"</span></code></pre></td></tr></table></div></figure>


<p>
-Xms – 指定初始化时化的栈内存<br/>
-Xmx – 指定最大栈内存<br/>
在重启你的Tomcat服务器之后，这些配置的更改才会有效。下面将介绍如何处理JRE内存泄漏.</p>

<h4>第二步 – 解决JRE内存泄露</h4>

<p>性能表现不佳的另一个主要原因是内存泄漏，正如我之前说过：始终使用最新的tomcat服务器以获得更好的性能和可伸缩性。现在，这句话变成真的。如果我们使用最新的tomcat版本6.0.26及以上就可以解决这个错误，因为它包含了一个监听器来处理JRE和PermGen的内存泄漏。使用的监听器是，</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener" /&gt;</span></code></pre></td></tr></table></div></figure>


<p>你可以在server.xml文件中找到这个监听器的配置，server.xml位置在“tomcat project folder/conf/server.xml”。接下来，我们将看看如何调整连接属性“maxThreads”。</p>

<h4>第三步 – 线程池设置</h4>

<p>线程池指定Web请求负载的数量，因此，为获得更好的性能这部分应小心处理。可以通过调整连接器属性“maxThreads”完成设置。maxThreads的值应该根据流量的大小，如果值过低，将有没有足够的线程来处理所有的请求，请求将进入等待状态，只有当一个的处理线程释放后才被处理；如果设置的太大，Tomcat的启动将花费更多时间。因此它取决于我们给maxThreads设置一个正确的值。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Connector port="8080" address="localhost"
</span><span class='line'>maxThreads="250" maxHttpHeaderSize="8192"
</span><span class='line'>emptySessionPath="true" protocol="HTTP/1.1"
</span><span class='line'>enableLookups="false" redirectPort="8181" acceptCount="100"
</span><span class='line'>connectionTimeout="20000" disableUploadTimeout="true" /&gt;</span></code></pre></td></tr></table></div></figure>


<p>在上述配置中，maxThreads值设定为“250”，这指定可以由服务器处理的并发请求的最大数量。如果没有指定，这个属性的默认值为“200”。任何多出的并发请求将收到“拒绝连接”的错误提示，直到另一个处理请求进程被释放。错误看起来如下，</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>org.apache.tomcat.util.threads.ThreadPool logFull SEVERE: All threads (250) are
</span><span class='line'>currently busy, waiting. Increase maxThreads (250) or check the servlet status</span></code></pre></td></tr></table></div></figure>


<p>如果应用提示上述错误，务必检查上述错误是否是由于单个请求花费太长时间造成的，这个问题的原因是这样的，有时候如果数据库连接不释放的话，进程将不会处理其它请求。<br/>
根据我的经验，准确值的设定可以通过将应用在在各种环境中测试得出。接下来，我们来看看如何压缩的MIME类型。</p>

<h4>第4步- 压缩</h4>

<p>Tomcat有一个通过在server.xml配置文件中设置压缩的选项。压缩可以在connector像如下设置中完成，</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Connector port="8080" protocol="HTTP/1.1"
</span><span class='line'>connectionTimeout="20000"
</span><span class='line'>redirectPort="8181" compression="500"
</span><span class='line'>compressableMimeType="text/html,text/xml,text/plain,application/octet-stream" /&gt;</span></code></pre></td></tr></table></div></figure>


<p>在前面的配置中，当文件的大小大于等于500bytes时才会压缩。如果当文件达到了大小但是却没有被压缩，那么设置属性compression=&ldquo;on&#8221;。否则Tomcat默认设置是“off”。接下来我们将看看如何调优数据库。</p>

<h4>第五步- 数据库性能调优</h4>

<p>Tomcat性能在等待数据库查询被执行期间会降低。如今大多数应用程序都是使用可能包含“命名查询”的关系型数据库。如果是那样的话，Tomcat会在启动时默认加载命名查询，这个可能会提升性能。另一件重要事是确保所有数据库连接正确地关闭。给数据库连接池设置正确值也是十分重要的。我所说的值是指Resource要素的最大空闲数（maxIdle），最大连接数（maxActive）,最大建立连接等待时间（maxWait）属性的值。因为配置依赖与应用要求，我也不能在本文指定正确的值。你可以通过调用数据库性能测试来找到正确的值。</p>

<h4>第6步 – Tomcat原生库</h4>

<p>Tomcat的原生库基于Apache可移植运行时（Apache Portable Runtime简称APR），给程序员提供了超强的扩展性和性能，在产品运作中帮助融合原生的服务器技术以展现最佳的性能。想知道安装说明的朋友请参考Tomcat Native Library – (APR) Installation。</p>

<h4>第7步 – 其他选项</h4>

<p>这些选项是：
开启浏览器的缓存，这样读取存放在webapps文件夹里的静态内容会更快，大大推动整体性能。
每当开机时，Tomcat服务器应当自动地重启。
一般情况下HTTPS请求会比HTTP请求慢。如果你想要更好的安全性，即使慢一点我们还是要选择HTTPS。</p>

<p>就这么多啦。在这篇文章里，我教给了大家一些提高Tomcat服务器性能的方法。如果你觉得这篇文章有用，或者你对提高Tomcat服务器性能有别的看法，请不要忘记留下宝贵的评论。祝你今天编程愉快！<br/>
全文完</p>

<p>另附tomcat5.5-6.0 server.xml参数说明：<a href="http://blog.csdn.net/itmagic_jack/article/details/6290239">转：Tomcat Server.xml配置文件</a></p>

<p class='post-footer' style='background:none repeat scroll 0pt 0pt #eee;padding: 5px;margin-top:10px;color:gray;font-size:90%;'>
            &nbsp;原文地址：
            <a href='http://wangchaoqun.com/blog/2013/07/zhuan-tomcat-sheng-chan-fu-wu-qi-xing-neng-you-hua.html/'>http://wangchaoqun.com/blog/2013/07/zhuan-tomcat-sheng-chan-fu-wu-qi-xing-neng-you-hua.html/</a><br/>
            &nbsp;written by &nbsp;<a href='http://wangchaoqun.com'>wang chaoqun</a> &nbsp;posted at &nbsp;<a href='http://wangchaoqun.com'>http://wangchaoqun.com</a><br/>
            &nbsp;版权声明：自由转载-非商用-非衍生-保持署名 | <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mongodb Aggregation Framework总结]]></title>
    <link href="http://wangchaoqun.com/blog/2013/05/mongodb-aggregation-framework-zong-jie.html/"/>
    <updated>2013-05-18T12:56:21+08:00</updated>
    <id>http://wangchaoqun.com/blog/2013/05/mongodb-aggregation-framework-zong-jie</id>
    <content type="html"><![CDATA[<p>2.2版本新特性，比group, MapReduce简单强大，reference里有很多操作和[运算]可用<br/>
pipeline operators:<br/>
• $project (page 285)<br/>
• $match (page 281)<br/>
• $limit (page 280)<br/>
• $skip (page 287)<br/>
• $unwind (page 290)// 用于嵌套文档，可对数组拆解<br/>
• $group (page 278)<br/>
• $sort (page 287)<br/>
• $geoNear (page 276)    <!--more--><a href='http://wangchaoqun.com' style='color:#f5f5f5;text-decoration:none;'>wang chaoqun</a></p>

<p>和SQL的对应关系：<br/>
WHERE $match (page 281)<br/>
GROUP BY $group (page 278)<br/>
HAVING $match (page 281)<br/>
SELECT $project (page 285)<br/>
ORDER BY $sort (page 287)<br/>
LIMIT $limit (page 280)<br/>
SUM() $sum<br/>
COUNT() $sum<br/>
join No direct corresponding operator; however, the $unwind (page 290) operator allows for
somewhat similar functionality, but with fields embedded within the document.</p>

<p>场景: 比如按省份城市统计发帖数目，比如按人统计发帖排名：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">db</span><span class="p">.</span><span class="nx">topic</span><span class="p">.</span><span class="nx">aggregate</span><span class="p">(</span>
</span><span class='line'><span class="p">{</span> <span class="nx">$match</span><span class="o">:</span> <span class="p">{</span> <span class="nx">createtime</span> <span class="o">:</span> <span class="p">{</span> <span class="nx">$gt</span><span class="o">:</span><span class="mi">1370000000000</span> <span class="p">}</span> <span class="p">}</span> <span class="p">},</span>
</span><span class='line'><span class="p">{</span> <span class="nx">$group</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">_id</span> <span class="o">:</span> <span class="p">{</span> <span class="nx">id</span><span class="o">:</span><span class="s2">&quot;$creatorId&quot;</span><span class="p">,</span> <span class="nx">name</span><span class="o">:</span><span class="s2">&quot;$creator&quot;</span> <span class="p">},</span>
</span><span class='line'>  <span class="nx">upCount</span> <span class="o">:</span> <span class="p">{</span><span class="nx">$sum</span> <span class="o">:</span> <span class="s2">&quot;$upCount&quot;</span><span class="p">},</span>
</span><span class='line'>  <span class="nx">downCount</span> <span class="o">:</span> <span class="p">{</span><span class="nx">$sum</span> <span class="o">:</span> <span class="s2">&quot;$downCount&quot;</span><span class="p">}</span>
</span><span class='line'>  <span class="p">}},</span>
</span><span class='line'><span class="p">{</span> <span class="nx">$project</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">_id</span> <span class="o">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">name</span> <span class="o">:</span> <span class="s2">&quot;$_id.name&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">total</span> <span class="o">:</span> <span class="p">{</span> <span class="nx">$add</span> <span class="o">:</span> <span class="p">[</span><span class="s2">&quot;$upCount&quot;</span><span class="p">,</span> <span class="s2">&quot;$downCount&quot;</span><span class="p">]}</span>
</span><span class='line'>  <span class="p">}},</span>
</span><span class='line'><span class="p">{</span> <span class="nx">$sort</span><span class="o">:</span> <span class="p">{</span> <span class="nx">total</span> <span class="o">:</span> <span class="o">-</span><span class="mi">1</span> <span class="p">}</span> <span class="p">},</span>
</span><span class='line'><span class="p">{</span> <span class="nx">$skip</span><span class="o">:</span> <span class="mi">0</span> <span class="p">},</span>
</span><span class='line'><span class="p">{</span> <span class="nx">$limit</span><span class="o">:</span> <span class="mi">3</span> <span class="p">}</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;result&quot;</span> <span class="o">:</span> <span class="p">[</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>              <span class="s2">&quot;name&quot;</span> <span class="o">:</span> <span class="s2">&quot;俞章数&quot;</span><span class="p">,</span>
</span><span class='line'>              <span class="s2">&quot;total&quot;</span> <span class="o">:</span> <span class="mi">108</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>              <span class="s2">&quot;name&quot;</span> <span class="o">:</span> <span class="s2">&quot;马晴&quot;</span><span class="p">,</span>
</span><span class='line'>              <span class="s2">&quot;total&quot;</span> <span class="o">:</span> <span class="mi">87</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>              <span class="s2">&quot;name&quot;</span> <span class="o">:</span> <span class="s2">&quot;苏妙玲&quot;</span><span class="p">,</span>
</span><span class='line'>              <span class="s2">&quot;total&quot;</span> <span class="o">:</span> <span class="mi">58</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">],</span>
</span><span class='line'>  <span class="s2">&quot;ok&quot;</span> <span class="o">:</span> <span class="mi">1</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>标签：<a href="http://wangchaoqun.com/blog/categories/mongodb">mongodb</a><br/>
java driver 官方示例：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// create our pipeline operations, first with the $match</span>
</span><span class='line'><span class="n">DBObject</span> <span class="n">match</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BasicDBObject</span><span class="o">(</span><span class="s">&quot;$match&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BasicDBObject</span><span class="o">(</span><span class="s">&quot;type&quot;</span><span class="o">,</span> <span class="s">&quot;airfare&quot;</span><span class="o">)</span> <span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// build the $projection operation</span>
</span><span class='line'><span class="n">DBObject</span> <span class="n">fields</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BasicDBObject</span><span class="o">(</span><span class="s">&quot;department&quot;</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'><span class="n">fields</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;amount&quot;</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'><span class="n">fields</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;_id&quot;</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'><span class="n">DBObject</span> <span class="n">project</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BasicDBObject</span><span class="o">(</span><span class="s">&quot;$project&quot;</span><span class="o">,</span> <span class="n">fields</span> <span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Now the $group operation</span>
</span><span class='line'><span class="n">DBObject</span> <span class="n">groupFields</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BasicDBObject</span><span class="o">(</span> <span class="s">&quot;_id&quot;</span><span class="o">,</span> <span class="s">&quot;$department&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">groupFields</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;average&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BasicDBObject</span><span class="o">(</span> <span class="s">&quot;$avg&quot;</span><span class="o">,</span> <span class="s">&quot;$amount&quot;</span><span class="o">));</span>
</span><span class='line'><span class="n">DBObject</span> <span class="n">group</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BasicDBObject</span><span class="o">(</span><span class="s">&quot;$group&quot;</span><span class="o">,</span> <span class="n">groupFields</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// run aggregation</span>
</span><span class='line'><span class="n">AggregationOutput</span> <span class="n">output</span> <span class="o">=</span> <span class="n">collection</span><span class="o">.</span><span class="na">aggregate</span><span class="o">(</span> <span class="n">match</span><span class="o">,</span> <span class="n">project</span><span class="o">,</span> <span class="n">group</span> <span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>spring data mongodb，@since 1.3，注意升级<br/>
官方例子是对城市人口做统计，group两次（对第一次group的结果再group）<br/>
好处在于对结果进行了封装，返回List，注意ZipInfoStats嵌套City，使用nested和bind:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">class</span> <span class="nc">ZipInfo</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">String</span> <span class="n">id</span><span class="o">;</span>
</span><span class='line'>  <span class="n">String</span> <span class="n">city</span><span class="o">;</span>
</span><span class='line'>  <span class="n">String</span> <span class="n">state</span><span class="o">;</span>
</span><span class='line'>  <span class="nd">@Field</span><span class="o">(</span><span class="s">&quot;pop&quot;</span><span class="o">)</span> <span class="kt">int</span> <span class="n">population</span><span class="o">;</span>
</span><span class='line'>  <span class="nd">@Field</span><span class="o">(</span><span class="s">&quot;loc&quot;</span><span class="o">)</span> <span class="kt">double</span><span class="o">[]</span> <span class="n">location</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">City</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">population</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">ZipInfoStats</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">String</span> <span class="n">id</span><span class="o">;</span>
</span><span class='line'>  <span class="n">String</span> <span class="n">state</span><span class="o">;</span>
</span><span class='line'>  <span class="n">City</span> <span class="n">biggestCity</span><span class="o">;</span>
</span><span class='line'>  <span class="n">City</span> <span class="n">smallestCity</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">static</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">mongodb</span><span class="o">.</span><span class="na">core</span><span class="o">.</span><span class="na">aggregation</span><span class="o">.</span><span class="na">Aggregation</span><span class="o">.*;</span>
</span><span class='line'><span class="n">TypedAggregation</span><span class="o">&lt;</span><span class="n">ZipInfo</span><span class="o">&gt;</span> <span class="n">aggregation</span> <span class="o">=</span> <span class="n">newAggregation</span><span class="o">(</span><span class="n">ZipInfo</span><span class="o">.</span><span class="na">class</span><span class="o">,</span>
</span><span class='line'>  <span class="n">group</span><span class="o">(</span><span class="s">&quot;state&quot;</span><span class="o">,</span> <span class="s">&quot;city&quot;</span><span class="o">)</span>
</span><span class='line'>      <span class="o">.</span><span class="na">sum</span><span class="o">(</span><span class="s">&quot;population&quot;</span><span class="o">).</span><span class="na">as</span><span class="o">(</span><span class="s">&quot;pop&quot;</span><span class="o">),</span>
</span><span class='line'>  <span class="n">sort</span><span class="o">(</span><span class="n">ASC</span><span class="o">,</span> <span class="s">&quot;pop&quot;</span><span class="o">,</span> <span class="s">&quot;state&quot;</span><span class="o">,</span> <span class="s">&quot;city&quot;</span><span class="o">),</span>
</span><span class='line'>  <span class="n">group</span><span class="o">(</span><span class="s">&quot;state&quot;</span><span class="o">)</span>
</span><span class='line'>      <span class="o">.</span><span class="na">last</span><span class="o">(</span><span class="s">&quot;city&quot;</span><span class="o">).</span><span class="na">as</span><span class="o">(</span><span class="s">&quot;biggestCity&quot;</span><span class="o">)</span>
</span><span class='line'>      <span class="o">.</span><span class="na">last</span><span class="o">(</span><span class="s">&quot;pop&quot;</span><span class="o">).</span><span class="na">as</span><span class="o">(</span><span class="s">&quot;biggestPop&quot;</span><span class="o">)</span>
</span><span class='line'>      <span class="o">.</span><span class="na">first</span><span class="o">(</span><span class="s">&quot;city&quot;</span><span class="o">).</span><span class="na">as</span><span class="o">(</span><span class="s">&quot;smallestCity&quot;</span><span class="o">)</span>
</span><span class='line'>      <span class="o">.</span><span class="na">first</span><span class="o">(</span><span class="s">&quot;pop&quot;</span><span class="o">).</span><span class="na">as</span><span class="o">(</span><span class="s">&quot;smallestPop&quot;</span><span class="o">),</span>
</span><span class='line'>  <span class="n">project</span><span class="o">()</span>
</span><span class='line'>      <span class="o">.</span><span class="na">and</span><span class="o">(</span><span class="s">&quot;state&quot;</span><span class="o">).</span><span class="na">previousOperation</span><span class="o">()</span>
</span><span class='line'>      <span class="o">.</span><span class="na">and</span><span class="o">(</span><span class="s">&quot;biggestCity&quot;</span><span class="o">)</span>
</span><span class='line'>      <span class="o">.</span><span class="na">nested</span><span class="o">(</span><span class="n">bind</span><span class="o">(</span><span class="s">&quot;name&quot;</span><span class="o">,</span> <span class="s">&quot;biggestCity&quot;</span><span class="o">).</span><span class="na">and</span><span class="o">(</span><span class="s">&quot;population&quot;</span><span class="o">,</span> <span class="s">&quot;biggestPop&quot;</span><span class="o">))</span>
</span><span class='line'>      <span class="o">.</span><span class="na">and</span><span class="o">(</span><span class="s">&quot;smallestCity&quot;</span><span class="o">)</span>
</span><span class='line'>      <span class="o">.</span><span class="na">nested</span><span class="o">(</span><span class="n">bind</span><span class="o">(</span><span class="s">&quot;name&quot;</span><span class="o">,</span> <span class="s">&quot;smallestCity&quot;</span><span class="o">).</span><span class="na">and</span><span class="o">(</span><span class="s">&quot;population&quot;</span><span class="o">,</span> <span class="s">&quot;smallestPop&quot;</span><span class="o">)),</span>
</span><span class='line'>  <span class="n">sort</span><span class="o">(</span><span class="n">ASC</span><span class="o">,</span> <span class="s">&quot;state&quot;</span><span class="o">)</span>
</span><span class='line'><span class="o">);</span>
</span><span class='line'><span class="n">AggregationResults</span><span class="o">&lt;</span><span class="n">ZipInfoStats</span><span class="o">&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="n">mongoTemplate</span><span class="o">.</span><span class="na">aggregate</span><span class="o">(</span><span class="n">aggregation</span><span class="o">,</span> <span class="n">ZipInfoStats</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="n">ZipInfoStats</span> <span class="n">firstZipInfoStats</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="na">getMappedResults</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>对应的shell即是：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">db</span><span class="p">.</span><span class="nx">zipcodes</span><span class="p">.</span><span class="nx">aggregate</span><span class="p">(</span>
</span><span class='line'><span class="p">{</span> <span class="nx">$group</span><span class="o">:</span>
</span><span class='line'>  <span class="p">{</span>    <span class="nx">_id</span><span class="o">:</span> <span class="p">{</span> <span class="nx">state</span><span class="o">:</span> <span class="s2">&quot;$state&quot;</span><span class="p">,</span> <span class="nx">city</span><span class="o">:</span> <span class="s2">&quot;$city&quot;</span> <span class="p">},</span>
</span><span class='line'>      <span class="nx">pop</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$sum</span><span class="o">:</span> <span class="s2">&quot;$pop&quot;</span> <span class="p">}</span> <span class="p">}</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'><span class="p">{</span> <span class="nx">$sort</span><span class="o">:</span> <span class="p">{</span> <span class="nx">pop</span><span class="o">:</span> <span class="mi">1</span> <span class="p">}</span> <span class="p">},</span>
</span><span class='line'><span class="p">{</span> <span class="nx">$group</span><span class="o">:</span>
</span><span class='line'>  <span class="p">{</span>    <span class="nx">_id</span> <span class="o">:</span> <span class="s2">&quot;$_id.state&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">biggestCity</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$last</span><span class="o">:</span> <span class="s2">&quot;$_id.city&quot;</span> <span class="p">},</span>
</span><span class='line'>      <span class="nx">biggestPop</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$last</span><span class="o">:</span> <span class="s2">&quot;$pop&quot;</span> <span class="p">},</span>
</span><span class='line'>      <span class="nx">smallestCity</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$first</span><span class="o">:</span> <span class="s2">&quot;$_id.city&quot;</span> <span class="p">},</span>
</span><span class='line'>      <span class="nx">smallestPop</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$first</span><span class="o">:</span> <span class="s2">&quot;$pop&quot;</span> <span class="p">}</span> <span class="p">}</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'><span class="c1">// the following $project is optional, and</span>
</span><span class='line'><span class="c1">// modifies the output format.</span>
</span><span class='line'><span class="p">{</span> <span class="nx">$project</span><span class="o">:</span>
</span><span class='line'>  <span class="p">{</span>    <span class="nx">_id</span><span class="o">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">state</span><span class="o">:</span> <span class="s2">&quot;$_id&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">biggestCity</span><span class="o">:</span> <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;$biggestCity&quot;</span><span class="p">,</span> <span class="nx">pop</span><span class="o">:</span> <span class="s2">&quot;$biggestPop&quot;</span> <span class="p">},</span>
</span><span class='line'>      <span class="nx">smallestCity</span><span class="o">:</span> <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;$smallestCity&quot;</span><span class="p">,</span> <span class="nx">pop</span><span class="o">:</span> <span class="s2">&quot;$smallestPop&quot;</span> <span class="p">}</span> <span class="p">}</span>
</span><span class='line'><span class="p">}</span> <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<p class='post-footer' style='background:none repeat scroll 0pt 0pt #eee;padding: 5px;margin-top:10px;color:gray;font-size:90%;'>
            &nbsp;原文地址：
            <a href='http://wangchaoqun.com/blog/2013/05/mongodb-aggregation-framework-zong-jie.html/'>http://wangchaoqun.com/blog/2013/05/mongodb-aggregation-framework-zong-jie.html/</a><br/>
            &nbsp;written by &nbsp;<a href='http://wangchaoqun.com'>wang chaoqun</a> &nbsp;posted at &nbsp;<a href='http://wangchaoqun.com'>http://wangchaoqun.com</a><br/>
            &nbsp;版权声明：自由转载-非商用-非衍生-保持署名 | <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB常用命令和操作总结2]]></title>
    <link href="http://wangchaoqun.com/blog/2013/05/mongodb-chang-yong-ming-ling-he-cao-zuo-zong-jie-2.html/"/>
    <updated>2013-05-10T10:09:23+08:00</updated>
    <id>http://wangchaoqun.com/blog/2013/05/mongodb-chang-yong-ming-ling-he-cao-zuo-zong-jie-2</id>
    <content type="html"><![CDATA[<p>做个总结，涉及到mongodb的常用命令、java driver查询、spring data mongodb的使用，group，MapReduce，aggregation framework等</p>

<h3>group</h3>

<p>topic : reply = one to many，按topic(或发布者)分组统计回复数
shell:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; db.reply.group({ "key" : { "topic" : 1} , "$reduce" : "function(doc, prev) {
</span><span class='line'> prev.total += 1; }" , "initial" : {"total" : 0}})</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p><a href='http://wangchaoqun.com' style='color:#f5f5f5;text-decoration:none;'>wang chaoqun</a><br/>
spring-data-mongodb:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Criteria</span> <span class="n">cri</span> <span class="o">=</span> <span class="n">Criteria</span><span class="o">.</span><span class="na">where</span><span class="o">(</span><span class="s">&quot;createtime&quot;</span><span class="o">).</span><span class="na">gt</span><span class="o">(</span><span class="mi">1380000000000L</span><span class="o">);</span><span class="c1">// 时间条件</span>
</span><span class='line'><span class="n">GroupBy</span> <span class="n">groupBy</span> <span class="o">=</span> <span class="n">GroupBy</span>
</span><span class='line'>      <span class="o">.</span><span class="na">key</span><span class="o">(</span><span class="s">&quot;topic&quot;</span><span class="o">).</span><span class="na">initialDocument</span><span class="o">(</span><span class="s">&quot;{total: 0 }&quot;</span><span class="o">)</span>
</span><span class='line'>      <span class="o">.</span><span class="na">reduceFunction</span><span class="o">(</span><span class="s">&quot;function(doc, prev) { prev.total += 1; }&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">String</span> <span class="n">collection</span> <span class="o">=</span> <span class="n">mongoTemplate</span><span class="o">.</span><span class="na">getCollectionName</span><span class="o">(</span><span class="n">Reply</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="n">GroupByResults</span><span class="o">&lt;</span><span class="n">Reply</span><span class="o">&gt;</span> <span class="n">replys</span> <span class="o">=</span> <span class="n">mongoTemplate</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="n">cri</span><span class="o">,</span> <span class="n">collection</span><span class="o">,</span> <span class="n">groupBy</span><span class="o">,</span> <span class="n">Reply</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>另一个例子：统计提问的回复（有内容的和简单赞踩），按权重计算热度</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">String</span> <span class="n">reduceFunction</span> <span class="o">=</span> <span class="s">&quot;function(doc, out) { if (doc.content) { out.contentCount += 1;} &quot;</span>
</span><span class='line'>      <span class="o">+</span> <span class="s">&quot;else { out.simpleCount += 1; }; out.topic = doc.topic}&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">String</span> <span class="n">finalizeFunction</span> <span class="o">=</span> <span class="s">&quot;function(out) { out.rankScore = out.simpleCount * &quot;</span> <span class="o">+</span> <span class="n">ratio</span>
</span><span class='line'>      <span class="o">+</span> <span class="s">&quot; + out.contentCount * (&quot;</span> <span class="o">+</span> <span class="o">(</span><span class="mi">10</span> <span class="o">-</span> <span class="n">ratio</span><span class="o">)</span> <span class="o">+</span> <span class="s">&quot;) } &quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">GroupBy</span> <span class="n">groupBy</span> <span class="o">=</span> <span class="n">GroupBy</span>
</span><span class='line'>      <span class="o">.</span><span class="na">keyFunction</span><span class="o">(</span><span class="s">&quot;function(doc) { return { topic: doc.topic }; }&quot;</span><span class="o">)</span>
</span><span class='line'>      <span class="o">.</span><span class="na">initialDocument</span><span class="o">(</span><span class="s">&quot;{contentCount: 0, simpleCount: 0 }&quot;</span><span class="o">)</span>
</span><span class='line'>      <span class="o">.</span><span class="na">reduceFunction</span><span class="o">(</span><span class="n">reduceFunction</span><span class="o">).</span><span class="na">finalizeFunction</span><span class="o">(</span><span class="n">finalizeFunction</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>java driver:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="nf">GroupCommand</span><span class="o">(</span><span class="n">DBCollection</span> <span class="n">inputCollection</span><span class="o">,</span> <span class="n">DBObject</span> <span class="n">keys</span><span class="o">,</span> <span class="n">DBObject</span> <span class="n">condition</span><span class="o">,</span> <span class="n">DBObject</span> <span class="n">initial</span><span class="o">,</span> <span class="n">String</span> <span class="n">reduce</span><span class="o">,</span> <span class="n">String</span> <span class="n">finalize</span><span class="o">)</span>
</span><span class='line'><span class="n">DBCollection</span> <span class="n">collection</span> <span class="o">=</span> <span class="n">mongoTemplate</span><span class="o">.</span><span class="na">getCollection</span><span class="o">(</span><span class="s">&quot;reply&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">collection</span><span class="o">.</span><span class="na">group</span><span class="o">(...);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>MapReduce</h3>

<p>场景：展示发帖或回帖的时间趋势图，或者说按整点显示此小时内的发帖数和回帖数，展示成折线图
创建时间保存的是number long，即date.getTime()的值，key要转成小时，使用new Date(y,m,d,h,0,0,0)<br/>
标签：<a href="http://wangchaoqun.com/blog/categories/mongodb">mongodb</a><br/>
spring-data-mongodb:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">String</span> <span class="n">mapFunction</span> <span class="o">=</span> <span class="s">&quot;function () { var key=new Date(new Date(this.createtime).getFullYear(),&quot;</span>
</span><span class='line'>      <span class="o">+</span> <span class="s">&quot;new Date(this.createtime).getMonth(), new Date(this.createtime).getDate(),&quot;</span>
</span><span class='line'>      <span class="o">+</span> <span class="s">&quot;new Date(this.createtime).getHours(), 0, 0, 0).getTime(); &quot;</span>
</span><span class='line'>      <span class="o">+</span> <span class="s">&quot;emit( key, { hour:key, count:1 } ); }&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">String</span> <span class="n">reduceFunction</span> <span class="o">=</span> <span class="s">&quot;function (key, values) { &quot;</span>
</span><span class='line'>      <span class="o">+</span> <span class="s">&quot; var total = 0;&quot;</span>
</span><span class='line'>      <span class="o">+</span> <span class="s">&quot; for (var i=0; i&lt;values.length; i++) { &quot;</span>
</span><span class='line'>      <span class="o">+</span> <span class="s">&quot;     total += values[i].count; &quot;</span>
</span><span class='line'>      <span class="o">+</span> <span class="s">&quot; }&quot;</span>
</span><span class='line'>      <span class="o">+</span> <span class="s">&quot; return { hour:key, count:total }; &quot;</span>
</span><span class='line'>      <span class="o">+</span> <span class="s">&quot;}&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">MapReduceResults</span><span class="o">&lt;</span><span class="n">Reply</span><span class="o">&gt;</span> <span class="n">results</span> <span class="o">=</span> <span class="n">mongoTemplate</span><span class="o">.</span><span class="na">mapReduce</span><span class="o">(</span>
</span><span class='line'>      <span class="k">new</span> <span class="nf">Query</span><span class="o">(</span><span class="n">cri</span><span class="o">),</span> <span class="n">collectionName</span><span class="o">,</span> <span class="n">mapFunction</span><span class="o">,</span>
</span><span class='line'>      <span class="n">reduceFunction</span><span class="o">,</span> <span class="n">Reply</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="n">List</span><span class="o">&lt;</span><span class="n">Reply</span><span class="o">&gt;</span> <span class="n">replys</span> <span class="o">=</span> <span class="n">Lists</span><span class="o">.</span><span class="na">newArrayList</span><span class="o">(</span><span class="n">results</span><span class="o">);</span>
</span><span class='line'><span class="k">for</span> <span class="o">(</span><span class="n">Replys</span> <span class="n">reply</span> <span class="o">:</span> <span class="n">replys</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">ReplyStat</span> <span class="n">value</span> <span class="o">=</span> <span class="n">reply</span><span class="o">.</span><span class="na">getValue</span><span class="o">();</span>
</span><span class='line'>  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">value</span><span class="o">.</span><span class="na">getHour</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot; : &quot;</span> <span class="o">+</span> <span class="n">value</span><span class="o">.</span><span class="na">getCount</span><span class="o">());</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>需要注意的是：结果存在reply的value字段里，是为了后面构造map好处理；场景不一样的话，先使用shell看看结果</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="n">ReplyStat</span> <span class="n">value</span><span class="o">;</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">ReplyStat</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">Long</span> <span class="n">hour</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">Long</span> <span class="n">count</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>shell:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">db</span><span class="p">.</span><span class="nx">runCommand</span><span class="p">({</span> <span class="nx">mapreduce</span><span class="o">:</span> <span class="s2">&quot;reply&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="nx">map</span> <span class="o">:</span> <span class="kd">function</span> <span class="nx">Map</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">key</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">createtime</span><span class="p">).</span><span class="nx">getFullYear</span><span class="p">(),</span>
</span><span class='line'>      <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">createtime</span><span class="p">).</span><span class="nx">getMonth</span><span class="p">(),</span>
</span><span class='line'>      <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">createtime</span><span class="p">).</span><span class="nx">getDate</span><span class="p">(),</span>
</span><span class='line'>      <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">createtime</span><span class="p">).</span><span class="nx">getHours</span><span class="p">(),</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">).</span><span class="nx">getTime</span><span class="p">();</span>
</span><span class='line'>  <span class="nx">emit</span><span class="p">(</span> <span class="nx">key</span><span class="p">,</span> <span class="p">{</span> <span class="nx">hour</span><span class="o">:</span><span class="nx">key</span><span class="p">,</span> <span class="nx">count</span><span class="o">:</span><span class="mi">1</span> <span class="p">}</span> <span class="p">);</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'> <span class="nx">reduce</span> <span class="o">:</span> <span class="kd">function</span> <span class="nx">Reduce</span><span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="nx">values</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">total</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>    
</span><span class='line'>  <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">i</span><span class="o">&lt;</span><span class="nx">values</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">total</span> <span class="o">+=</span> <span class="nx">values</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">count</span><span class="p">;</span>   
</span><span class='line'>  <span class="p">}</span>    
</span><span class='line'>  <span class="k">return</span> <span class="p">{</span> <span class="nx">hour</span><span class="o">:</span><span class="nx">key</span><span class="p">,</span> <span class="nx">count</span><span class="o">:</span><span class="nx">total</span> <span class="p">};</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'> <span class="nx">finalize</span> <span class="o">:</span> <span class="kd">function</span> <span class="nx">Finalize</span><span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="nx">reduced</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">reduced</span><span class="p">;</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'> <span class="nx">query</span> <span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;type&quot;</span> <span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s2">&quot;$and&quot;</span> <span class="o">:</span> <span class="p">[</span>
</span><span class='line'>  <span class="p">{</span> <span class="s2">&quot;createtime&quot;</span> <span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;$gt&quot;</span> <span class="o">:</span> <span class="nx">NumberLong</span><span class="p">(</span><span class="s2">&quot;1370000000000&quot;</span><span class="p">)</span> <span class="p">}</span> <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span> <span class="s2">&quot;createtime&quot;</span> <span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;$lt&quot;</span> <span class="o">:</span> <span class="nx">NumberLong</span><span class="p">(</span><span class="s2">&quot;1380000000000&quot;</span><span class="p">)</span> <span class="p">}</span> <span class="p">}]</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'> <span class="nx">out</span> <span class="o">:</span> <span class="p">{</span> <span class="nx">inline</span> <span class="o">:</span> <span class="mi">1</span> <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>======result======</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;results&quot;</span> <span class="o">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                        <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="mi">1376881200000</span><span class="p">,</span>
</span><span class='line'>                        <span class="s2">&quot;value&quot;</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                                <span class="s2">&quot;hour&quot;</span> <span class="o">:</span> <span class="mi">1376881200000</span><span class="p">,</span>
</span><span class='line'>                                <span class="s2">&quot;count&quot;</span> <span class="o">:</span> <span class="mi">2</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                <span class="p">},</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                        <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="mi">1376884800000</span><span class="p">,</span>
</span><span class='line'>                        <span class="s2">&quot;value&quot;</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                                <span class="s2">&quot;hour&quot;</span> <span class="o">:</span> <span class="mi">1376884800000</span><span class="p">,</span>
</span><span class='line'>                                <span class="s2">&quot;count&quot;</span> <span class="o">:</span> <span class="mi">5</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                <span class="p">},</span>
</span><span class='line'>              <span class="p">...</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                        <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="mi">1379404800000</span><span class="p">,</span>
</span><span class='line'>                        <span class="s2">&quot;value&quot;</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                                <span class="s2">&quot;hour&quot;</span> <span class="o">:</span> <span class="mi">1379404800000</span><span class="p">,</span>
</span><span class='line'>                                <span class="s2">&quot;count&quot;</span> <span class="o">:</span> <span class="mi">27</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="s2">&quot;timeMillis&quot;</span> <span class="o">:</span> <span class="mi">24</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;counts&quot;</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s2">&quot;input&quot;</span> <span class="o">:</span> <span class="mi">263</span><span class="p">,</span>
</span><span class='line'>                <span class="s2">&quot;emit&quot;</span> <span class="o">:</span> <span class="mi">263</span><span class="p">,</span>
</span><span class='line'>                <span class="s2">&quot;reduce&quot;</span> <span class="o">:</span> <span class="mi">35</span><span class="p">,</span>
</span><span class='line'>                <span class="s2">&quot;output&quot;</span> <span class="o">:</span> <span class="mi">43</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s2">&quot;ok&quot;</span> <span class="o">:</span> <span class="mi">1</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果emit修改成</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">emit</span><span class="p">(</span> <span class="nx">key</span><span class="p">,</span> <span class="p">{</span><span class="nx">count</span><span class="o">:</span><span class="mi">1</span><span class="p">}</span> <span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>reduce里</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="k">return</span> <span class="p">{</span><span class="nx">count</span><span class="o">:</span><span class="nx">total</span><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>结果就会是：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;results&quot;</span> <span class="o">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                        <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="mi">1376881200000</span><span class="p">,</span>
</span><span class='line'>                        <span class="s2">&quot;value&quot;</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                                <span class="s2">&quot;count&quot;</span> <span class="o">:</span> <span class="mi">2</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                <span class="p">},</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                        <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="mi">1376884800000</span><span class="p">,</span>
</span><span class='line'>                        <span class="s2">&quot;value&quot;</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                                <span class="s2">&quot;count&quot;</span> <span class="o">:</span> <span class="mi">5</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                <span class="p">},</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                        <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="mi">1376888400000</span><span class="p">,</span>
</span><span class='line'>                        <span class="s2">&quot;value&quot;</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                                <span class="s2">&quot;count&quot;</span> <span class="o">:</span> <span class="mi">8</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="s2">&quot;timeMillis&quot;</span> <span class="o">:</span> <span class="mi">22</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;counts&quot;</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s2">&quot;input&quot;</span> <span class="o">:</span> <span class="mi">263</span><span class="p">,</span>
</span><span class='line'>                <span class="s2">&quot;emit&quot;</span> <span class="o">:</span> <span class="mi">263</span><span class="p">,</span>
</span><span class='line'>                <span class="s2">&quot;reduce&quot;</span> <span class="o">:</span> <span class="mi">35</span><span class="p">,</span>
</span><span class='line'>                <span class="s2">&quot;output&quot;</span> <span class="o">:</span> <span class="mi">43</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s2">&quot;ok&quot;</span> <span class="o">:</span> <span class="mi">1</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p class='post-footer' style='background:none repeat scroll 0pt 0pt #eee;padding: 5px;margin-top:10px;color:gray;font-size:90%;'>
            &nbsp;原文地址：
            <a href='http://wangchaoqun.com/blog/2013/05/mongodb-chang-yong-ming-ling-he-cao-zuo-zong-jie-2.html/'>http://wangchaoqun.com/blog/2013/05/mongodb-chang-yong-ming-ling-he-cao-zuo-zong-jie-2.html/</a><br/>
            &nbsp;written by &nbsp;<a href='http://wangchaoqun.com'>wang chaoqun</a> &nbsp;posted at &nbsp;<a href='http://wangchaoqun.com'>http://wangchaoqun.com</a><br/>
            &nbsp;版权声明：自由转载-非商用-非衍生-保持署名 | <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB常用命令和操作总结1]]></title>
    <link href="http://wangchaoqun.com/blog/2013/05/mongodb-chang-yong-ming-ling-he-cao-zuo-zong-jie-1.html/"/>
    <updated>2013-05-09T16:29:59+08:00</updated>
    <id>http://wangchaoqun.com/blog/2013/05/mongodb-chang-yong-ming-ling-he-cao-zuo-zong-jie-1</id>
    <content type="html"><![CDATA[<p>做个总结，涉及到mongodb的常用命令、java driver查询、spring data mongodb的使用，group，map-reduce，aggregation framework等</p>

<h3>关闭服务</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use admin
</span><span class='line'>db.shutdownServer()</span></code></pre></td></tr></table></div></figure>


<h3>加锁</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use admin
</span><span class='line'>db.runCommand({"fsync":1,"lock":1})</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p><a href='http://wangchaoqun.com' style='color:#f5f5f5;text-decoration:none;'>wang chaoqun</a></p>

<h3>解锁</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use admin
</span><span class='line'>db.$cmd.sys.unlock.findOne()
</span><span class='line'>db.currentOp()    
</span><span class='line'>{"inprog":[]}</span></code></pre></td></tr></table></div></figure>


<h3>导出和导入</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mongodump -h 192.168.0.100:27017 -d mydb -o B:\mongo\dump
</span><span class='line'>mongorestore -h 127.0.0.1:27017 --directoryperdb B:\mongo\dump</span></code></pre></td></tr></table></div></figure>


<h3>用户</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use admin
</span><span class='line'>db.addUser('name','pwd')
</span><span class='line'>db.system.users.find()
</span><span class='line'>db.auth('name','pwd')
</span><span class='line'>db.removeUser('name')</span></code></pre></td></tr></table></div></figure>


<h3>数据库</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.copyDatabase('projectDB1', 'projectDB2')
</span><span class='line'>db.projectDB1.drop()
</span><span class='line'>db.dropDatabase()</span></code></pre></td></tr></table></div></figure>


<h3>增删改</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.mycollection.inser,save,update...</span></code></pre></td></tr></table></div></figure>


<h3>索引</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.user.ensureIndex({firstname: 1, lastname: 1}, {unique: true});
</span><span class='line'>db.user.dropIndex('address.post_1')</span></code></pre></td></tr></table></div></figure>


<h3>查询</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.mycollection.find,findOne,distinct.sort({'createTime',-1}).skip(3).limit(10)
</span><span class='line'>db.user.insert({"name":"cq","age":28,"address":{"province":100,"city":101}})
</span><span class='line'>db.user.find({"_id":ObjectId("52f830f3aab82981150db455")})
</span><span class='line'>db.user.find({"address":{"province":100,"city":101}})  # one record
</span><span class='line'>db.user.find({"address":{"city":101,"province":100}})  # nothing
</span><span class='line'>db.user.find({"address.city":101,"address.province":100})  # one record</span></code></pre></td></tr></table></div></figure>


<p>注意：key的顺序,因为MongoDB使用BSON的二进制数据格式<br/>
注意：limit的值例如为-5的话等同于5，为0则返回全部，汗<br/>
标签：<a href="http://wangchaoqun.com/blog/categories/tech">技术</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.user.find({creationTime:{$gt:1300000000000, $lte:1310000000000}); </span></code></pre></td></tr></table></div></figure>


<p>$elemMatch:前2个不对，匹配数组查询要用第3个</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.blog.find({"comments.name": "foo", "comments.content": "bar"});
</span><span class='line'>db.blog.find({"comments": {"name": "foo", "content": "bar"}});
</span><span class='line'>db.blog.find({"comments":{"$elemMatch":{"name":"joke", "content":"bad good ugly"}}});</span></code></pre></td></tr></table></div></figure>


<p>使用where可做运算</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.reply.find({$where: "this.upCount+this.downCount&lt;1"}); 
</span><span class='line'>db.reply.find("this.upCount+this.downCount&lt;1");</span></code></pre></td></tr></table></div></figure>


<h3>返回和排除字段</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.user.find({"name":"cq"}, {age:1, address:0}); 
</span><span class='line'>count
</span><span class='line'>db.topic.find().skip(10).limit(5).count(); # 所有的记录数量</span></code></pre></td></tr></table></div></figure>


<p>
要返回限制的记录数量，要使用count(true)或count(非0)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.topic.find().skip(10).limit(5).count(true);</span></code></pre></td></tr></table></div></figure>


<h3>dbref关联</h3>

<p>多查一</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&gt;</span> <span class="nx">db</span><span class="p">.</span><span class="nx">reply</span><span class="p">.</span><span class="nx">findOne</span><span class="p">({</span><span class="nx">creator</span><span class="o">:</span><span class="s2">&quot;wy&quot;</span><span class="p">},</span> <span class="p">{</span><span class="nx">creator</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">topic</span><span class="o">:</span><span class="mi">1</span><span class="p">})</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s2">&quot;52d3ae720b6316a72bb31c45&quot;</span><span class="p">),</span>
</span><span class='line'>        <span class="s2">&quot;creator&quot;</span> <span class="o">:</span> <span class="s2">&quot;wy&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;topic&quot;</span> <span class="o">:</span> <span class="nx">DBRef</span><span class="p">(</span><span class="s2">&quot;topic&quot;</span><span class="p">,</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s2">&quot;52cf620a0b6307f6a0d44450&quot;</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&gt;</span> <span class="nx">db</span><span class="p">.</span><span class="nx">reply</span><span class="p">.</span><span class="nx">findOne</span><span class="p">({</span><span class="nx">creator</span><span class="o">:</span><span class="s2">&quot;wy&quot;</span><span class="p">}).</span><span class="nx">topic</span>
</span><span class='line'><span class="nx">DBRef</span><span class="p">(</span><span class="s2">&quot;topic&quot;</span><span class="p">,</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s2">&quot;52cf620a0b6307f6a0d44450&quot;</span><span class="p">))</span>
</span><span class='line'><span class="o">&gt;</span> <span class="nx">db</span><span class="p">.</span><span class="nx">reply</span><span class="p">.</span><span class="nx">findOne</span><span class="p">({</span><span class="nx">creator</span><span class="o">:</span><span class="s2">&quot;wy&quot;</span><span class="p">}).</span><span class="nx">topic</span><span class="p">.</span><span class="nx">fetch</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s2">&quot;52cf620a0b6307f6a0d44450&quot;</span><span class="p">),</span>
</span><span class='line'>        <span class="s2">&quot;content&quot;</span> <span class="o">:</span> <span class="s2">&quot;xxx&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;createtime&quot;</span> <span class="o">:</span> <span class="nx">NumberLong</span><span class="p">(</span><span class="s2">&quot;1389322762932&quot;</span><span class="p">),</span>
</span><span class='line'>        <span class="s2">&quot;creator&quot;</span> <span class="o">:</span> <span class="s2">&quot;zzz&quot;</span>
</span><span class='line'>      <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>一查多</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&gt;</span> <span class="nx">topic</span><span class="o">=</span><span class="nx">db</span><span class="p">.</span><span class="nx">reply</span><span class="p">.</span><span class="nx">findOne</span><span class="p">({</span><span class="nx">creator</span><span class="o">:</span><span class="s2">&quot;wy&quot;</span><span class="p">}).</span><span class="nx">topic</span>
</span><span class='line'><span class="nx">DBRef</span><span class="p">(</span><span class="s2">&quot;topic&quot;</span><span class="p">,</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s2">&quot;52cf620a0b6307f6a0d44450&quot;</span><span class="p">))</span>
</span><span class='line'><span class="o">&gt;</span> <span class="nx">db</span><span class="p">.</span><span class="nx">reply</span><span class="p">.</span><span class="nx">find</span><span class="p">({</span><span class="s2">&quot;topic&quot;</span><span class="o">:</span><span class="nx">topic</span><span class="p">}).</span><span class="nx">count</span><span class="p">()</span>
</span><span class='line'><span class="mi">2</span>
</span><span class='line'><span class="o">&gt;</span> <span class="nx">topic</span><span class="o">=</span><span class="nx">db</span><span class="p">.</span><span class="nx">reply</span><span class="p">.</span><span class="nx">findOne</span><span class="p">({</span><span class="nx">creator</span><span class="o">:</span><span class="s2">&quot;wy&quot;</span><span class="p">}).</span><span class="nx">topic</span>
</span><span class='line'><span class="nx">DBRef</span><span class="p">(</span><span class="s2">&quot;topic&quot;</span><span class="p">,</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s2">&quot;52cf620a0b6307f6a0d44450&quot;</span><span class="p">))</span>
</span><span class='line'><span class="o">&gt;</span> <span class="nx">db</span><span class="p">.</span><span class="nx">reply</span><span class="p">.</span><span class="nx">find</span><span class="p">({</span><span class="s2">&quot;topic.$id&quot;</span><span class="o">:</span><span class="nx">topic</span><span class="p">.</span><span class="nx">$id</span><span class="p">}).</span><span class="nx">count</span><span class="p">()</span>
</span><span class='line'><span class="mi">2</span>
</span><span class='line'><span class="o">&gt;</span> <span class="nx">topic</span><span class="o">=</span><span class="nx">db</span><span class="p">.</span><span class="nx">reply</span><span class="p">.</span><span class="nx">findOne</span><span class="p">({</span><span class="nx">creator</span><span class="o">:</span><span class="s2">&quot;wy&quot;</span><span class="p">}).</span><span class="nx">topic</span><span class="p">.</span><span class="nx">fetch</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s2">&quot;52cf620a0b6307f6a0d44450&quot;</span><span class="p">),</span>
</span><span class='line'>        <span class="s2">&quot;content&quot;</span> <span class="o">:</span> <span class="s2">&quot;xxx&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;createtime&quot;</span> <span class="o">:</span> <span class="nx">NumberLong</span><span class="p">(</span><span class="s2">&quot;1389322762932&quot;</span><span class="p">),</span>
</span><span class='line'>        <span class="s2">&quot;creator&quot;</span> <span class="o">:</span> <span class="s2">&quot;zzz&quot;</span>
</span><span class='line'>      <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&gt;</span> <span class="nx">db</span><span class="p">.</span><span class="nx">reply</span><span class="p">.</span><span class="nx">find</span><span class="p">({</span><span class="s2">&quot;topic.$id&quot;</span><span class="o">:</span><span class="nx">topic</span><span class="p">.</span><span class="nx">_id</span><span class="p">}).</span><span class="nx">count</span><span class="p">()</span>
</span><span class='line'><span class="mi">2</span>
</span></code></pre></td></tr></table></div></figure>


<h4>spring data mongodb</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Criteria</span> <span class="n">cri</span> <span class="o">=</span> <span class="n">Criteria</span><span class="o">.</span><span class="na">where</span><span class="o">(</span><span class="s">&quot;topic.$id&quot;</span><span class="o">).</span><span class="na">is</span><span class="o">(</span><span class="k">new</span> <span class="n">ObjectId</span><span class="o">(</span><span class="s">&quot;52d8f8950b6316a72bb31c7c&quot;</span><span class="o">));</span>
</span><span class='line'><span class="n">Reply</span> <span class="n">reply</span> <span class="o">=</span> <span class="n">mongoTemplate</span><span class="o">.</span><span class="na">findOne</span><span class="o">(</span><span class="n">Query</span><span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">cri</span><span class="o">),</span> <span class="n">Reply</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">cri</span><span class="o">.</span><span class="na">andOperator</span><span class="o">(</span><span class="n">Criteria</span><span class="o">.</span><span class="na">where</span><span class="o">(</span><span class="s">&quot;passedtime&quot;</span><span class="o">).</span><span class="na">gt</span><span class="o">(</span><span class="n">fromTime</span><span class="o">),</span> <span class="n">Criteria</span><span class="o">.</span><span class="na">where</span><span class="o">(</span><span class="s">&quot;passedtime&quot;</span><span class="o">).</span><span class="na">lt</span><span class="o">(</span><span class="n">toTime</span><span class="o">));</span>
</span><span class='line'><span class="c1">// 错误的：Criteria.where(&quot;passedtime&quot;).gt(fromTime).and(&quot;passedtime&quot;).lt(toTime)</span>
</span></code></pre></td></tr></table></div></figure>


<h4>java driver 可以这样：</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">String</span> <span class="n">total</span> <span class="o">=</span> <span class="s">&quot;this.upCount+this.downCount &lt; &quot;</span> <span class="o">+</span> <span class="n">minCount</span><span class="o">;</span>
</span><span class='line'><span class="n">BasicDBObject</span> <span class="n">query</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BasicDBObject</span><span class="o">(</span><span class="s">&quot;$where&quot;</span><span class="o">,</span> <span class="n">total</span><span class="o">);</span>
</span><span class='line'><span class="n">query</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;passedtime&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BasicDBObject</span><span class="o">(</span><span class="s">&quot;$gt&quot;</span><span class="o">,</span> <span class="n">fromTime</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;$lt&quot;</span><span class="o">,</span> <span class="n">toTime</span><span class="o">));</span>
</span><span class='line'><span class="c1">// TODO query.append(other conditions);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 返回字段</span>
</span><span class='line'><span class="n">BasicDBObject</span> <span class="n">keys</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BasicDBObject</span><span class="o">();</span>
</span><span class='line'><span class="n">keys</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;_id&quot;</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'><span class="n">keys</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;creator&quot;</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">MongoClient</span> <span class="n">mongoClient</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MongoClient</span><span class="o">(</span><span class="k">new</span> <span class="n">ServerAddress</span><span class="o">(</span><span class="s">&quot;localhost&quot;</span><span class="o">,</span> <span class="mi">27017</span><span class="o">));</span>
</span><span class='line'><span class="n">DB</span> <span class="n">db</span> <span class="o">=</span> <span class="n">mongo</span><span class="o">.</span><span class="na">getDB</span><span class="o">(</span><span class="s">&quot;mydb&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">DBCollection</span> <span class="n">collection</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="na">getCollection</span><span class="o">(</span><span class="s">&quot;test&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="kt">long</span> <span class="n">count</span> <span class="o">=</span> <span class="n">collection</span><span class="o">.</span><span class="na">count</span><span class="o">(</span><span class="n">query</span><span class="o">);</span>
</span><span class='line'><span class="n">DBCursor</span> <span class="n">cursor</span> <span class="o">=</span> <span class="n">collection</span><span class="o">.</span><span class="na">find</span><span class="o">(</span><span class="n">query</span><span class="o">,</span> <span class="n">keys</span><span class="o">).</span><span class="na">limit</span><span class="o">(</span><span class="n">size</span><span class="o">);</span>
</span><span class='line'><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">size</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">DBObject</span> <span class="n">e</span> <span class="o">=</span> <span class="n">cursor</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
</span><span class='line'>  <span class="n">String</span> <span class="n">topicId</span> <span class="o">=</span> <span class="n">e</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;_id&quot;</span><span class="o">).</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>  <span class="c1">// TODO</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<p class='post-footer' style='background:none repeat scroll 0pt 0pt #eee;padding: 5px;margin-top:10px;color:gray;font-size:90%;'>
            &nbsp;原文地址：
            <a href='http://wangchaoqun.com/blog/2013/05/mongodb-chang-yong-ming-ling-he-cao-zuo-zong-jie-1.html/'>http://wangchaoqun.com/blog/2013/05/mongodb-chang-yong-ming-ling-he-cao-zuo-zong-jie-1.html/</a><br/>
            &nbsp;written by &nbsp;<a href='http://wangchaoqun.com'>wang chaoqun</a> &nbsp;posted at &nbsp;<a href='http://wangchaoqun.com'>http://wangchaoqun.com</a><br/>
            &nbsp;版权声明：自由转载-非商用-非衍生-保持署名 | <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mongodb数据模型设计总结]]></title>
    <link href="http://wangchaoqun.com/blog/2013/03/mongodb-shu-ju-mo-xing-she-ji-zong-jie.html/"/>
    <updated>2013-03-19T15:01:33+08:00</updated>
    <id>http://wangchaoqun.com/blog/2013/03/mongodb-shu-ju-mo-xing-she-ji-zong-jie</id>
    <content type="html"><![CDATA[<p>mongoDb的表设计(Schema design)不同于关系型数据库如oracle，mysql，但基本的设计原则依然一致，因为其灵活性，所以可以快速的改善现有设计以适应新的需求</p>

<p>设计需要权衡应用的需求，数据库各项性能指标，数据的获取模式；设计时一直要考虑应用如何使用数据如查询、更新、处理、索引、分片，还要考虑数据自身的内在结构</p>

<p>对照关系型数据库理解几个概念:<br/>
表：table  vs  collection<br/>
行：view/row(s)   vs json document<br/>
索引：index  vs index<br/>
关联：join vs    embedding &amp; linking across documents<br/>
分片：partition  vs shard  <!--more--><a href='http://wangchaoqun.com' style='color:#f5f5f5;text-decoration:none;'>wang chaoqun</a></p>

<h2>最佳实践  </h2>

<p>1、顶级对象，一般使用独立的collection，区别于嵌入<br/>
2、线性明细对象如订单里的订单项，一般使用嵌入<br/>
3、包含关系的对象通常使用嵌入<br/>
4、多对多的关系通常采用引用，dbref<br/>
5、只有少量数据的可以单独作为一个collection，这样可以快速缓存到应用服务器内存<br/>
6、嵌入对象比顶级对象难引用，至少现在还不能对它使用dbref<br/>
7、嵌入对象的获取有时候会比较难，例如各科分数嵌入到学生对象，从所有学生中获取前100个高分，不嵌入会更简单<br/>
8、如果嵌入对象数量很多，可以限制其大小<br/>
9、性能存在问题（应是查询的性能），使用嵌入</p>

<p>标签：<a href="http://wangchaoqun.com/blog/categories/mongodb">mongodb</a></p>

<h2>用例</h2>

<h4>产品信息：</h4>

<p>如cd,dvd，shipping里有包装尺寸，pricing里有折扣，details有属性或标签之类使用数组（数量不定，也不会很多），尤其像尺寸和属性，mongodb的灵活的优势就显现出来了，rdbms要么加预留字段，tag_1,tag_2之类，要么就得分出个表使用关联</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>sku: "00e8da9b",
</span><span class='line'>type: "Audio Album",
</span><span class='line'>title: "A Love Supreme",
</span><span class='line'>description: "by John Coltrane",
</span><span class='line'>asin: "B0000A118M",
</span><span class='line'>shipping: {
</span><span class='line'>  weight: 6,
</span><span class='line'>  dimensions: {
</span><span class='line'>      width: 10,
</span><span class='line'>      height: 10,
</span><span class='line'>      depth: 1
</span><span class='line'>  }
</span><span class='line'>},
</span><span class='line'>pricing: {
</span><span class='line'>  list: 1200,
</span><span class='line'>  retail: 1100,
</span><span class='line'>  savings: 100,
</span><span class='line'>  pct_savings: 8
</span><span class='line'>},
</span><span class='line'>details: {
</span><span class='line'>  title: "A Love Supreme [Original Recording Reissued]",
</span><span class='line'>  artist: "John Coltrane",
</span><span class='line'>  genre: [ "Jazz", "General" ],
</span><span class='line'>  tracks: [
</span><span class='line'>      "A Love Supreme Part I: Acknowledgement",
</span><span class='line'>      "A Love Supreme Part II - Resolution",
</span><span class='line'>      "A Love Supreme, Part III: Pursuance",
</span><span class='line'>      "A Love Supreme, Part IV-Psalm"
</span><span class='line'>  ]
</span><span class='line'>}
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h4>内容管理系统</h4>

<p>页面内容（不经常变化的如联系我们，关于之类），新闻文章（标题，摘要，内容，作者，时间，栏目&hellip;），图片（相册或分类，标签，描述，时间，甚至图片文件）</p>

<h4>Basic Page</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>  _id: ObjectId(...),
</span><span class='line'>  nonce: ObjectId(...),
</span><span class='line'>  metadata: {
</span><span class='line'>      type: ’basic-page’
</span><span class='line'>      section: ’my-photos’,
</span><span class='line'>      slug: ’about’,
</span><span class='line'>      title: ’About Us’,
</span><span class='line'>      created: ISODate(...),
</span><span class='line'>      author: { _id: ObjectId(...), name: ’Rick’ },
</span><span class='line'>      tags: [ ... ],
</span><span class='line'>      detail: { 
</span><span class='line'>          text: ’# About Us\n...’ 
</span><span class='line'>      }
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h4>photo</h4>

<p>文件可以保存在数据库，使用BSON对象，但最大不能超过16MB，所以大的文件可以采用GridFS将数据存储在两个collection如这里是cms.assets.files保存基础数据，cms.assets.chunks保存文件数据；<br/>
cms.assets.files：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>  _id: ObjectId(...),
</span><span class='line'>  length: 123...,
</span><span class='line'>  chunkSize: 262144,
</span><span class='line'>  uploadDate: ISODate(...),
</span><span class='line'>  contentType: ’image/jpeg’,
</span><span class='line'>  md5: ’ba49a...’,
</span><span class='line'>  metadata: {
</span><span class='line'>      nonce: ObjectId(...),
</span><span class='line'>      slug: ’2012-03-invisible-bicycle’,
</span><span class='line'>      type: ’photo’,
</span><span class='line'>      section: ’my-album’,
</span><span class='line'>      title: ’Kitteh’,
</span><span class='line'>      created: ISODate(...),
</span><span class='line'>      author: { 
</span><span class='line'>          _id: ObjectId(...), 
</span><span class='line'>          name: ’Jared’ 
</span><span class='line'>      },
</span><span class='line'>      tags: [ ... ],
</span><span class='line'>      detail: {
</span><span class='line'>          filename: ’kitteh_invisible_bike.jpg’,
</span><span class='line'>          resolution: [ 1600, 1600 ], 
</span><span class='line'>          ... 
</span><span class='line'>      }
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>an example of the GridFS interface in Java</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// returns default GridFS bucket (i.e. &quot;fs&quot; collection)</span>
</span><span class='line'><span class="n">GridFS</span> <span class="n">myFS</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GridFS</span><span class="o">(</span><span class="n">myDatabase</span><span class="o">);</span>
</span><span class='line'><span class="c1">// saves the file to &quot;fs&quot; GridFS bucket</span>
</span><span class='line'><span class="n">myFS</span><span class="o">.</span><span class="na">createFile</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">&quot;/tmp/largething.mpg&quot;</span><span class="o">));</span>
</span><span class='line'><span class="n">Optionally</span><span class="o">,</span> <span class="n">interfaces</span> <span class="n">may</span> <span class="n">support</span> <span class="n">other</span> <span class="n">additional</span> <span class="n">GridFS</span> <span class="n">buckets</span> <span class="n">as</span> <span class="n">in</span> <span class="n">the</span> <span class="n">following</span> <span class="nl">example:</span>
</span><span class='line'><span class="c1">// returns GridFS bucket named &quot;contracts&quot;</span>
</span><span class='line'><span class="n">GridFS</span> <span class="n">myContracts</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GridFS</span><span class="o">(</span><span class="n">myDatabase</span><span class="o">,</span> <span class="s">&quot;contracts&quot;</span><span class="o">);</span>
</span><span class='line'><span class="c1">// retrieve GridFS object &quot;smithco&quot;</span>
</span><span class='line'><span class="n">GridFSDBFile</span> <span class="n">file</span> <span class="o">=</span> <span class="n">myContracts</span><span class="o">.</span><span class="na">findOne</span><span class="o">(</span><span class="s">&quot;smithco&quot;</span><span class="o">);</span>
</span><span class='line'><span class="c1">// saves the GridFS file to the file system</span>
</span><span class='line'><span class="n">file</span><span class="o">.</span><span class="na">writeTo</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">&quot;/tmp/smithco.pdf&quot;</span><span class="o">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>标签：<a href="http://wangchaoqun.com/blog/categories/tech">技术</a></p>

<h4>用户评论</h4>

<p>有多种实现，平铺式？盖楼式？分页？选择哪种就要看具体需求了；如果未来想切换，成本很高<br/>
1、独立collection<br/>
2、嵌入，数量要限制<br/>
3、不嵌入，桶式存储（每个文档存储N个comments数组，page,count）</p>

<p>也要注意评论里的用户信息，考虑冗余用户id,昵称和头像还是使用dbref关联，区别在于前者性能好些但信息更新比如头像，之前的评论显示的头像就不一致了</p>

<h2>资料  </h2>

<p>官方手册<br/>
<a href="http://docs.mongodb.org/manual/">http://docs.mongodb.org/manual/</a></p>

<p>官方模式设计文档，有单独pdf，包含一对一，一对多，多对多，树状结构，原子操作，gridFS&hellip;
<a href="http://docs.mongodb.org/manual/data-modeling/">http://docs.mongodb.org/manual/data-modeling/</a></p>

<p>Schema Design Basics &ndash; MongoSF Presentation (May 2011)
<a href="http://www.10gen.com/video/mongosf2011/schemabasics">http://www.10gen.com/video/mongosf2011/schemabasics</a></p>

<p class='post-footer' style='background:none repeat scroll 0pt 0pt #eee;padding: 5px;margin-top:10px;color:gray;font-size:90%;'>
            &nbsp;原文地址：
            <a href='http://wangchaoqun.com/blog/2013/03/mongodb-shu-ju-mo-xing-she-ji-zong-jie.html/'>http://wangchaoqun.com/blog/2013/03/mongodb-shu-ju-mo-xing-she-ji-zong-jie.html/</a><br/>
            &nbsp;written by &nbsp;<a href='http://wangchaoqun.com'>wang chaoqun</a> &nbsp;posted at &nbsp;<a href='http://wangchaoqun.com'>http://wangchaoqun.com</a><br/>
            &nbsp;版权声明：自由转载-非商用-非衍生-保持署名 | <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cygwin & Wine & Ruby 记录]]></title>
    <link href="http://wangchaoqun.com/blog/2013/01/cygwin-and-wine-and-ruby-ji-lu.html/"/>
    <updated>2013-01-16T16:03:36+08:00</updated>
    <id>http://wangchaoqun.com/blog/2013/01/cygwin-and-wine-and-ruby-ji-lu</id>
    <content type="html"><![CDATA[<p>cygwin是一个在windows平台上运行的unix模拟环境, wine则可以安装在Linux，再对应到Windows相应的函数来调用DLL以运行Windows程序。这两个就是利器，windows下不想用虚拟机（占用资源还挺多）或双系统，就可以用用cygwin；服务器上想搞点exe的东西就安装个wine。至于ruby，是因为octopress要用，开个虚拟机写博客很不爽，windows下折腾安装配置，却中文编码没解决，还是cygwin搞定。<!--more--><a href='http://wangchaoqun.com' style='color:#f5f5f5;text-decoration:none;'>wang chaoqun</a></p>

<h2>cygwin的安装</h2>

<p>官网下载setup-x86_64.exe，运行，下一步，到download site选第一个163的镜像，速度快些；下一步到select packages页面，不选不点，直接下一步，会下载安装默认配置的相关包；安装完默认，重新运行setup，选择要用的包，比如下面这些基本需要：
<a href="http://blog.developwithpassion.com/2012/03/30/installing-rvm-with-cygwin-on-windows/">摘录自blog.developwithpassion.com</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Archive  
</span><span class='line'>    unzip – Unzipping zip files  
</span><span class='line'>Net  
</span><span class='line'>    openssl – bin and sources
</span><span class='line'>    openssh – Only if you are not going to compile openssh yourself
</span><span class='line'>    curl – download internet resources
</span><span class='line'>Devl
</span><span class='line'>    colorgcc
</span><span class='line'>    gcc
</span><span class='line'>    gcc-core – compiler
</span><span class='line'>    git
</span><span class='line'>    git-completion
</span><span class='line'>    git-gui
</span><span class='line'>    git-svn
</span><span class='line'>    gitk
</span><span class='line'>    libtool – Shared library generation tool. You’ll need it when trying to compile rubies
</span><span class='line'>    libncurses-devel – Used when compiling several other tools I use
</span><span class='line'>    make
</span><span class='line'>    mercurial
</span><span class='line'>    openssl-devel – Required for compiling openssh (not necessarily required for rvm, but I always install it to compile openssh myself)
</span><span class='line'>    readline
</span><span class='line'>    Libs
</span><span class='line'>    zlib
</span><span class='line'>    zlib-devel
</span><span class='line'>Utils
</span><span class='line'>    ncurses – Enabling better handling of terminal
</span><span class='line'>    patch – Apply a diff file to an original.</span></code></pre></td></tr></table></div></figure>


<h2>wine的安装，centos6.x</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget http://mirrors.sohu.com/fedora-epel/6/i386/epel-release-6-8.noarch.rpm
</span><span class='line'>rpm -ivh epel-release-6-8.noarch.rpm
</span><span class='line'>rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6
</span><span class='line'>yum makecache
</span><span class='line'>yum install wine</span></code></pre></td></tr></table></div></figure>


<p>安装完成后，应用程序（application）->wine->wine configure稍作配置，也可能会提示download gecko，install 完成即可
把windows/system32下的MFC42.dll   msxml.dll    msvcp60.dll   riched20.dll    riched32.dll 这几个文件复制到 ~/.wine/drive_c/windows/system32里，再输入命令：winecfg<br/>
安装exe，英文系统会有中文乱码情况</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wine whatever.exe</span></code></pre></td></tr></table></div></figure>


<h2>安装Ruby</h2>

<p>我虚拟了两个centos，一个用make install安装并配置octopress环境，另一个同样方法却不成功，后来用rvm可行，不用yum install ruby 是因为版本过低。</p>

<h4>RVM安装：</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -L https://get.rvm.io | bash -s stable --ruby</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby --version</span></code></pre></td></tr></table></div></figure>


<p>显示版本即成功</p>

<h4>make install：</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget ftp://ftp.ruby-lang.org//pub/ruby/2.1/ruby-2.1.0.tar.gz
</span><span class='line'>tar -zxvf ruby-2.1.0.tar.gz
</span><span class='line'>cd ruby-2.1.0
</span><span class='line'>./configure --prefix=/usr/local/ruby
</span><span class='line'>make
</span><span class='line'>make test
</span><span class='line'>make install  </span></code></pre></td></tr></table></div></figure>


<h4>windows7下简直是个悲剧：</h4>

<p>下载rubyinstaller安装，devkit解压，然后cmd下
cdd到DevKit path</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby dk.rb init
</span><span class='line'>ruby dk.rb review
</span><span class='line'>ruby dk.rb install</span></code></pre></td></tr></table></div></figure>


<p>出现utf-8错误，使用chcp 1252，再进行上三句，done<br/>
标签：<a href="http://wangchaoqun.com/blog/categories/tech">技术</a><br/>
然后配置octopress环境，英文下rake成功，有中文（比如文章分类、标签带中文的）不成;<br/>
<a href="http://txgcwm.github.io/">摘录自txgcwm.github.io</a></p>

<blockquote><p>在实际使用（rake generate/rake preview）的时候，若blog整体采用了非ascii码的编码格式（比如utf-8）就会出现类似这样的错误：<br/>
Liquid error: incompatible encoding regexp match (ascii-8bit regexp with utf-8 string)<br/>
其实是由于插件文件plugins/category_list_tag.rb本身是ascii编码所致:</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ chardet category_list_tag.rb
</span><span class='line'>category_list_tag.rb: ascii (confidence: 1.00)</span></code></pre></td></tr></table></div></figure>


<p>category_list_tag.rb中很多地方用到了ruby的正则表达式，而ruby的正则表达式在匹配的时候，默认是按照“代码源文件”的编码格式(在这里是ascii)进行匹配的，而如果blog是utf-8编码的话就会出现上述错误。有两种解决办法：
1. 将category_list_tag.rb转成utf-8格式。<br/>
2. 更改category_list_tag.rb中所有的正则表达式声明，加上u选项（u的意思就是以utf-8编码格式来进行匹配）。例如，若原正则表达式是/regexp/, 则改成/regexp/u。</p>

<p class='post-footer' style='background:none repeat scroll 0pt 0pt #eee;padding: 5px;margin-top:10px;color:gray;font-size:90%;'>
            &nbsp;原文地址：
            <a href='http://wangchaoqun.com/blog/2013/01/cygwin-and-wine-and-ruby-ji-lu.html/'>http://wangchaoqun.com/blog/2013/01/cygwin-and-wine-and-ruby-ji-lu.html/</a><br/>
            &nbsp;written by &nbsp;<a href='http://wangchaoqun.com'>wang chaoqun</a> &nbsp;posted at &nbsp;<a href='http://wangchaoqun.com'>http://wangchaoqun.com</a><br/>
            &nbsp;版权声明：自由转载-非商用-非衍生-保持署名 | <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安装git, 建立Octopress博客]]></title>
    <link href="http://wangchaoqun.com/blog/2013/01/an-zhuang-git-create-octopress-blog.html/"/>
    <updated>2013-01-07T14:34:24+08:00</updated>
    <id>http://wangchaoqun.com/blog/2013/01/an-zhuang-git-create-octopress-blog</id>
    <content type="html"><![CDATA[<p>本文参考了若干网络日志（谢过~）, 配置个人博客后整理而成</p>

<h2>安装git  </h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum -y install git
</span><span class='line'>git --version</span></code></pre></td></tr></table></div></figure>


<p></p>

<!--more-->


<p><a href='http://wangchaoqun.com' style='color:#f5f5f5;text-decoration:none;'>wang chaoqun</a><br/>
在本机使用git创建SSH Key</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-keygen -C "username" -t rsa  
</span><span class='line'>ssh -v git@github.com  </span></code></pre></td></tr></table></div></figure>


<p>
//if denied, use <code>ssh-add ~/.ssh/id_rsa</code> to fix this.<br/>
备注: useremail为你注册github用户时的邮箱地址 这时，在系统目录下就会生成一个.ssh文件夹，里面为对应的SSH Key，其中id_rsa.pub是Gighub需要的SSH公钥文件。 将id_ras.pub文件里内容拷贝到Github的Account Settings里的key中。 这样你就可以直接使用Git和Github了.</p>

<h2>安装ruby  </h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget ftp://ftp.ruby-lang.org/pub/ruby/2.1/ruby-2.1.0.tar.gz  
</span><span class='line'>tar -zxvf ruby-2.1.0.tar.gz
</span><span class='line'>cd ruby-2.1.0
</span><span class='line'>./configure --prefix=/usr/local/ruby
</span><span class='line'>make
</span><span class='line'>make test
</span><span class='line'>make install</span></code></pre></td></tr></table></div></figure>


<h2>安装OctoPress  </h2>

<p>通过Git从Github上克隆一份Octopress</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>cd octopress  
</span><span class='line'>gem install bundler  
</span><span class='line'>bundle install  </span></code></pre></td></tr></table></div></figure>


<p>安装Octopress默认的Theme</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake install  </span></code></pre></td></tr></table></div></figure>


<p>
//if error: rake aborted!<br/>
//You have already activated rake 10.1.0, but your Gemfile requires rake 0.9.2.2.
delete your Gemfile.lock and edit the version of rake specified in your Gemfile to 10.1. Job done</p>

<h2>通过_config.yml来配置博客  </h2>

<h2>创建一个博客</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post["Hello World"]</span></code></pre></td></tr></table></div></figure>


<h2>创建一个博客页面</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_page["blog"]</span></code></pre></td></tr></table></div></figure>


<p>预览效果：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate  
</span><span class='line'>rake preview  </span></code></pre></td></tr></table></div></figure>


<p></p>

<p>然后在浏览器中打开<a href="http://localhost:4000">http://localhost:4000</a></p>

<h2>发布Octopress到Github</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd octopress  
</span><span class='line'>rake setup_github_pages  
</span><span class='line'>Repository url: git@github.com:username/username.github.com.git  </span></code></pre></td></tr></table></div></figure>


<p>将博客发布到Github上，输入下面命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake deploy  </span></code></pre></td></tr></table></div></figure>


<p>这样，生成的内容将会自动发布到master分支，并且可以使用 <a href="http://username.github.com">http://username.github.com</a> 访问内容。</p>

<p>将source提交：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git add .  
</span><span class='line'>git commit -m "blog init"  
</span><span class='line'>git push origin source  </span></code></pre></td></tr></table></div></figure>


<p>删除之前的添加信息 (配置文件在 ~/octopress/.git/config)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git remote rm origin  
</span><span class='line'>git remote add origin git@github.com:username/username.github.com.git  </span></code></pre></td></tr></table></div></figure>


<h2>添加多说评论  </h2>

<p>在_config.yml尾部添加如下行：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Duoshuo Comments  
</span><span class='line'>duoshuo_show_comment_count: true  </span></code></pre></td></tr></table></div></figure>


<p>在source/_layouts/post.html尾部添加如下代码：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  </span></code></pre></td></tr></table></div></figure>


<p></p>

<p>创建source/_includes/post/duoshuo.html文件，将从多说获得的代码放入其中。
标签：<a href="http://wangchaoqun.com/blog/categories/tech">技术</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;!-- Duoshuo Comment BEGIN --&gt;
</span><span class='line'>    &lt;div class="ds-thread"&gt;&lt;/div&gt;
</span><span class='line'>&lt;script type="text/javascript"&gt;
</span><span class='line'>var duoshuoQuery = {short_name:"username"};
</span><span class='line'>  (function() {
</span><span class='line'>      var ds = document.createElement('script');
</span><span class='line'>      ds.type = 'text/javascript';ds.async = true;
</span><span class='line'>      ds.src = 'http://static.duoshuo.com/embed.js';
</span><span class='line'>      ds.charset = 'UTF-8';
</span><span class='line'>      (document.getElementsByTagName('head')[0] 
</span><span class='line'>      || document.getElementsByTagName('body')[0]).appendChild(ds);
</span><span class='line'>  })();
</span><span class='line'>  &lt;/script&gt;
</span><span class='line'>&lt;!-- Duoshuo Comment END --&gt;</span></code></pre></td></tr></table></div></figure>


<h2>将AddThis更换为JiaThis</h2>

<p>打开source/_includes/post/sharing.html，注释掉<code>&lt;div class="share"&gt;...&lt;/div&gt;</code>中的AddThis相关语句,然后在<code>&lt;/div&gt;</code>前加入从JiaThis获得的代码。</p>

<h2>Octopress写作</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd octopress  
</span><span class='line'>rake new_post["new blog"]  </span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>another pc</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone -b source git@github.com:username/username.github.com.git octopress  
</span><span class='line'>cd octopress  
</span><span class='line'>git clone git@github.com:username/username.github.com.git _deploy  </span></code></pre></td></tr></table></div></figure>


<h2>增加category_list插件</h2>

<p>保存以下代码到plugins/category_list_tag.rb：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>module Jekyll
</span><span class='line'>  class CategoryListTag &lt; Liquid::Tag
</span><span class='line'>    def render(context)
</span><span class='line'>      html = ""
</span><span class='line'>      categories = context.registers[:site].categories.keys
</span><span class='line'>      categories.sort.each do |category|
</span><span class='line'>        posts_in_category = context.registers[:site].categories[category].size
</span><span class='line'>        category_dir = context.registers[:site].config['category_dir']
</span><span class='line'>        category_url = File.join(category_dir, category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase)
</span><span class='line'>        html &lt;&lt; "&lt;li class='category'&gt;&lt;a href='http://wangchaoqun.com/#{category_url}/'&gt;#{category} (#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n"
</span><span class='line'>      end
</span><span class='line'>      html
</span><span class='line'>    end
</span><span class='line'>  end
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>Liquid::Template.register_tag('category_list', Jekyll::CategoryListTag)</span></code></pre></td></tr></table></div></figure>


<p>将category加入到侧边导航栏，需要增加一个aside
复制以下代码到source/_includes/asides/category_list.html。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;section&gt;
</span><span class='line'>  &lt;h1&gt;文章分类&lt;/h1&gt;
</span><span class='line'>  &lt;ul id="categories"&gt;
</span><span class='line'>    <li><a style="padding: 3px;" href='http://wangchaoqun.com/blog/categories/ftp/'>ftp (1)</a>
<a style="padding: 3px;" href='http://wangchaoqun.com/blog/categories/hibernate/'>hibernate (1)</a>
<a style="padding: 3px;" href='http://wangchaoqun.com/blog/categories/java/'>java (8)</a></li>
<li><a style="padding: 3px;" href='http://wangchaoqun.com/blog/categories/linux/'>linux (3)</a>
<a style="padding: 3px;" href='http://wangchaoqun.com/blog/categories/memcached/'>memcached (1)</a>
<a style="padding: 3px;" href='http://wangchaoqun.com/blog/categories/mongodb/'>mongodb (6)</a></li>
<li><a style="padding: 3px;" href='http://wangchaoqun.com/blog/categories/mysql/'>mysql (1)</a>
<a style="padding: 3px;" href='http://wangchaoqun.com/blog/categories/spring/'>spring (1)</a>
<a style="padding: 3px;" href='http://wangchaoqun.com/blog/categories/tech/'>tech (24)</a></li>
<li><a style="padding: 3px;" href='http://wangchaoqun.com/blog/categories/tomcat/'>tomcat (1)</a>
<a style="padding: 3px;" href='http://wangchaoqun.com/blog/categories/web/'>web (2)</a>
<a style="padding: 3px;" href='http://wangchaoqun.com/blog/categories/dai-ma/'>代码 (3)</a></li>
<li><a style="padding: 3px;" href='http://wangchaoqun.com/blog/categories/qi-ta/'>其他 (1)</a>
<a style="padding: 3px;" href='http://wangchaoqun.com/blog/categories/duo-xian-cheng/'>多线程 (1)</a>
<a style="padding: 3px;" href='http://wangchaoqun.com/blog/categories/jia-gou/'>架构 (2)</a></li>
<li><a style="padding: 3px;" href='http://wangchaoqun.com/blog/categories/sheng-huo/'>生活 (7)</a>
<a style="padding: 3px;" href='http://wangchaoqun.com/blog/categories/suan-fa/'>算法 (1)</a>
<a style="padding: 3px;" href='http://wangchaoqun.com/blog/categories/zhi-ye/'>职业 (2)</a></li>
<li><a style="padding: 3px;" href='http://wangchaoqun.com/blog/categories/she-ji-mo-shi/'>设计模式 (1)</a>
<a style="padding: 3px;" href='http://wangchaoqun.com/blog/categories/du-shu/'>读书 (3)</a>

</span><span class='line'>  &lt;/ul&gt;
</span><span class='line'>&lt;/section&gt;</span></code></pre></td></tr></table></div></figure>


<p>配置侧边栏需要修改_config.yml文件，修改其default_asides项：
default_asides: [&hellip;, asides/category_list.html, &hellip;]</p>

<h2>中文分类支持</h2>

<p>侧边栏添加了文章分类后，英文分类没有问题，点击打开是分类下的文章列表；但中文分类，如云计算、设计模式之类就不行了，网上有各种解决办法，复杂了点；而且我发现新建日志的文件名如果是中文则会转成拼音，文章分类也是，你可以看下public/blog/categories下的文件名；所以如果能把边栏的链接地址改成拼音就行了，rakefile里有<code>rake new_post</code>代码；查看分析发现和<code>plugins/category_list_tag.rb</code>的处理类似，<br/>
<code>category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase</code>是转换为单词‘-’分隔并且小写，rakefile里是<code> mkdir_p  
"#{source_dir}/#{posts_dir}"  
filename = "#{source_dir}/#{posts_dir}/#{Time.now.strftime('%Y-%m-%d')}-#{title.to_url}.#{new_post_ext}"</code><br/>
  <strong>注意:</strong>title多了<code>.to_url</code>，原来如此，将<code>category_list_tag.rb</code>里改成<br/>
  <code>category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase.to_url</code>，
然后rake generate  rake preview<br/>
done！</p>

<p class='post-footer' style='background:none repeat scroll 0pt 0pt #eee;padding: 5px;margin-top:10px;color:gray;font-size:90%;'>
            &nbsp;原文地址：
            <a href='http://wangchaoqun.com/blog/2013/01/an-zhuang-git-create-octopress-blog.html/'>http://wangchaoqun.com/blog/2013/01/an-zhuang-git-create-octopress-blog.html/</a><br/>
            &nbsp;written by &nbsp;<a href='http://wangchaoqun.com'>wang chaoqun</a> &nbsp;posted at &nbsp;<a href='http://wangchaoqun.com'>http://wangchaoqun.com</a><br/>
            &nbsp;版权声明：自由转载-非商用-非衍生-保持署名 | <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Excel导出工具类]]></title>
    <link href="http://wangchaoqun.com/blog/2013/01/excel-dao-chu-gong-ju-lei.html/"/>
    <updated>2013-01-01T16:32:42+08:00</updated>
    <id>http://wangchaoqun.com/blog/2013/01/excel-dao-chu-gong-ju-lei</id>
    <content type="html"><![CDATA[<p>前端使用jquery easyui，datagrid添加导出按钮（另外的js逻辑）即可将当前页或所有页数据(支持查询条件的导出)导出到excel，支持office excel 2003和2007+;<br/>
使用apache poi（+ooxml）实现，主要代码片段如下：  <!--more--><a href='http://wangchaoqun.com' style='color:#f5f5f5;text-decoration:none;'>wang chaoqun</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">colalife</span><span class="o">.</span><span class="na">core</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">excel</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ExcelExportUtil</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">ExcelExportUtil</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">CellStyle</span><span class="o">&gt;</span> <span class="n">styles</span><span class="o">;</span>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * sheetName Excel导出文档里的标签页名，默认为Sheet1</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">DEFAULT_SHEET_NAME</span> <span class="o">=</span> <span class="s">&quot;Sheet1&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * excel导出时文件名，默认为&quot;导出excel.xls&quot;</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">DEFAULT_EXCEL_FILE_NAME</span> <span class="o">=</span> <span class="s">&quot;导出excel.xls&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * Excel导出,sheetName默认为Sheet1</span>
</span><span class='line'><span class="cm">  * @param dataList 数据，可用bean list</span>
</span><span class='line'><span class="cm">  * @param columns 字段和字段显示名的键值对</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">export</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;?&gt;</span> <span class="n">dataList</span><span class="o">,</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">columns</span><span class="o">,</span> <span class="n">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span>
</span><span class='line'>          <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span><span class="o">[]</span> <span class="n">fields</span> <span class="o">=</span> <span class="n">columns</span><span class="o">.</span><span class="na">keySet</span><span class="o">().</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
</span><span class='line'>      <span class="n">String</span><span class="o">[]</span> <span class="n">titles</span> <span class="o">=</span> <span class="n">columns</span><span class="o">.</span><span class="na">values</span><span class="o">().</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
</span><span class='line'>      <span class="n">export</span><span class="o">(</span><span class="n">dataList</span><span class="o">,</span> <span class="n">fields</span><span class="o">,</span> <span class="n">titles</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * Excel导出,sheetName默认为Sheet1</span>
</span><span class='line'><span class="cm">  * @param dataList 数据，可用bean list</span>
</span><span class='line'><span class="cm">  * @param EasyuiDataGrid 用来获取fields titles 字段和字段显示名的数组</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">export</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;?&gt;</span> <span class="n">dataList</span><span class="o">,</span> <span class="n">EasyuiDataGrid</span> <span class="n">dg</span><span class="o">,</span> <span class="n">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span>
</span><span class='line'>          <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span><span class="o">[]</span> <span class="n">fields</span> <span class="o">=</span> <span class="n">dg</span><span class="o">.</span><span class="na">getFields</span><span class="o">().</span><span class="na">split</span><span class="o">(</span><span class="s">&quot;,&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">String</span><span class="o">[]</span> <span class="n">titles</span> <span class="o">=</span> <span class="n">dg</span><span class="o">.</span><span class="na">getTitles</span><span class="o">().</span><span class="na">split</span><span class="o">(</span><span class="s">&quot;,&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Workbook</span> <span class="n">excel</span> <span class="o">=</span> <span class="n">ExcelExportUtil</span><span class="o">.</span><span class="na">getExcel</span><span class="o">(</span><span class="n">dataList</span><span class="o">,</span> <span class="n">fields</span><span class="o">,</span> <span class="n">titles</span><span class="o">);</span>
</span><span class='line'>      <span class="n">ExcelExportUtil</span><span class="o">.</span><span class="na">setResponseForExcel</span><span class="o">(</span><span class="n">response</span><span class="o">);</span>
</span><span class='line'>      <span class="n">excel</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">());</span>
</span><span class='line'>      <span class="n">response</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">().</span><span class="na">flush</span><span class="o">();</span>
</span><span class='line'>      <span class="n">response</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">().</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * Excel导出,sheetName默认为Sheet1</span>
</span><span class='line'><span class="cm">  * @param dataList 数据，可用bean list</span>
</span><span class='line'><span class="cm">  * @param fields titles 字段和字段显示名的数组</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">export</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;?&gt;</span> <span class="n">dataList</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">fields</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">titles</span><span class="o">,</span> <span class="n">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span>
</span><span class='line'>          <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Workbook</span> <span class="n">excel</span> <span class="o">=</span> <span class="n">ExcelExportUtil</span><span class="o">.</span><span class="na">getExcel</span><span class="o">(</span><span class="n">dataList</span><span class="o">,</span> <span class="n">fields</span><span class="o">,</span> <span class="n">titles</span><span class="o">);</span>
</span><span class='line'>      <span class="n">ExcelExportUtil</span><span class="o">.</span><span class="na">setResponseForExcel</span><span class="o">(</span><span class="n">response</span><span class="o">);</span>
</span><span class='line'>      <span class="n">excel</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">());</span>
</span><span class='line'>      <span class="n">response</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">().</span><span class="na">flush</span><span class="o">();</span>
</span><span class='line'>      <span class="n">response</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">().</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * Excel导出的实现,sheetName默认为Sheet1</span>
</span><span class='line'><span class="cm">  * @param data 数据，可用bean list</span>
</span><span class='line'><span class="cm">  * @param columns 字段和字段显示名的键值对</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">Workbook</span> <span class="nf">getExcel</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;?&gt;</span> <span class="n">data</span><span class="o">,</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">columns</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">getExcel</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">DEFAULT_SHEET_NAME</span><span class="o">,</span> <span class="n">columns</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * Excel导出的实现,sheetName默认为Sheet1</span>
</span><span class='line'><span class="cm">  * @param data 数据，可用bean list</span>
</span><span class='line'><span class="cm">  * @param columns 字段和字段显示名的键值对</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">Workbook</span> <span class="nf">getExcel</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;?&gt;</span> <span class="n">data</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">fields</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">titles</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">getExcel</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">DEFAULT_SHEET_NAME</span><span class="o">,</span> <span class="n">fields</span><span class="o">,</span> <span class="n">titles</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * Excel导出的实现</span>
</span><span class='line'><span class="cm">  * @param data 数据，可用bean list</span>
</span><span class='line'><span class="cm">  * @param sheetName 导出文档里的标签页名</span>
</span><span class='line'><span class="cm">  * @param columns 字段和字段显示名的键值对</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">Workbook</span> <span class="nf">getExcel</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;?&gt;</span> <span class="n">data</span><span class="o">,</span> <span class="n">String</span> <span class="n">sheetName</span><span class="o">,</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">columns</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span><span class="o">[]</span> <span class="n">fields</span> <span class="o">=</span> <span class="n">columns</span><span class="o">.</span><span class="na">keySet</span><span class="o">().</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
</span><span class='line'>      <span class="n">String</span><span class="o">[]</span> <span class="n">titles</span> <span class="o">=</span> <span class="n">columns</span><span class="o">.</span><span class="na">values</span><span class="o">().</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">getExcel</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">sheetName</span><span class="o">,</span> <span class="n">fields</span><span class="o">,</span> <span class="n">titles</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * Excel导出的实现</span>
</span><span class='line'><span class="cm">  * @param data 数据，可用bean list</span>
</span><span class='line'><span class="cm">  * @param sheetName 导出文档里的标签页名</span>
</span><span class='line'><span class="cm">  * @param fields titles 字段和字段显示名的数组</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">Workbook</span> <span class="nf">getExcel</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;?&gt;</span> <span class="n">data</span><span class="o">,</span> <span class="n">String</span> <span class="n">sheetName</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">fields</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">titles</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Workbook</span> <span class="n">workbook</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HSSFWorkbook</span><span class="o">();</span>
</span><span class='line'>      <span class="c1">//创建所有Cell Style</span>
</span><span class='line'>      <span class="n">createStyles</span><span class="o">(</span><span class="n">workbook</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Sheet</span> <span class="n">sheet</span> <span class="o">=</span> <span class="n">workbook</span><span class="o">.</span><span class="na">createSheet</span><span class="o">(</span><span class="n">sheetName</span><span class="o">);</span>
</span><span class='line'>      <span class="c1">// 创建第一行,为excel表头</span>
</span><span class='line'>      <span class="n">Row</span> <span class="n">row</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="na">createRow</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="c1">// 序号列</span>
</span><span class='line'>      <span class="n">Cell</span> <span class="n">numHeader</span> <span class="o">=</span> <span class="n">row</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">numHeader</span><span class="o">.</span><span class="na">setCellValue</span><span class="o">(</span><span class="k">new</span> <span class="n">HSSFRichTextString</span><span class="o">(</span><span class="s">&quot;序号&quot;</span><span class="o">));</span>
</span><span class='line'>      <span class="n">numHeader</span><span class="o">.</span><span class="na">setCellStyle</span><span class="o">(</span><span class="n">styles</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;header&quot;</span><span class="o">));</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">titles</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">Cell</span> <span class="n">header</span> <span class="o">=</span> <span class="n">row</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>          <span class="n">header</span><span class="o">.</span><span class="na">setCellValue</span><span class="o">(</span><span class="k">new</span> <span class="n">HSSFRichTextString</span><span class="o">(</span><span class="n">titles</span><span class="o">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="o">]));</span>
</span><span class='line'>          <span class="n">header</span><span class="o">.</span><span class="na">setCellStyle</span><span class="o">(</span><span class="n">styles</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;header&quot;</span><span class="o">));</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="c1">// 创建其他各数据行</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(!</span><span class="n">data</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">Object</span> <span class="n">bean</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">j</span><span class="o">);</span>
</span><span class='line'>              <span class="n">Row</span> <span class="n">dataRow</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="na">createRow</span><span class="o">(</span><span class="n">j</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>              <span class="c1">// 序号列</span>
</span><span class='line'>              <span class="n">Cell</span> <span class="n">num</span> <span class="o">=</span> <span class="n">dataRow</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>              <span class="n">num</span><span class="o">.</span><span class="na">setCellValue</span><span class="o">(</span><span class="k">new</span> <span class="n">HSSFRichTextString</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">j</span> <span class="o">+</span> <span class="mi">1</span><span class="o">)));</span>
</span><span class='line'>              <span class="n">num</span><span class="o">.</span><span class="na">setCellStyle</span><span class="o">(</span><span class="n">styles</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;normal&quot;</span><span class="o">));</span>
</span><span class='line'>              <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">k</span> <span class="o">&lt;=</span> <span class="n">fields</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">k</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">Cell</span> <span class="n">cell</span> <span class="o">=</span> <span class="n">dataRow</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="n">k</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">Object</span> <span class="n">value</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>                  <span class="kt">boolean</span> <span class="n">isDate</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>                  <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                      <span class="n">value</span> <span class="o">=</span> <span class="n">PropertyUtils</span><span class="o">.</span><span class="na">getSimpleProperty</span><span class="o">(</span><span class="n">bean</span><span class="o">,</span> <span class="n">fields</span><span class="o">[</span><span class="n">k</span> <span class="o">-</span> <span class="mi">1</span><span class="o">]);</span>
</span><span class='line'>                      <span class="k">if</span> <span class="o">(</span><span class="n">value</span> <span class="k">instanceof</span> <span class="n">Date</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                          <span class="n">value</span> <span class="o">=</span> <span class="n">DateUtil</span><span class="o">.</span><span class="na">formatDate</span><span class="o">((</span><span class="n">Date</span><span class="o">)</span> <span class="n">value</span><span class="o">);</span>
</span><span class='line'>                          <span class="n">isDate</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>                      <span class="o">}</span>
</span><span class='line'>                  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                      <span class="n">logger</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">&quot;Excel导出，获取属性值异常：&quot;</span> <span class="o">+</span> <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>                  <span class="n">HSSFRichTextString</span> <span class="n">cellValue</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HSSFRichTextString</span><span class="o">(</span><span class="n">ObjectUtils</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">value</span><span class="o">));</span>
</span><span class='line'>                  <span class="n">cell</span><span class="o">.</span><span class="na">setCellValue</span><span class="o">(</span><span class="n">cellValue</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">cell</span><span class="o">.</span><span class="na">setCellStyle</span><span class="o">(</span><span class="n">isDate</span> <span class="o">?</span> <span class="n">styles</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;dateCell&quot;</span><span class="o">)</span> <span class="o">:</span> <span class="n">styles</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;normal&quot;</span><span class="o">));</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">titles</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>          <span class="c1">// 自适应宽度</span>
</span><span class='line'>          <span class="n">sheet</span><span class="o">.</span><span class="na">autoSizeColumn</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">workbook</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>标签：<a href="http://wangchaoqun.com/blog/categories/tech">技术</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * excel导出时用到的方法，直接调用</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">setResponseForExcel</span><span class="o">(</span><span class="n">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">setResponseForExcel</span><span class="o">(</span><span class="n">response</span><span class="o">,</span> <span class="n">DEFAULT_EXCEL_FILE_NAME</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * excel导出时用到的方法，直接调用</span>
</span><span class='line'><span class="cm"> * @throws UnsupportedEncodingException</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">setResponseForExcel</span><span class="o">(</span><span class="n">HttpServletResponse</span> <span class="n">response</span><span class="o">,</span> <span class="n">String</span> <span class="n">fileName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">response</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="s">&quot;application/vnd.ms-excel;charset=UTF-8&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>      <span class="c1">// 解决excel文件乱码问题</span>
</span><span class='line'>      <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Content-Disposition&quot;</span><span class="o">,</span> <span class="s">&quot;attachment;filename=&quot;</span>
</span><span class='line'>              <span class="o">+</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">fileName</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="s">&quot;GB2312&quot;</span><span class="o">),</span> <span class="s">&quot;ISO8859-1&quot;</span><span class="o">));</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">UnsupportedEncodingException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">logger</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">&quot;Excel导出，转码异常：&quot;</span> <span class="o">+</span> <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Cache-Control&quot;</span><span class="o">,</span> <span class="s">&quot;must-revalidate, post-check=0, pre-check=0&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Pragma&quot;</span><span class="o">,</span> <span class="s">&quot;public&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="n">response</span><span class="o">.</span><span class="na">setDateHeader</span><span class="o">(</span><span class="s">&quot;Expires&quot;</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">CellStyle</span><span class="o">&gt;</span> <span class="n">createStyles</span><span class="o">(</span><span class="n">Workbook</span> <span class="n">wb</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">styles</span> <span class="o">=</span> <span class="n">Maps</span><span class="o">.</span><span class="na">newHashMap</span><span class="o">();</span>
</span><span class='line'>  <span class="n">DataFormat</span> <span class="n">df</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">createDataFormat</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// --字体设定 --//</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//普通字体</span>
</span><span class='line'>  <span class="n">Font</span> <span class="n">normalFont</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">createFont</span><span class="o">();</span>
</span><span class='line'>  <span class="n">normalFont</span><span class="o">.</span><span class="na">setFontName</span><span class="o">(</span><span class="s">&quot;宋体&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="n">normalFont</span><span class="o">.</span><span class="na">setFontHeightInPoints</span><span class="o">((</span><span class="kt">short</span><span class="o">)</span> <span class="mi">12</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//加粗字体</span>
</span><span class='line'>  <span class="n">Font</span> <span class="n">boldFont</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">createFont</span><span class="o">();</span>
</span><span class='line'>  <span class="n">boldFont</span><span class="o">.</span><span class="na">setFontHeightInPoints</span><span class="o">((</span><span class="kt">short</span><span class="o">)</span> <span class="mi">12</span><span class="o">);</span>
</span><span class='line'>  <span class="n">boldFont</span><span class="o">.</span><span class="na">setBoldweight</span><span class="o">(</span><span class="n">Font</span><span class="o">.</span><span class="na">BOLDWEIGHT_BOLD</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//蓝色加粗字体</span>
</span><span class='line'>  <span class="n">Font</span> <span class="n">blueBoldFont</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">createFont</span><span class="o">();</span>
</span><span class='line'>  <span class="n">blueBoldFont</span><span class="o">.</span><span class="na">setFontHeightInPoints</span><span class="o">((</span><span class="kt">short</span><span class="o">)</span> <span class="mi">12</span><span class="o">);</span>
</span><span class='line'>  <span class="n">blueBoldFont</span><span class="o">.</span><span class="na">setBoldweight</span><span class="o">(</span><span class="n">Font</span><span class="o">.</span><span class="na">BOLDWEIGHT_BOLD</span><span class="o">);</span>
</span><span class='line'>  <span class="n">blueBoldFont</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">IndexedColors</span><span class="o">.</span><span class="na">BLUE</span><span class="o">.</span><span class="na">getIndex</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// --Cell Style设定-- //</span>
</span><span class='line'>  <span class="c1">//普通格式</span>
</span><span class='line'>  <span class="n">CellStyle</span> <span class="n">normalStyle</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">createCellStyle</span><span class="o">();</span>
</span><span class='line'>  <span class="n">normalStyle</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">normalFont</span><span class="o">);</span>
</span><span class='line'>  <span class="n">styles</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;normal&quot;</span><span class="o">,</span> <span class="n">normalStyle</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//标题格式</span>
</span><span class='line'>  <span class="n">CellStyle</span> <span class="n">headerStyle</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">createCellStyle</span><span class="o">();</span>
</span><span class='line'>  <span class="n">headerStyle</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">boldFont</span><span class="o">);</span>
</span><span class='line'>  <span class="c1">// 指定单元格居中对齐</span>
</span><span class='line'>  <span class="n">headerStyle</span><span class="o">.</span><span class="na">setAlignment</span><span class="o">(</span><span class="n">HSSFCellStyle</span><span class="o">.</span><span class="na">ALIGN_CENTER</span><span class="o">);</span>
</span><span class='line'>    <span class="c1">// 指定单元格垂直居中对齐</span>
</span><span class='line'>  <span class="n">headerStyle</span><span class="o">.</span><span class="na">setVerticalAlignment</span><span class="o">(</span><span class="n">HSSFCellStyle</span><span class="o">.</span><span class="na">VERTICAL_CENTER</span><span class="o">);</span>
</span><span class='line'>  <span class="n">styles</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;header&quot;</span><span class="o">,</span> <span class="n">headerStyle</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//日期格式</span>
</span><span class='line'>  <span class="n">CellStyle</span> <span class="n">dateCellStyle</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">createCellStyle</span><span class="o">();</span>
</span><span class='line'>  <span class="n">dateCellStyle</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">normalFont</span><span class="o">);</span>
</span><span class='line'>  <span class="n">dateCellStyle</span><span class="o">.</span><span class="na">setDataFormat</span><span class="o">(</span><span class="n">df</span><span class="o">.</span><span class="na">getFormat</span><span class="o">(</span><span class="s">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="o">));</span>
</span><span class='line'><span class="c1">//       setBorder(dateCellStyle);</span>
</span><span class='line'>  <span class="n">styles</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;dateCell&quot;</span><span class="o">,</span> <span class="n">dateCellStyle</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//数字格式</span>
</span><span class='line'>  <span class="n">CellStyle</span> <span class="n">numberCellStyle</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">createCellStyle</span><span class="o">();</span>
</span><span class='line'>  <span class="n">numberCellStyle</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">normalFont</span><span class="o">);</span>
</span><span class='line'>  <span class="n">numberCellStyle</span><span class="o">.</span><span class="na">setDataFormat</span><span class="o">(</span><span class="n">df</span><span class="o">.</span><span class="na">getFormat</span><span class="o">(</span><span class="s">&quot;#,##0.00&quot;</span><span class="o">));</span>
</span><span class='line'>  <span class="n">setBorder</span><span class="o">(</span><span class="n">numberCellStyle</span><span class="o">);</span>
</span><span class='line'>  <span class="n">styles</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;numberCell&quot;</span><span class="o">,</span> <span class="n">numberCellStyle</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//合计列格式</span>
</span><span class='line'>  <span class="n">CellStyle</span> <span class="n">totalStyle</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">createCellStyle</span><span class="o">();</span>
</span><span class='line'>  <span class="n">totalStyle</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">blueBoldFont</span><span class="o">);</span>
</span><span class='line'>  <span class="n">totalStyle</span><span class="o">.</span><span class="na">setWrapText</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>  <span class="n">totalStyle</span><span class="o">.</span><span class="na">setAlignment</span><span class="o">(</span><span class="n">CellStyle</span><span class="o">.</span><span class="na">ALIGN_RIGHT</span><span class="o">);</span>
</span><span class='line'>  <span class="n">setBorder</span><span class="o">(</span><span class="n">totalStyle</span><span class="o">);</span>
</span><span class='line'>  <span class="n">styles</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;total&quot;</span><span class="o">,</span> <span class="n">totalStyle</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">styles</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">setBorder</span><span class="o">(</span><span class="n">CellStyle</span> <span class="n">style</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="c1">//设置边框</span>
</span><span class='line'>  <span class="n">style</span><span class="o">.</span><span class="na">setBorderRight</span><span class="o">(</span><span class="n">CellStyle</span><span class="o">.</span><span class="na">BORDER_THIN</span><span class="o">);</span>
</span><span class='line'>  <span class="n">style</span><span class="o">.</span><span class="na">setRightBorderColor</span><span class="o">(</span><span class="n">IndexedColors</span><span class="o">.</span><span class="na">BLACK</span><span class="o">.</span><span class="na">getIndex</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">style</span><span class="o">.</span><span class="na">setBorderLeft</span><span class="o">(</span><span class="n">CellStyle</span><span class="o">.</span><span class="na">BORDER_THIN</span><span class="o">);</span>
</span><span class='line'>  <span class="n">style</span><span class="o">.</span><span class="na">setLeftBorderColor</span><span class="o">(</span><span class="n">IndexedColors</span><span class="o">.</span><span class="na">BLACK</span><span class="o">.</span><span class="na">getIndex</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">style</span><span class="o">.</span><span class="na">setBorderTop</span><span class="o">(</span><span class="n">CellStyle</span><span class="o">.</span><span class="na">BORDER_THIN</span><span class="o">);</span>
</span><span class='line'>  <span class="n">style</span><span class="o">.</span><span class="na">setTopBorderColor</span><span class="o">(</span><span class="n">IndexedColors</span><span class="o">.</span><span class="na">BLACK</span><span class="o">.</span><span class="na">getIndex</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">style</span><span class="o">.</span><span class="na">setBorderBottom</span><span class="o">(</span><span class="n">CellStyle</span><span class="o">.</span><span class="na">BORDER_THIN</span><span class="o">);</span>
</span><span class='line'>  <span class="n">style</span><span class="o">.</span><span class="na">setBottomBorderColor</span><span class="o">(</span><span class="n">IndexedColors</span><span class="o">.</span><span class="na">BLACK</span><span class="o">.</span><span class="na">getIndex</span><span class="o">());</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>页面调用  </h2>

<p>在相应页面的toolbar里添加导出按钮，调用js function，例如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">exportData</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'><span class="c1">//       默认导出</span>
</span><span class='line'><span class="c1">//       jsUtil.doDefaultExport(&#39;&lt;%=request.getContextPath()%&gt;/core/operlog/export&#39;, datagrid);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//       支持查询条件的导出</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">inputs</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#searchForm input&quot;</span><span class="p">).</span><span class="nx">clone</span><span class="p">();</span>
</span><span class='line'>  <span class="nx">jsUtil</span><span class="p">.</span><span class="nx">doExport</span><span class="p">(</span><span class="s1">&#39;&lt;%=request.getContextPath()%&gt;/core/operlog/export&#39;</span><span class="p">,</span> <span class="nx">datagrid</span><span class="p">,</span> <span class="nx">inputs</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>jsUtil里的js逻辑：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 提交导出form</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nx">jsUtil</span><span class="p">.</span><span class="nx">submitExportForm</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">form</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">form</span><span class="p">.</span><span class="nx">submit</span><span class="p">();</span>
</span><span class='line'>  <span class="nx">form</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 导出方法，input为其他查询条件</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nx">jsUtil</span><span class="p">.</span><span class="nx">doExport</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">dg</span><span class="p">,</span> <span class="nx">inputs</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">.</span><span class="nx">messager</span><span class="p">.</span><span class="nx">defaults</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">ok</span><span class="o">:</span><span class="s2">&quot;当前页数据&quot;</span><span class="p">,</span> <span class="nx">cancel</span><span class="o">:</span><span class="s2">&quot;所有页数据&quot;</span> <span class="p">};</span>
</span><span class='line'>  <span class="c1">//导出当前页的数据?导出符合条件的所有数据?</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">.</span><span class="nx">messager</span><span class="p">.</span><span class="nx">confirm</span><span class="p">(</span><span class="s1">&#39;导出&#39;</span><span class="p">,</span> <span class="s1">&#39;选择导出查询结果里的：&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">isCurrent</span><span class="p">){</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">form</span> <span class="o">=</span> <span class="nx">jsUtil</span><span class="p">.</span><span class="nx">getDefaultExportForm</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">dg</span><span class="p">,</span> <span class="nx">isCurrent</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">inputs</span> <span class="o">!=</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="c1">// 其他查询条件</span>
</span><span class='line'>          <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">inputs</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">form</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">inputs</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nx">jsUtil</span><span class="p">.</span><span class="nx">submitExportForm</span><span class="p">(</span><span class="nx">form</span><span class="p">);</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">.</span><span class="nx">messager</span><span class="p">.</span><span class="nx">defaults</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">ok</span><span class="o">:</span><span class="s2">&quot;确定&quot;</span><span class="p">,</span> <span class="nx">cancel</span><span class="o">:</span><span class="s2">&quot;取消&quot;</span> <span class="p">};</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 导出方法，无其他附加条件，按后台逻辑导出数据</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nx">jsUtil</span><span class="p">.</span><span class="nx">doDefaultExport</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">dg</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>   <span class="kd">var</span> <span class="nx">form</span> <span class="o">=</span> <span class="nx">jsUtil</span><span class="p">.</span><span class="nx">getDefaultExportForm</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">dg</span><span class="p">);</span>
</span><span class='line'>   <span class="nx">jsUtil</span><span class="p">.</span><span class="nx">submitExportForm</span><span class="p">(</span><span class="nx">form</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 构造导出form，默认提交分页信息，列表字段和字段显示名信息</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nx">jsUtil</span><span class="p">.</span><span class="nx">getDefaultExportForm</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">dg</span><span class="p">,</span> <span class="nx">isCurrent</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">form</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;&lt;form&gt;&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">form</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;style&#39;</span><span class="p">,</span> <span class="s1">&#39;display:none&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">form</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;target&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">form</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;method&#39;</span><span class="p">,</span> <span class="s1">&#39;post&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">form</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;action&#39;</span><span class="p">,</span> <span class="nx">url</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">form</span><span class="p">);</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">defaultInputs</span> <span class="o">=</span> <span class="nx">jsUtil</span><span class="p">.</span><span class="nx">getDefaultInputs</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">dg</span><span class="p">,</span> <span class="nx">isCurrent</span><span class="p">);</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">defaultInputs</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">form</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">defaultInputs</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">form</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 导出form的默认提交参数，包括分页信息，列表字段和字段显示名信息</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nx">jsUtil</span><span class="p">.</span><span class="nx">getDefaultInputs</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">dg</span><span class="p">,</span> <span class="nx">isCurrent</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">inputs</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">page</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;&lt;input&gt;&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">page</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;type&#39;</span><span class="p">,</span> <span class="s1">&#39;hidden&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">page</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;page&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">rows</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;&lt;input&gt;&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">rows</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;type&#39;</span><span class="p">,</span> <span class="s1">&#39;hidden&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">rows</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;rows&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">//导出当前页的数据?导出符合条件的所有数据?</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">isCurrent</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">page</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="nx">dg</span><span class="p">.</span><span class="nx">datagrid</span><span class="p">(</span><span class="s1">&#39;options&#39;</span><span class="p">).</span><span class="nx">pageNumber</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">rows</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="nx">dg</span><span class="p">.</span><span class="nx">datagrid</span><span class="p">(</span><span class="s2">&quot;options&quot;</span><span class="p">).</span><span class="nx">pageSize</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">page</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">rows</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="mi">2147483647</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">sort</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;&lt;input&gt;&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">sort</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;type&#39;</span><span class="p">,</span> <span class="s1">&#39;hidden&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">sort</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;sort&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">sort</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="nx">dg</span><span class="p">.</span><span class="nx">datagrid</span><span class="p">(</span><span class="s1">&#39;options&#39;</span><span class="p">).</span><span class="nx">sortName</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">order</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;&lt;input&gt;&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">order</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;type&#39;</span><span class="p">,</span> <span class="s1">&#39;hidden&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">order</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;order&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">order</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="nx">dg</span><span class="p">.</span><span class="nx">datagrid</span><span class="p">(</span><span class="s1">&#39;options&#39;</span><span class="p">).</span><span class="nx">sortOrder</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">fields</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;&lt;input&gt;&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">fields</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;type&#39;</span><span class="p">,</span> <span class="s1">&#39;hidden&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">fields</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;fields&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">fields</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="nx">jsUtil</span><span class="p">.</span><span class="nx">getFields</span><span class="p">(</span><span class="nx">dg</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">titles</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;&lt;input&gt;&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">titles</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;type&#39;</span><span class="p">,</span> <span class="s1">&#39;hidden&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">titles</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;titles&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">titles</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="nx">jsUtil</span><span class="p">.</span><span class="nx">getTitles</span><span class="p">(</span><span class="nx">dg</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">inputs</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">page</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">inputs</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">rows</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">inputs</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">sort</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">inputs</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">order</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">inputs</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">fields</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">inputs</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">titles</span><span class="p">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">inputs</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 导出form的列表字段</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nx">jsUtil</span><span class="p">.</span><span class="nx">getFields</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">dg</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">columns</span> <span class="o">=</span> <span class="nx">dg</span><span class="p">.</span><span class="nx">datagrid</span><span class="p">(</span><span class="s2">&quot;options&quot;</span><span class="p">).</span><span class="nx">columns</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">json</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">columns</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">columns</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">field</span> <span class="o">=</span> <span class="nx">columns</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">field</span><span class="p">;</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">title</span> <span class="o">=</span> <span class="nx">columns</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">title</span><span class="p">;</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">hidden</span> <span class="o">=</span> <span class="nx">columns</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">hidden</span><span class="p">;</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">hidden</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">json</span> <span class="o">+=</span> <span class="nx">field</span> <span class="o">+</span> <span class="s1">&#39;,&#39;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">json</span> <span class="o">!=</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">json</span> <span class="o">=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nx">json</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">json</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 导出form的列表字段显示名称</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nx">jsUtil</span><span class="p">.</span><span class="nx">getTitles</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">dg</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">columns</span> <span class="o">=</span> <span class="nx">dg</span><span class="p">.</span><span class="nx">datagrid</span><span class="p">(</span><span class="s2">&quot;options&quot;</span><span class="p">).</span><span class="nx">columns</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">json</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">columns</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">columns</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">field</span> <span class="o">=</span> <span class="nx">columns</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">field</span><span class="p">;</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">title</span> <span class="o">=</span> <span class="nx">columns</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">title</span><span class="p">;</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">hidden</span> <span class="o">=</span> <span class="nx">columns</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">hidden</span><span class="p">;</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">hidden</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">json</span> <span class="o">+=</span> <span class="nx">title</span> <span class="o">+</span> <span class="s1">&#39;,&#39;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">json</span> <span class="o">!=</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">json</span> <span class="o">=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nx">json</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">json</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p class='post-footer' style='background:none repeat scroll 0pt 0pt #eee;padding: 5px;margin-top:10px;color:gray;font-size:90%;'>
            &nbsp;原文地址：
            <a href='http://wangchaoqun.com/blog/2013/01/excel-dao-chu-gong-ju-lei.html/'>http://wangchaoqun.com/blog/2013/01/excel-dao-chu-gong-ju-lei.html/</a><br/>
            &nbsp;written by &nbsp;<a href='http://wangchaoqun.com'>wang chaoqun</a> &nbsp;posted at &nbsp;<a href='http://wangchaoqun.com'>http://wangchaoqun.com</a><br/>
            &nbsp;版权声明：自由转载-非商用-非衍生-保持署名 | <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Htmlparser,jsoup和httpclient解析页面并下载]]></title>
    <link href="http://wangchaoqun.com/blog/2012/12/htmlparserhe-httpclientjie-xi-ye-mian-bing-xia-zai.html/"/>
    <updated>2012-12-18T03:05:41+08:00</updated>
    <id>http://wangchaoqun.com/blog/2012/12/htmlparserhe-httpclientjie-xi-ye-mian-bing-xia-zai</id>
    <content type="html"><![CDATA[<p>如果你想抓取某个网页（如新浪、csdn之类）获取最新资讯列表，或者到某个站点下载文件、图片之类，就需要html解析例如htmlparser,jsoup之类的jar包，下载可用httpclient。如果想更高效率可以搞线程池，抓取解析线程和下载线程，类似消费者和生产者模型（此处不涉及，仅演示使用），代码如下：  <!--more--><a href='http://wangchaoqun.com' style='color:#f5f5f5;text-decoration:none;'>wang chaoqun</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="n">Set</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="nf">digLinks</span><span class="o">(</span><span class="n">String</span> <span class="n">address</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">Set</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashSet</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;();</span>
</span><span class='line'>  <span class="n">URL</span> <span class="n">url</span> <span class="o">=</span> <span class="k">new</span> <span class="n">URL</span><span class="o">(</span><span class="n">address</span><span class="o">);</span>
</span><span class='line'>  <span class="n">Parser</span> <span class="n">parser</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Parser</span><span class="o">((</span><span class="n">HttpURLConnection</span><span class="o">)</span> <span class="n">url</span><span class="o">.</span><span class="na">openConnection</span><span class="o">());</span>
</span><span class='line'>  <span class="n">NodeFilter</span> <span class="n">filter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HasAttributeFilter</span><span class="o">(</span><span class="s">&quot;id&quot;</span><span class="o">,</span> <span class="s">&quot;someid&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="n">NodeList</span> <span class="n">nodes</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="na">extractAllNodesThatMatch</span><span class="o">(</span><span class="n">filter</span><span class="o">);</span>
</span><span class='line'>  <span class="n">Node</span> <span class="n">root</span> <span class="o">=</span> <span class="n">nodes</span><span class="o">.</span><span class="na">elementAt</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>  <span class="n">String</span> <span class="n">html</span> <span class="o">=</span> <span class="n">root</span><span class="o">.</span><span class="na">getChildren</span><span class="o">().</span><span class="na">toHtml</span><span class="o">();</span>
</span><span class='line'>  <span class="n">parser</span> <span class="o">=</span> <span class="n">Parser</span><span class="o">.</span><span class="na">createParser</span><span class="o">(</span><span class="n">html</span><span class="o">,</span> <span class="s">&quot;utf-8&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="n">nodes</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="na">extractAllNodesThatMatch</span><span class="o">(</span><span class="k">new</span> <span class="n">TagNameFilter</span><span class="o">(</span><span class="s">&quot;li&quot;</span><span class="o">));</span>
</span><span class='line'>  <span class="n">parser</span> <span class="o">=</span> <span class="n">Parser</span><span class="o">.</span><span class="na">createParser</span><span class="o">(</span><span class="n">html</span><span class="o">,</span> <span class="s">&quot;utf-8&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="n">nodes</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="na">extractAllNodesThatMatch</span><span class="o">(</span><span class="k">new</span> <span class="n">TagNameFilter</span><span class="o">(</span><span class="s">&quot;a&quot;</span><span class="o">));</span>
</span><span class='line'>  <span class="n">add</span><span class="o">(</span><span class="n">result</span><span class="o">,</span> <span class="n">nodes</span><span class="o">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">add</span><span class="o">(</span><span class="n">Set</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">result</span><span class="o">,</span> <span class="n">NodeList</span> <span class="n">nodes</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">nodes</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Node</span> <span class="n">child</span> <span class="o">=</span> <span class="n">nodes</span><span class="o">.</span><span class="na">elementAt</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">child</span> <span class="k">instanceof</span> <span class="n">LinkTag</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">LinkTag</span> <span class="n">linknode</span> <span class="o">=</span> <span class="o">(</span><span class="n">LinkTag</span><span class="o">)</span> <span class="n">child</span><span class="o">;</span>
</span><span class='line'>          <span class="n">String</span> <span class="n">href</span> <span class="o">=</span> <span class="n">linknode</span><span class="o">.</span><span class="na">getLink</span><span class="o">();</span>
</span><span class='line'>          <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">href</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>标签：<a href="http://wangchaoqun.com/blog/categories/java/">java</a></p>

<h2>httpclient 下载  </h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 读出文件中的url，连接下载保存</span>
</span><span class='line'><span class="cm"> * @param file</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">doSave</span><span class="o">(</span><span class="n">String</span> <span class="n">file</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">files</span> <span class="o">=</span> <span class="n">FileUtil</span><span class="o">.</span><span class="na">readLines</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="n">url</span> <span class="o">:</span> <span class="n">files</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">fileName</span> <span class="o">=</span> <span class="n">StringUtils</span><span class="o">.</span><span class="na">substringAfterLast</span><span class="o">(</span><span class="n">url</span><span class="o">,</span> <span class="s">&quot;/&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">download</span><span class="o">(</span><span class="n">url</span><span class="o">,</span> <span class="n">fileName</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">download</span><span class="o">(</span><span class="n">String</span> <span class="n">url</span><span class="o">,</span> <span class="n">String</span> <span class="n">fileName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">OutputStream</span> <span class="n">out</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  <span class="n">InputStream</span> <span class="n">in</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  <span class="n">HttpURLConnection</span> <span class="n">connection</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  <span class="n">URL</span> <span class="n">server</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">server</span> <span class="o">=</span> <span class="k">new</span> <span class="n">URL</span><span class="o">(</span><span class="n">url</span><span class="o">);</span>
</span><span class='line'>      <span class="n">connection</span> <span class="o">=</span> <span class="o">(</span><span class="n">HttpURLConnection</span><span class="o">)</span> <span class="n">server</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
</span><span class='line'>      <span class="n">connection</span><span class="o">.</span><span class="na">connect</span><span class="o">();</span>
</span><span class='line'>      <span class="n">in</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">dir</span> <span class="o">+</span> <span class="n">fileName</span><span class="o">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="n">out</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">read</span><span class="o">();</span>
</span><span class='line'>      <span class="k">while</span> <span class="o">(</span><span class="n">b</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">out</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
</span><span class='line'>          <span class="n">b</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">read</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="n">in</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>      <span class="n">out</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>【更新】使用jsoup和4.3的httpclient（用的fluent的jar）</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">initHttpClient</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">timeoutSeconds</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">poolSize</span> <span class="o">=</span> <span class="mi">20</span><span class="o">;</span>
</span><span class='line'>  <span class="n">RequestConfig</span> <span class="n">config</span> <span class="o">=</span> <span class="n">RequestConfig</span><span class="o">.</span><span class="na">custom</span><span class="o">()</span>
</span><span class='line'>          <span class="o">.</span><span class="na">setSocketTimeout</span><span class="o">(</span><span class="n">timeoutSeconds</span> <span class="o">*</span> <span class="mi">1000</span><span class="o">)</span>
</span><span class='line'>          <span class="o">.</span><span class="na">setConnectTimeout</span><span class="o">(</span><span class="n">timeoutSeconds</span> <span class="o">*</span> <span class="mi">1000</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>
</span><span class='line'>  <span class="n">httpClient</span> <span class="o">=</span> <span class="n">HttpClientBuilder</span><span class="o">.</span><span class="na">create</span><span class="o">().</span><span class="na">setMaxConnTotal</span><span class="o">(</span><span class="n">poolSize</span><span class="o">)</span>
</span><span class='line'>          <span class="o">.</span><span class="na">setMaxConnPerRoute</span><span class="o">(</span><span class="n">poolSize</span><span class="o">).</span><span class="na">setDefaultRequestConfig</span><span class="o">(</span><span class="n">config</span><span class="o">)</span>
</span><span class='line'>          <span class="o">.</span><span class="na">build</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 根据URL获得所有的html信息</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">getContent</span><span class="o">(</span><span class="n">String</span> <span class="n">url</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">String</span> <span class="n">content</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="n">Executor</span> <span class="n">executor</span> <span class="o">=</span> <span class="n">Executor</span><span class="o">.</span><span class="na">newInstance</span><span class="o">(</span><span class="n">httpClient</span><span class="o">);</span>
</span><span class='line'>  <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">HttpResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">executor</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">Request</span><span class="o">.</span><span class="na">Get</span><span class="o">(</span><span class="n">url</span><span class="o">))</span>
</span><span class='line'>              <span class="o">.</span><span class="na">returnResponse</span><span class="o">();</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">status</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getStatusLine</span><span class="o">().</span><span class="na">getStatusCode</span><span class="o">();</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">status</span> <span class="o">&gt;=</span> <span class="n">HttpStatus</span><span class="o">.</span><span class="na">SC_BAD_REQUEST</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">logger</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">&quot;error:&quot;</span> <span class="o">+</span> <span class="n">status</span> <span class="o">+</span> <span class="s">&quot;:&quot;</span> <span class="o">+</span> <span class="n">url</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">HttpEntity</span> <span class="n">entity</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getEntity</span><span class="o">();</span>
</span><span class='line'>          <span class="n">content</span> <span class="o">=</span> <span class="n">EntityUtils</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">entity</span><span class="o">);</span>
</span><span class='line'>          <span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&quot;ok   :&quot;</span> <span class="o">+</span> <span class="n">status</span> <span class="o">+</span> <span class="s">&quot;:&quot;</span> <span class="o">+</span> <span class="n">url</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">logger</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;\n&quot;</span> <span class="o">+</span> <span class="n">url</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">content</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>jsoup获取<a href="http://wangchaoqun.com/">本博客</a>文章标题和链接</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="n">String</span> <span class="n">html</span> <span class="o">=</span> <span class="n">getContent</span><span class="o">(</span><span class="s">&quot;http://wangchaoqun.com/blog/archives/&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="n">html</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">html</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="s">&quot;ISO-8859-1&quot;</span><span class="o">),</span> <span class="s">&quot;UTF-8&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">(</span><span class="n">StringUtils</span><span class="o">.</span><span class="na">isNotBlank</span><span class="o">(</span><span class="n">html</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Document</span> <span class="n">doc</span> <span class="o">=</span> <span class="n">Jsoup</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">html</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Elements</span> <span class="n">hrefs</span> <span class="o">=</span> <span class="n">doc</span><span class="o">.</span><span class="na">select</span><span class="o">(</span><span class="s">&quot;div#blog-archives&gt;article&gt;h1&gt;a&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="n">Element</span> <span class="n">each</span> <span class="o">:</span> <span class="n">hrefs</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">titles</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">each</span><span class="o">.</span><span class="na">text</span><span class="o">());</span>
</span><span class='line'>          <span class="n">links</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">each</span><span class="o">.</span><span class="na">attr</span><span class="o">(</span><span class="s">&quot;href&quot;</span><span class="o">));</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<p class='post-footer' style='background:none repeat scroll 0pt 0pt #eee;padding: 5px;margin-top:10px;color:gray;font-size:90%;'>
            &nbsp;原文地址：
            <a href='http://wangchaoqun.com/blog/2012/12/htmlparserhe-httpclientjie-xi-ye-mian-bing-xia-zai.html/'>http://wangchaoqun.com/blog/2012/12/htmlparserhe-httpclientjie-xi-ye-mian-bing-xia-zai.html/</a><br/>
            &nbsp;written by &nbsp;<a href='http://wangchaoqun.com'>wang chaoqun</a> &nbsp;posted at &nbsp;<a href='http://wangchaoqun.com'>http://wangchaoqun.com</a><br/>
            &nbsp;版权声明：自由转载-非商用-非衍生-保持署名 | <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[转]深入理解浏览器兼容性模式]]></title>
    <link href="http://wangchaoqun.com/blog/2012/11/zhuan-shen-ru-li-jie-liu-lan-qi-jian-rong-xing-mo-shi.html/"/>
    <updated>2012-11-02T01:27:53+08:00</updated>
    <id>http://wangchaoqun.com/blog/2012/11/zhuan-shen-ru-li-jie-liu-lan-qi-jian-rong-xing-mo-shi</id>
    <content type="html"><![CDATA[<p>web开发人员遇到浏览器兼容简直就是噩梦，尤其各种ie内核的浏览器，还有搜狗、360等；这篇文章讲得比较详细，转了<a href="http://www.ituring.com.cn/article/15231" target="_blank">来自图灵社区</a><br/>
正文 &mdash;&mdash;<br/>
关于各种浏览器模式，网上已经有许多文档和资料了，但是很少有能够完全将几个概念阐述清楚的。大部分的资料稍显过时，有些内容可能已经不再适用了。本文中笔者将尽可能将几个概念阐述清楚，并去掉一些过时的内容，仅保留必要的干货。<!--more--><a href='http://wangchaoqun.com' style='color:#f5f5f5;text-decoration:none;'>wang chaoqun</a></p>

<p>想必你一定知道浏览器有个标准（Standards）模式和一个怪异（Quirks）模式，或许你还听说过有个“准标准（Almost Standards）”模式。而当你打开 Internet Explorer 的时候，又看到了什么浏览器模式、文档模式，还有什么兼容性视图等等&hellip;</p>

<p>这些都是什么？啥是浏览器模式，啥是文档模式？标准模式和准标准的模式有什么区别？IE9兼容性视图和真正的IE9有什么区别？什么情况下会触发这些模式，又该怎样才能检测到浏览器当前处于哪种模式中呢？本文将详细为你解答这些疑问。</p>

<h3>三种模式</h3>

<p>首先我们要知道，为什么会有这么多模式。其实这是个历史遗留问题，在浏览器大战时期，网景浏览器（Netscape Navigator）和微软的IE浏览器（Microsoft Internet Explorer）对网页分别有不同的实现方式，那个时候的网页要针对这两种浏览器分别开发不同的版本。而到了 W3C 制定标准之后，这些浏览器就不能继续使用这种页面了，因而会导致大部分现有站点都不能使用。基于这个原因，浏览器才引入两种模式来处理一些遗留的站点。</p>

<p>现在的浏览器排版引擎支持三种模式：怪异（Quirks）模式、准标准（Almost Standards）和标准（Standards）模式。在怪异模式中，排版引擎会模拟 网景4 和 Windows 中的 IE5 的行为；在完全标准的模式中，会尽量执行 HTML 和 CSS 规范所指定的行为；而在准标准模式中，则只包含很少的一部分怪异模式中的行为。</p>

<p>那么所谓标准模式，就一定都“标准”吗？答案当然是否定的，因为各个浏览器厂商实现标准的阶段不同，所以各个浏览器的“标准模式”之间也会有很大的不同。</p>

<p>Firefox、Safari、Chrome、Opera (自 7.5 以后)、 IE8 和 IE9 都有一个准标准模式。那么既然标准模式都不那么标准，准标准的模式肯定就更不标准了。最初的准标准模式只会影响表格中的图像，而后来各个浏览器又或多或少地进行了修改。那么什么情况下会触发准标准模式呢？是的，正如你所想到的，某些 DOCTYPE 会触发准标准模式，例如：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"-//W3C//DTD XHTML 1.0 Transitional//EN"
</span><span class='line'>"-//W3C//DTD XHTML 1.0 Frameset//EN"
</span><span class='line'>"-//W3C//DTD HTML 4.01 Transitional//EN"
</span><span class='line'>"-//W3C//DTD HTML 4.01 Frameset//EN"
</span><span class='line'>"http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd"  </span></code></pre></td></tr></table></div></figure>


<p>一个完整的 DOCTYPE 例子如下：</p>

<p>&lt;!DOCTYPE HTML PUBLIC &ldquo;&ndash;//W3C//DTD HTML 4.01 Transitional//EN&rdquo;</p>

<pre><code>                  "http://www.w3.org/TR/html4/loose.dtd"&gt;
</code></pre>

<p>如果在 Firefox 中插入这种 DOCTYPE，并在页面中插入一个空的 span 标签，那么在 Firebug 中查看元素的布局就会发现不同：</p>

<p>准标准模式中元素的 line-height 被忽略了，元素既没有宽度也没有高度：</p>

<p>Almost Standards</p>

<p>标准模式中元素仍然保留了 line-height，拥有 18px 的高度：</p>

<p>Standards</p>

<p>在 Firefox 浏览器中，使用鼠标右键 &ndash;> 查看页面信息 可以看到当前浏览器运行在何种模式（只能看到“混杂模式”和“标准规范模式”两种表示）：</p>

<p>mozilla-standard-mode</p>

<p>有位大神 Henri Sivonen 曾写过一篇文章叫做 Activating Browser Modes with Doctype，里面包含了一个完整的表格，展示了各种 DOCTYPE 设置将会使浏览器以何种方式渲染。这里还有一篇 秦歌 的译文 《用doctype激活浏览器模式》。</p>

<p>鉴于目前一些最新版本的浏览器已经放弃了准标准模式，所以关于准标准模式的细节这里就不再赘述了，感兴趣的同学可以详细阅读以下资料：</p>

<p>Gecko&rsquo;s &ldquo;Almost Standards&rdquo; Mode</p>

<p>Line Height Calculations in Almost Standards Mode</p>

<p>Images, Tables, and Mysterious Gaps</p>

<p>almost-standards test</p>

<p>DOCTYPE Switches support in Opera Presto 2.10</p>

<p>那么，既然这么多的 DOCTYPE 都会触发非标准的模式，那么如何才能触发标准模式呢？对了！要使用 HTML5 DOCTYPE，即：</p>

<p>&lt;!DOCTYPE html>
注意：如果文档中没有包含 DOCTYPE 或者包含了一个无法识别的 DOCTYPE，则浏览器就会进入怪异模式。</p>

<p>下面简单说一下怪异模式。怪异模式有许多“怪异”的行为，主要是为了兼容那些遗留的古老页面而保留的模式。不同浏览器的怪异模式也不尽相同，它们都有自己的实现方式。怪异模式与标准模式的差异主要体现在 盒模型（box model）、表格单元格高度的处理等。例如 IE 的怪异模式中，元素的 width 包含了 padding 和 border，而标准模式中 padding 和 border 并不属于宽度的一部分。</p>

<p>若想详细了解浏览器在怪异模式下的行为，可以参看下面两篇文章。不过不建议在这上面花太多的精力，这是个历史遗留问题，而且我们也尽量保证新开发的页面不要进入到怪异模式：</p>

<p>Mozilla Quirks Mode Behavior</p>

<p>What happens in Quirks Mode?</p>

<p>Compatability Mode Test</p>

<p><em>小结</em>： 至此我们需要了解，浏览器有三种运行模式，即标准模式、准标准模式和怪异模式，要使用 &lt;!DOCTYPE html> 来正确地触发标准模式。千万不要丢掉 DOCTYPE 声明，因为这会导致浏览器进入怪异模式。</p>

<h3>IE的浏览器模式</h3>

<p>IE8有4种模式：IE5.5怪异模式、IE7标准模式、IE8 准标准模式和IE8标准模式，而IE9有7种模式: IE5.5怪异模式、IE7标准模式、IE8准标准模式、IE8标准模式、IE9准标准模式、IE9标准模式、XML模式。</p>

<p>其中 XML模式 是针对 XML 文档的，这里不打算阐述，细节可以看这篇文章<a href="http://msdn.microsoft.com/en-us/library/cc288325(v=vs.85">Defining Document Compatibility</a>.aspx) 中有详细阐述。</p>

<p>在 IE8 及以后的的 IE 浏览器中，支持 X-UA-Compatible 头，可以通过在服务器端设置 HTTP 头，或者在页面中插入 <meta> 标签来实现：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>HTTP:
</span><span class='line'>Header set X-UA-Compatible "IE=8"
</span><span class='line'>
</span><span class='line'>Meta:
</span><span class='line'>&lt;meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" /&gt;</span></code></pre></td></tr></table></div></figure>


<p>这种方法主要是防止老的页面在较新的浏览器中显示不正常的情况的， 比如上面的代码可以强制 IE8 以上版本的浏览器以IE7的模式进行渲染。</p>

<p>注意，不要在新开发的网页中使用这种技术，这种技术只应该作为新老网页更替过程中的过渡方案。由于目前新开发的网页都是尽量支持最新版本的浏览器的，所以这种技术也会慢慢被淘汰，感兴趣的同学可以详细阅读 微软的这篇文档。</p>

<p><em>小结</em>： 这里我们需要知道有这种方式可以强制浏览器以某种模式运行，但只应作为过渡方案，不应在新开发的网页中使用。</p>

<h3>IE9 兼容性视图 与 IE9 标准视图</h3>

<p>如果你使用的是 IE9，那么按下 F12 键就会出现开发者工具，上面有两个下拉菜单：浏览器模式 和 文档模式。那么什么是浏览器模式？什么又是文档模式？二者有何区别？</p>

<p>浏览器模式用于切换IE针对该网页的默认文档模式、对不同版本浏览器的条件注释解析、以及发送给网站服务器的用户代理（User-Agent）字符串的值。网站可以根据浏览器返回的不同用户代理字符串判断浏览器的版本和及安装的功能，这样就可以根据不同的浏览器返回不同的页面内容了。</p>

<p>文档模式用于指定IE的页面排版引擎（Trident）以哪个版本的方式来解析并渲染网页代码。切换文档模式会导致网页被刷新，但不会更改用户代理字符串中的版本号，也不会从服务器重新下载网页。切换浏览器模式的同时，浏览器也会自动切换到相应的文档模式。</p>

<p>一言以蔽之，浏览器模式会影响服务器端对客户端浏览器版本的判断，对条件注释也有影响；而文档模式会影响IE的排版引擎，对网页渲染会有影响，对 CSS hack 也会产生影响。因此，通过条件注释可以判断浏览器模式，而使用 CSS hack 可以判断文档模式。</p>

<p>如果我们使用一句简单的 JavaScript 语句来查看用户代理（User-Agent）字符串的值，则可以看到 IE9 兼容性视图 与 IE9 的区别：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;script type="text/javascript"&gt;
</span><span class='line'>    alert('UA:'+navigator.userAgent);
</span><span class='line'>&lt;/script&gt;</span></code></pre></td></tr></table></div></figure>


<p>输出结果如下所示，注意其中的 MSIE 版本号已经不同。判断浏览器模式就是判断 User-Agent 中的版本号，即 MSIE 后面的数值：</p>

<p>// IE9
UA:Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; Tablet PC 2.0)</p>

<p>// IE9 兼容性视图
UA:Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; Tablet PC 2.0)
话说 IE9 兼容性视图 是模拟IE7的行为，那么 IE9 兼容性视图 与 IE7 有没有区别呢？肯定是有区别的，即使是 IE9 中的 IE7标准模式，与原生的IE7在渲染上也是有区别的，具体我们暂不去深究。</p>

<p>那么既然 IE9 兼容性视图 的版本号跟 IE7 相同，如何才能判断当前是 IE9 兼容性视图，还是纯正的 IE7 呢？其实很简单，只需要判断浏览器的用户代理（User-Agent）字符串中是否包含 Trident 即可。首先检测 MSIE 的版本号是否为 7.0，然后再判断是否含有 Trident 字串，若包含则为 IE9 兼容性视图，否则则为纯正的 IE7。</p>

<p><em>小结</em>： 至此，你应该了解了什么是浏览器模式、什么是文档模式以及它们之间的区别了，另外还了解了 IE9 兼容性视图 与 IE9 以及 IE7 的区别。</p>

<h3>控制默认的渲染方式</h3>

<p>当 Internet Explorer 9 遇到未包含 X-UA-Compatible 标头的网页时，它将使用 &lt;!DOCTYPE> 指令来确定如何显示该网页。 如果该指令丢失或未指定基于标准的文档类型，则 Internet Explorer 9 将以 IE5 模式（怪异模式）来显示该网页。</p>

<p>如果 &lt;!DOCTYPE> 指令指定了基于标准的文档类型，则 Internet Explorer 9 将以 IE9 模式显示该网页，但出现以下情况时除外：</p>

<p>为该网页启用了兼容性视图。
该网页是在 Intranet 区域中加载的，并且已将 Internet Explorer 9 配置为使用兼容性视图来显示 Intranet 区域中的网页。
已将 Internet Explorer 9 配置为使用兼容性视图来显示所有网站。
已将 Internet Explorer 9 配置为使用兼容性视图列表（其实是个黑名单，其中指定了一组始终使用兼容性视图显示的网站）。
已使用开发人员工具覆盖在该网页中指定的设置。
该网页遇到了页面布局错误，并且已将 Internet Explorer 9 配置为，通过在兼容性视图中重新打开网页来自动从此类错误中恢复。
此外，可以使用下面的注册表项来控制 Internet Explorer 对未包含 X-UA-Compatible 标头的页面的处理方式。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>HKEY_LOCAL_MACHINE (or HKEY_CURRENT_USER)
</span><span class='line'>     SOFTWARE
</span><span class='line'>          Microsoft
</span><span class='line'>               Internet Explorer
</span><span class='line'>                    Main
</span><span class='line'>                         FeatureControl
</span><span class='line'>                              FEATURE_BROWSER_EMULATION
</span><span class='line'>                                   iexplore.exe = (DWORD)  </span></code></pre></td></tr></table></div></figure>


<p>其中 DWORD 值必须等于下列值之一：</p>

<p>值    说明
7000    包含基于标准的 &lt;!DOCTYPE> 指令的页面将以 IE7 模式显示。
8000    包含基于标准的 &lt;!DOCTYPE> 指令的页面以 IE8 模式显示。
8888    页面始终以 IE8 模式显示，而不考虑 &lt;!DOCTYPE> 指令。 （这可绕过前面列出的例外情况。）
关于IE浏览器确定文档模式的整个流程，可以参看这篇文章 How IE8 Determines Document Mode，文中详细阐述了整个流程与内部机制。</p>

<p><em>小结</em>： 仍然坚持使用 &lt;!DOCTYPE html>，可最大程度减小发生错误的几率。</p>

<h3>文档模式的检测</h3>

<p>在 JavaScript 中可以通过 documentMode 来检测文档模式，在 IE6 和 IE7 中是使用 compatMode 来确定文档模式的，这个属性自 IE8 开始已经被 documentMode 所替代。</p>

<p>那么，如果需要兼容 IE6 和 IE7 的话（必须的 &hellip;），则相应的检测代码大致如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>engine = null;
</span><span class='line'>if (window.navigator.appName == "Microsoft Internet Explorer")
</span><span class='line'>{
</span><span class='line'>   // This is an IE browser. What mode is the engine in?
</span><span class='line'>   if (document.documentMode) // IE8 or later
</span><span class='line'>      engine = document.documentMode;
</span><span class='line'>   else // IE 5-7
</span><span class='line'>   {
</span><span class='line'>      engine = 5; // Assume quirks mode unless proven otherwise
</span><span class='line'>      if (document.compatMode)
</span><span class='line'>      {
</span><span class='line'>         if (document.compatMode == "CSS1Compat")
</span><span class='line'>            engine = 7; // standards mode
</span><span class='line'>      }
</span><span class='line'>      // There is no test for IE6 standards mode because that mode
</span><span class='line'>      // was replaced by IE7 standards mode; there is no emulation.
</span><span class='line'>   }
</span><span class='line'>   // the engine variable now contains the document compatibility mode.
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>IE6 和 IE7 中的 compatMode 有两个可能的值“CSS1Compat”和“BackCompat ”，分别对应了 IE6 和 IE7 中的标准模式和怪异模式。上面的代码首先假定是怪异模式，然后再试图推翻假设。这里没有包含“IE6 标准模式”，因为它已经被 IE7标准模式 所替代，没有模拟的情况。</p>

<p>这里要注意，不同的文档模式对 JavaScript 也有一些影响，我们不必去深究不同文档模式对 JavaScript 有何种不同影响，只需要在编码时进行特定的 特性检测 即可。</p>

<p><em>小结</em>： 一般情况下是没必要进行文档模式检测的，对于样式兼容我们可以写 CSS hack，而对于 JavaScript 来说，则更加推荐特性检测，而不是检测浏览器本身。</p>

<h3>浏览器模式与文档模式之间的关系</h3>

<p>浏览器模式可以决定页面默认的文档模式，但文档模式可能会受其他因素影响而改变，如上文所述。如果浏览器模式与文档模式设置不同的话，会不会有什么影响呢？</p>

<p>我们已经知道浏览器模式主要用于标识浏览器本身，原则上不会对页面渲染产生影响。但是我们又知道，浏览器模式可以影响条件注释，所以如果你的页面中有条件注释的话，那么浏览器模式的变化就会影响到页面渲染。</p>

<p>服务器端只能通过浏览器模式所标识的版本来确定客户端浏览器的版本，如果你将浏览器模式标识为IE9，但文档模式选择为IE7标准的话，就可能会有问题。不过这还要看服务器端是否有针对不同浏览器的处理策略，如果服务器端并未对不同浏览器的输出做差异化处理的话，那么这两个模式选项不同就不会有问题。</p>

<p><em>小结</em>： 如果服务器端对不同浏览器的输出做了差异化处理，那么浏览器模式和文档模式不一致就可能产生问题。</p>

<p class='post-footer' style='background:none repeat scroll 0pt 0pt #eee;padding: 5px;margin-top:10px;color:gray;font-size:90%;'>
            &nbsp;原文地址：
            <a href='http://wangchaoqun.com/blog/2012/11/zhuan-shen-ru-li-jie-liu-lan-qi-jian-rong-xing-mo-shi.html/'>http://wangchaoqun.com/blog/2012/11/zhuan-shen-ru-li-jie-liu-lan-qi-jian-rong-xing-mo-shi.html/</a><br/>
            &nbsp;written by &nbsp;<a href='http://wangchaoqun.com'>wang chaoqun</a> &nbsp;posted at &nbsp;<a href='http://wangchaoqun.com'>http://wangchaoqun.com</a><br/>
            &nbsp;版权声明：自由转载-非商用-非衍生-保持署名 | <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[测试Hibernate动态添加实体类]]></title>
    <link href="http://wangchaoqun.com/blog/2012/09/ce-shi-hibernate-dong-tai-tian-jia-wei-pei-zhi-de-shi-ti-lei.html/"/>
    <updated>2012-09-28T07:54:33+08:00</updated>
    <id>http://wangchaoqun.com/blog/2012/09/ce-shi-hibernate-dong-tai-tian-jia-wei-pei-zhi-de-shi-ti-lei</id>
    <content type="html"><![CDATA[<p>大家知道通过hibernate cfg或和spring集成的配置里，可用packagesToScan或mapping*之类声明实体类；但有需求可能要在某个项目中编码式加载实体类（例如某个不常用的或特定用户的实体类，并未事先配置），然后进行增删改查操作。下面代码配合spring test framework做了测试（注：hibernate升级到了4.3.final，与4.2有不同，spring3或4测试通过）：<!--more--><a href='http://wangchaoqun.com' style='color:#f5f5f5;text-decoration:none;'>wang chaoqun</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@RunWith</span><span class="o">(</span><span class="n">SpringJUnit4ClassRunner</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
</span><span class='line'><span class="nd">@ContextConfiguration</span><span class="o">(</span><span class="n">locations</span> <span class="o">=</span> <span class="o">{</span> <span class="s">&quot;/spring-hibernate.xml&quot;</span> <span class="o">})</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ConfigurationTest</span> <span class="kd">extends</span> <span class="n">AbstractJUnit4SpringContextTests</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">session_factory</span> <span class="o">=</span> <span class="s">&quot;sessionFactory&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">// 值得注意: org.springframework.beans.factory.FactoryBean that creates a Hibernate org.hibernate.SessionFactory</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">local_session_factory</span> <span class="o">=</span> <span class="s">&quot;&amp;sessionFactory&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Test</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sessionFactoryAndFactoryBean</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">ClassNotFoundException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">SessionFactory</span> <span class="n">sessionFactory</span> <span class="o">=</span> <span class="o">(</span><span class="n">SessionFactory</span><span class="o">)</span> <span class="n">applicationContext</span><span class="o">.</span><span class="na">getBean</span><span class="o">(</span><span class="n">session_factory</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">ClassMetadata</span><span class="o">&gt;</span> <span class="n">meta</span> <span class="o">=</span> <span class="n">sessionFactory</span><span class="o">.</span><span class="na">getAllClassMetadata</span><span class="o">();</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="n">Entry</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">ClassMetadata</span><span class="o">&gt;</span> <span class="n">each</span> <span class="o">:</span> <span class="n">meta</span><span class="o">.</span><span class="na">entrySet</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">ClassMetadata</span> <span class="n">value</span> <span class="o">=</span> <span class="n">each</span><span class="o">.</span><span class="na">getValue</span><span class="o">();</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;entity name:&quot;</span> <span class="o">+</span> <span class="n">value</span><span class="o">.</span><span class="na">getEntityName</span><span class="o">());</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">LocalSessionFactoryBean</span> <span class="n">sessionFactoryBean</span> <span class="o">=</span> <span class="o">(</span><span class="n">LocalSessionFactoryBean</span><span class="o">)</span> <span class="n">applicationContext</span><span class="o">.</span><span class="na">getBean</span><span class="o">(</span><span class="n">local_session_factory</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">Configuration</span> <span class="n">config</span> <span class="o">=</span> <span class="n">sessionFactoryBean</span><span class="o">.</span><span class="na">getConfiguration</span><span class="o">();</span>
</span><span class='line'>      <span class="n">config</span><span class="o">.</span><span class="na">addAnnotatedClass</span><span class="o">(</span><span class="n">User</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>      <span class="n">ServiceRegistry</span> <span class="n">serviceRegistry</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StandardServiceRegistryBuilder</span><span class="o">().</span><span class="na">applySettings</span><span class="o">(</span><span class="n">config</span><span class="o">.</span><span class="na">getProperties</span><span class="o">()).</span><span class="na">build</span><span class="o">();</span>
</span><span class='line'>      <span class="n">SessionFactory</span> <span class="n">newSessionFactory</span> <span class="o">=</span> <span class="n">config</span><span class="o">.</span><span class="na">buildSessionFactory</span><span class="o">(</span><span class="n">serviceRegistry</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Session</span> <span class="n">session</span> <span class="o">=</span> <span class="n">newSessionFactory</span><span class="o">.</span><span class="na">openSession</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">User</span> <span class="n">user</span> <span class="o">=</span> <span class="k">new</span> <span class="n">User</span><span class="o">();</span>
</span><span class='line'>      <span class="n">user</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">&quot;username&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">session</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="n">user</span><span class="o">);</span>
</span><span class='line'>      <span class="n">session</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">user</span> <span class="o">=</span> <span class="o">(</span><span class="n">User</span><span class="o">)</span> <span class="n">session</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">User</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">user</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>
</span><span class='line'>      <span class="n">session</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;------&quot;</span> <span class="o">+</span> <span class="n">user</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;------&quot;</span> <span class="o">+</span> <span class="n">user</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">Iterator</span><span class="o">&lt;</span><span class="n">Table</span><span class="o">&gt;</span> <span class="n">mappings</span> <span class="o">=</span> <span class="n">config</span><span class="o">.</span><span class="na">getTableMappings</span><span class="o">();</span>
</span><span class='line'>      <span class="k">while</span> <span class="o">(</span><span class="n">mappings</span><span class="o">.</span><span class="na">hasNext</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">Table</span> <span class="n">each</span> <span class="o">=</span> <span class="n">mappings</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;table name:&quot;</span> <span class="o">+</span> <span class="n">each</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p class='post-footer' style='background:none repeat scroll 0pt 0pt #eee;padding: 5px;margin-top:10px;color:gray;font-size:90%;'>
            &nbsp;原文地址：
            <a href='http://wangchaoqun.com/blog/2012/09/ce-shi-hibernate-dong-tai-tian-jia-wei-pei-zhi-de-shi-ti-lei.html/'>http://wangchaoqun.com/blog/2012/09/ce-shi-hibernate-dong-tai-tian-jia-wei-pei-zhi-de-shi-ti-lei.html/</a><br/>
            &nbsp;written by &nbsp;<a href='http://wangchaoqun.com'>wang chaoqun</a> &nbsp;posted at &nbsp;<a href='http://wangchaoqun.com'>http://wangchaoqun.com</a><br/>
            &nbsp;版权声明：自由转载-非商用-非衍生-保持署名 | <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[转]线上应用故障排查]]></title>
    <link href="http://wangchaoqun.com/blog/2012/05/zhuan-xian-shang-ying-yong-gu-zhang-pai-cha.html/"/>
    <updated>2012-05-18T10:05:48+08:00</updated>
    <id>http://wangchaoqun.com/blog/2012/05/zhuan-xian-shang-ying-yong-gu-zhang-pai-cha</id>
    <content type="html"><![CDATA[<p><a href="http://www.blogjava.net/hankchen/archive/2012/05/09/377738.html" target="_blank">来自hankchen</a><br/>
<a href="http://www.blogjava.net/hankchen/archive/2012/05/09/377735.html" target="_blank">线上应用故障排查之一：高CPU占用</a><br/>
<a href="http://www.blogjava.net/hankchen/archive/2012/05/09/377736.html" target="_blank">线上应用故障排查之二：高内存占用</a></p>

<!--more-->


<p><a href='http://wangchaoqun.com' style='color:#f5f5f5;text-decoration:none;'>wang chaoqun</a></p>

<p class='post-footer' style='background:none repeat scroll 0pt 0pt #eee;padding: 5px;margin-top:10px;color:gray;font-size:90%;'>
            &nbsp;原文地址：
            <a href='http://wangchaoqun.com/blog/2012/05/zhuan-xian-shang-ying-yong-gu-zhang-pai-cha.html/'>http://wangchaoqun.com/blog/2012/05/zhuan-xian-shang-ying-yong-gu-zhang-pai-cha.html/</a><br/>
            &nbsp;written by &nbsp;<a href='http://wangchaoqun.com'>wang chaoqun</a> &nbsp;posted at &nbsp;<a href='http://wangchaoqun.com'>http://wangchaoqun.com</a><br/>
            &nbsp;版权声明：自由转载-非商用-非衍生-保持署名 | <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于公司技术管理工作的几点思考]]></title>
    <link href="http://wangchaoqun.com/blog/2011/04/guan-yu-gong-si-ji-zhu-guan-li-gong-zuo-de-ji-dian-si-kao.html/"/>
    <updated>2011-04-14T15:06:42+08:00</updated>
    <id>http://wangchaoqun.com/blog/2011/04/guan-yu-gong-si-ji-zhu-guan-li-gong-zuo-de-ji-dian-si-kao</id>
    <content type="html"><![CDATA[<p>一. 关于文档规范</p>

<p>文档规范化正在形成的过程中，具体标准根据项目大小、要求、进度等不同而不同。开发人员写文档的能力向来是个短板，多看多借鉴国标、成熟的开发过程以及其他公司的文档，明白知道各文档所应涵盖的内容，学会并提高文档书写水平，是文档规范化的前提。在此基础之上，再召开会议讨论制定文档规范化模板，制定公司特色的文档体系才是可行的。<!--more--><a href='http://wangchaoqun.com' style='color:#f5f5f5;text-decoration:none;'>wang chaoqun</a></p>

<p>二.    关于需求理解、分析设计</p>

<p>一般来讲，前期与客户沟通的不充分，调研工作不充分而产生需求理解上的偏差（如果排除人员能力水平、方法上的问题的话）是导致接下来分析设计以及开发工作偏差和反复修改的重要原因，并且有损开发人员的工作热情。因此，我提议重视和做好调研和需求分析工作，并在项目开始阶段召开几次分析会议，项目组成员充分讨论，每次会议都要评分，以使项目组员对项目需求和设计的理解程度达到进行开发的要求。</p>

<p>三.    关于项目产出物的管理</p>

<p>如各类文档、各类资料、可复用模块、产品化软件，需要制定出制度和管理流程，以达到规范化管理。涉及到具体的要求和流程，需要先制定出思路和计划，讨论研究。</p>

<p>四.    关于产品化开发和模块复用封装</p>

<p>就现在来看，公司已经积累了若干项目，其中的功能有可以剥离出来封装服用的，同时这项工作也有难度，它很大程度上需要大家有扎实的开发基础，良好的代码编写习惯，要写出逻辑清晰、方便调用的代码来。我的看法是简单的功能可以封装的先完成，以供日常使用；同时讨论、借鉴、探求产品化思路，制定实施规划。</p>

<p>标签：<a href="http://wangchaoqun.com/blog/categories/zhi-ye/">职业</a></p>

<p>五.    关于项目管理</p>

<p>项目开发过程中经常会出现各种问题，比如在团队建设、人员管理、与客户沟通以及编码开发、测试等各方面，人与人相处，尤其工作当中，难免出现误会争吵，实属正常，对事不对人就好。我所观察，项目开发中最大的矛盾可能是工作量大、时间紧张与开发人员能力、效率不高之间的矛盾了；我们需要可能是较长一段时间继续在项目开发中锻炼和成长；我所担心，无论是技术总监、项目经理、组长还是开发人员，会慢慢成为项目组乃至公司的短板，还是要关注自己，提高自己的能力。</p>

<p>六.    关于技术水平提高</p>

<p>如果最终的需求、产品、网站、系统以及客户给钱都是落在代码上，我们就无法忽略代码的重要性；因为大家每天大部分的时间都在敲代码，如果你珍惜你的时间而不是浪费，你也会去想到底如何才能写出整洁规范的代码，也无法忽略编码水平提高的需要；如果你要修改别人的代码，看到的却像是一地鸡毛，无从下手，影响心情，那你应该想一想你自己的代码是否在别人看也是这样；如何去从源头控制bug数量，提高代码的正确性、健壮性等等，关于代码的很多都是值得我们关注的。我认为代码审查机制是需要的，从规范性着手，从每周或每天的code review开始，改善我们的代码。另外一方面就是购置学习书籍，可以由全体员工积极推荐书目，大家投票决定是否购置，而且不限于技术方面。</p>

<p>七.    关于框架开发</p>

<p>我所计划框架的演进是有一个路线图的，从ibatis+struts，到ssh，到现在ss，以及ssh2或sh等等。实际上，如果项目经理或技术经理一直停留在一个框架上或是从外派公司拿的，只因为他很熟悉，那么势必造成组员技术水平的停滞不前甚至下降。虽然我一直维护框架文档并不时的更新，框架源码去年时候就发布出来，但是很多人没有认真看，遇到问题仍然不知怎样解决。培训时候就学习ssh，现在的开发框架也是ssh，大部分的功能都一样，不客气地讲，不会用的原因就是struts，spring，hibernate基础不牢固。待这几个项目做完，各人对框架应该是很上手加熟悉了，下一步的计划就是在重新开发自己的框架，类似开源项目，每个人都可以开发修改、维护这个框架，当然，前提是代码水平和编码习惯要改善。</p>

<p>另：关于员工职业规划</p>

<p>新员工培训中有职业素养，而对于工作一年和两年以上的员工，职场相关的交流和学习就比较少，如果能让大家成长成一个职业化、专业化、高效能的职业人士会在很大程度上促进公司的发展。</p>

<p>以上七个方面依然是我接下来工作的主要内容，需要按部就班推进执行。</p>

<p>审查年初的工作计划，存在规划粗略、执行的资源如工作时间、人力资源等不足的问题，其中应在接下来的年度继续规划和执行的工作如：<br/>
1、规范开发流程，这在项目管理体系中属于组织过程资产，是一个长期积累，不断发展的过程。<br/>
2、组织技术培训，是因为公司高度重视对人的培养，并为公司发展战略服务，通过帮助员工提升工作绩效和个人能力，推动员工与公司的共同成长。员工不仅可以选择技术、设计、产品、市场等专业技能发展通道，也可以有项目管理的发展通道。这项工作的开展需要管理层的支持。<br/>
3、产品研发的工作无论从技术上还是管理上都不同于普通项目，这方面我们的知识和经验不足，需要一个规划、学习、摸索实践以及积累的过程。</p>

<p>标签：<a href="http://wangchaoqun.com/blog/categories/zhi-ye/">职业</a></p>

<p>关于项目管理，之前项目管理工作中，如果有项目管理知识体系这些理论作为指导，去开展项目工作，问题会少很多，项目工作的效率和效果也会好很多。现在公司项目管理可改进的方面我认为：<br/>
1、客户相关的，涉及到项目范围、变更、沟通等，有效的管理客户是一个值得努力的方向；<br/>
2、人力资源相关，如团队建设和管理等，提高团队绩效、个人能力等方面是我们工作中需要关注和努力的。<br/>
3、成本和质量相关，需要我们在项目开发工作中重视项目工作的成本和项目完成的质量。</p>

<p>新的一年里，公司面临新的机遇和新的挑战，亟需深耕行业，形成自己的业务体系和战略布局，中级管理层人员更要提高业务和管理能力，为公司发展做出贡献。</p>

<p class='post-footer' style='background:none repeat scroll 0pt 0pt #eee;padding: 5px;margin-top:10px;color:gray;font-size:90%;'>
            &nbsp;原文地址：
            <a href='http://wangchaoqun.com/blog/2011/04/guan-yu-gong-si-ji-zhu-guan-li-gong-zuo-de-ji-dian-si-kao.html/'>http://wangchaoqun.com/blog/2011/04/guan-yu-gong-si-ji-zhu-guan-li-gong-zuo-de-ji-dian-si-kao.html/</a><br/>
            &nbsp;written by &nbsp;<a href='http://wangchaoqun.com'>wang chaoqun</a> &nbsp;posted at &nbsp;<a href='http://wangchaoqun.com'>http://wangchaoqun.com</a><br/>
            &nbsp;版权声明：自由转载-非商用-非衍生-保持署名 | <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[多线程Synchronized同步总结]]></title>
    <link href="http://wangchaoqun.com/blog/2011/03/duo-xian-cheng-synchronized-tong-bu-zong-jie.html/"/>
    <updated>2011-03-17T11:03:31+08:00</updated>
    <id>http://wangchaoqun.com/blog/2011/03/duo-xian-cheng-synchronized-tong-bu-zong-jie</id>
    <content type="html"><![CDATA[<p>synchronized 关键字，代表这个方法加锁，相当于不管哪一个线程（例如线程A），运行到这个方法时，都要检查有没有其它线程B（或者C、 D等）正在用这个方法，有的话要等正在使用synchronized方法的线程B（或者C 、D）运行完这个方法后再运行此线程A；没有的话，直接运行。<br/>
它可以用来同步方法，代码块；可以用在方法声明（静态方法、非静态方法），也可以传参；
对象锁需要注意是否会造成一个方法执行，其他方法也要等待的情况（将整个对象都上锁，而不允许其他线程短暂地使用对象中其他同步方法来访问共享资源），所以要注意锁的不同   <!--more--><a href='http://wangchaoqun.com' style='color:#f5f5f5;text-decoration:none;'>wang chaoqun</a></p>

<p>1、同步的静态方法，影响类内</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kd">synchronized</span> <span class="kt">void</span> <span class="nf">method</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="err">等同于</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">method</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">synchronized</span><span class="o">(</span><span class="n">ThisClazz</span><span class="o">.</span><span class="na">class</span><span class="o">){</span>
</span><span class='line'>      <span class="o">...</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="err">或者</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">lock</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">method</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">synchronized</span><span class="o">(</span><span class="n">lock</span><span class="o">){</span>
</span><span class='line'>      <span class="o">...</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>2、同步的非静态方法，影响实例内</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">synchronized</span> <span class="kt">void</span> <span class="nf">method</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="err">等同于</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">method</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">synchronized</span><span class="o">(</span><span class="k">this</span><span class="o">){</span>
</span><span class='line'>      <span class="o">...</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="err">或者</span>
</span><span class='line'><span class="kd">private</span> <span class="n">String</span> <span class="n">lock</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">);</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">method</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">synchronized</span><span class="o">(</span><span class="n">lock</span><span class="o">){</span>
</span><span class='line'>      <span class="o">...</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>标签：<a href="http://wangchaoqun.com/blog/categories/duo-xian-cheng/">多线程</a><br/>
测试示例：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SynThreadTest</span> <span class="kd">extends</span> <span class="n">Thread</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="n">methodName</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">sync1</span> <span class="o">=</span> <span class="s">&quot;111&quot;</span><span class="o">;</span><span class="c1">// 不同于 new String(&quot;&quot;);</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">sync2</span> <span class="o">=</span> <span class="s">&quot;222&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">sync3</span> <span class="o">=</span> <span class="s">&quot;&quot;</span> <span class="o">+</span> <span class="k">new</span> <span class="n">Random</span><span class="o">().</span><span class="na">nextInt</span><span class="o">(</span><span class="mi">1000</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">method</span><span class="o">(</span><span class="n">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>
</span><span class='line'>      <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">synchronized</span> <span class="kt">void</span> <span class="nf">method1</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">method</span><span class="o">(</span><span class="s">&quot;syn非静态的method1方法，实例内非静态syn方法互斥&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">synchronized</span> <span class="kt">void</span> <span class="nf">method2</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">method</span><span class="o">(</span><span class="s">&quot;syn非静态的method2方法，实例内非静态syn方法互斥&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">synchronized</span> <span class="kt">void</span> <span class="nf">method3</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">method</span><span class="o">(</span><span class="s">&quot;syn静态的method3方法，类级别静态syn方法互斥&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">synchronized</span> <span class="kt">void</span> <span class="nf">method4</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">method</span><span class="o">(</span><span class="s">&quot;syn静态的method4方法，类级别静态syn方法互斥&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">method5</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">method</span><span class="o">(</span><span class="s">&quot;---非静态的method5方法，非syn无锁&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">method6</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">method</span><span class="o">(</span><span class="s">&quot;---静态的method6方法，非syn无锁&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">method7</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">synchronized</span> <span class="o">(</span><span class="n">sync2</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">method</span><span class="o">(</span><span class="s">&quot;method7方法，类级别静态相同syn obj互斥&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">method8</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">synchronized</span> <span class="o">(</span><span class="k">this</span> <span class="o">+</span> <span class="s">&quot;123&quot;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">method</span><span class="o">(</span><span class="s">&quot;method8方法，不同实例不同syn obj&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">method9</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">synchronized</span> <span class="o">(</span><span class="n">sync1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">method</span><span class="o">(</span><span class="s">&quot;非静态的method9方法，不同实例相同syn obj&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">method10</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">synchronized</span> <span class="o">(</span><span class="n">sync3</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">method</span><span class="o">(</span><span class="s">&quot;method10方法，不同实例不同syn obj&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">getClass</span><span class="o">().</span><span class="na">getMethod</span><span class="o">(</span><span class="n">methodName</span><span class="o">).</span><span class="na">invoke</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">SynThreadTest</span> <span class="n">t1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SynThreadTest</span><span class="o">();</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="mi">10</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">t1</span><span class="o">.</span><span class="na">methodName</span> <span class="o">=</span> <span class="s">&quot;method&quot;</span> <span class="o">+</span> <span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>          <span class="k">new</span> <span class="nf">Thread</span><span class="o">(</span><span class="n">t1</span><span class="o">).</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>          <span class="n">sleep</span><span class="o">(</span><span class="mi">100</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>
</span><span class='line'>      <span class="n">SynThreadTest</span> <span class="n">t2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SynThreadTest</span><span class="o">();</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="mi">10</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">t2</span><span class="o">.</span><span class="na">methodName</span> <span class="o">=</span> <span class="s">&quot;method&quot;</span> <span class="o">+</span> <span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>          <span class="k">new</span> <span class="nf">Thread</span><span class="o">(</span><span class="n">t2</span><span class="o">).</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>          <span class="n">sleep</span><span class="o">(</span><span class="mi">100</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p class='post-footer' style='background:none repeat scroll 0pt 0pt #eee;padding: 5px;margin-top:10px;color:gray;font-size:90%;'>
            &nbsp;原文地址：
            <a href='http://wangchaoqun.com/blog/2011/03/duo-xian-cheng-synchronized-tong-bu-zong-jie.html/'>http://wangchaoqun.com/blog/2011/03/duo-xian-cheng-synchronized-tong-bu-zong-jie.html/</a><br/>
            &nbsp;written by &nbsp;<a href='http://wangchaoqun.com'>wang chaoqun</a> &nbsp;posted at &nbsp;<a href='http://wangchaoqun.com'>http://wangchaoqun.com</a><br/>
            &nbsp;版权声明：自由转载-非商用-非衍生-保持署名 | <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[常用排序算法的java实现]]></title>
    <link href="http://wangchaoqun.com/blog/2010/08/chang-yong-pai-xu-suan-fa-de-java-shi-xian.html/"/>
    <updated>2010-08-09T13:09:09+08:00</updated>
    <id>http://wangchaoqun.com/blog/2010/08/chang-yong-pai-xu-suan-fa-de-java-shi-xian</id>
    <content type="html"><![CDATA[<p>分类 &ndash; 插入排序：直接插入排序，希尔排序
&ndash; 交换排序：冒泡排序，快速排序
&ndash; 选择排序：简单选择排序，堆排序
&ndash; 归并排序<br/>
时间复杂度：简单排序如插入、冒泡、选择是O(n²)，高级如快速、归并、堆是O(nlgn)<br/>
本类使用枚举存入各算法和接口实现，main方法打印排序后的数组</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 排序算法接口</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">interface</span> <span class="nc">Sort</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p><a href='http://wangchaoqun.com' style='color:#f5f5f5;text-decoration:none;'>wang chaoqun</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 排序算法枚举</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">enum</span> <span class="n">Sorts</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">INSERT</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">new</span> <span class="nf">InsertSort</span><span class="o">().</span><span class="na">sort</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">},</span>
</span><span class='line'>  <span class="n">BUBBLE</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">new</span> <span class="nf">BubbleSort</span><span class="o">().</span><span class="na">sort</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">},</span>
</span><span class='line'>  <span class="n">SELECT</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">new</span> <span class="nf">SelectionSort</span><span class="o">().</span><span class="na">sort</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">},</span>
</span><span class='line'>  <span class="n">SHELL</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">new</span> <span class="nf">ShellSort</span><span class="o">().</span><span class="na">sort</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">},</span>
</span><span class='line'>  <span class="n">QUICK</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">new</span> <span class="nf">QuickSort</span><span class="o">().</span><span class="na">sort</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">},</span>
</span><span class='line'>  <span class="n">MERGE</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">new</span> <span class="nf">MergeSort</span><span class="o">().</span><span class="na">sort</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">},</span>
</span><span class='line'>  <span class="n">HEAP</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">new</span> <span class="nf">HeapSort</span><span class="o">().</span><span class="na">sort</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">};</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">abstract</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>标签：<a href="http://wangchaoqun.com/blog/categories/suan-fa/">算法</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 插入排序算法</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">InsertSort</span> <span class="kd">implements</span> <span class="n">Sort</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span> <span class="n">j</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">data</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">[</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="o">];</span> <span class="n">j</span><span class="o">--)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">j</span><span class="o">,</span> <span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 冒泡排序算法</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">BubbleSort</span> <span class="kd">implements</span> <span class="n">Sort</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span> <span class="n">j</span> <span class="o">&gt;</span> <span class="n">i</span><span class="o">;</span> <span class="n">j</span><span class="o">--)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">data</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">[</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="o">])</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">j</span><span class="o">,</span> <span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 选择排序算法</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">SelectionSort</span> <span class="kd">implements</span> <span class="n">Sort</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>          <span class="kt">int</span> <span class="n">lowIndex</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span>
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span> <span class="n">j</span> <span class="o">&gt;</span> <span class="n">i</span><span class="o">;</span> <span class="n">j</span><span class="o">--)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">data</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">[</span><span class="n">lowIndex</span><span class="o">])</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">lowIndex</span> <span class="o">=</span> <span class="n">j</span><span class="o">;</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">i</span><span class="o">,</span> <span class="n">lowIndex</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 希尔排序算法</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">ShellSort</span> <span class="kd">implements</span> <span class="n">Sort</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="o">;</span> <span class="n">i</span> <span class="o">/=</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">i</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">insertSort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">j</span><span class="o">,</span> <span class="n">i</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="n">insertSort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">void</span> <span class="nf">insertSort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">,</span> <span class="kt">int</span> <span class="n">start</span><span class="o">,</span> <span class="kt">int</span> <span class="n">inc</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">start</span> <span class="o">+</span> <span class="n">inc</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span> <span class="o">+=</span> <span class="n">inc</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span> <span class="n">j</span> <span class="o">&gt;=</span> <span class="n">inc</span> <span class="o">&amp;&amp;</span> <span class="n">data</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">[</span><span class="n">j</span> <span class="o">-</span> <span class="n">inc</span><span class="o">];</span> <span class="n">j</span> <span class="o">-=</span> <span class="n">inc</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">j</span><span class="o">,</span> <span class="n">j</span> <span class="o">-</span> <span class="n">inc</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 快速排序算法</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">QuickSort</span> <span class="kd">implements</span> <span class="n">Sort</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">quickSort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">void</span> <span class="nf">quickSort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">,</span> <span class="kt">int</span> <span class="n">left</span><span class="o">,</span> <span class="kt">int</span> <span class="n">right</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">left</span> <span class="o">&gt;=</span> <span class="n">right</span><span class="o">)</span> <span class="o">{</span> <span class="k">return</span><span class="o">;</span> <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="kt">int</span> <span class="n">pivot</span> <span class="o">=</span> <span class="n">partition</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">left</span><span class="o">,</span> <span class="n">right</span><span class="o">);</span>
</span><span class='line'>      <span class="n">quickSort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">left</span><span class="o">,</span> <span class="n">pivot</span><span class="o">);</span><span class="c1">// 对左半段排序</span>
</span><span class='line'>      <span class="n">quickSort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">pivot</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="n">right</span><span class="o">);</span><span class="c1">// 对右半段排序</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="nf">partition</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">,</span> <span class="kt">int</span> <span class="n">left</span><span class="o">,</span> <span class="kt">int</span> <span class="n">right</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">pivot</span> <span class="o">=</span> <span class="n">data</span><span class="o">[</span><span class="n">left</span><span class="o">];</span>
</span><span class='line'>      <span class="k">while</span> <span class="o">(</span><span class="n">left</span> <span class="o">&lt;</span> <span class="n">right</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">while</span> <span class="o">(</span><span class="n">left</span> <span class="o">&lt;</span> <span class="n">right</span> <span class="o">&amp;&amp;</span> <span class="n">data</span><span class="o">[</span><span class="n">right</span><span class="o">]</span> <span class="o">&gt;</span> <span class="n">pivot</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">right</span><span class="o">--;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">left</span> <span class="o">&lt;</span> <span class="n">right</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">left</span><span class="o">,</span> <span class="n">right</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">while</span> <span class="o">(</span><span class="n">left</span> <span class="o">&lt;</span> <span class="n">right</span> <span class="o">&amp;&amp;</span> <span class="n">data</span><span class="o">[</span><span class="n">left</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">pivot</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">left</span><span class="o">++;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">left</span> <span class="o">&lt;</span> <span class="n">right</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">left</span><span class="o">,</span> <span class="n">right</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">left</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 归并排序算法</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">MergeSort</span> <span class="kd">implements</span> <span class="n">Sort</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kt">int</span><span class="o">[]</span> <span class="n">temp</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
</span><span class='line'>      <span class="n">mergeSort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">temp</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">void</span> <span class="nf">mergeSort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">temp</span><span class="o">,</span> <span class="kt">int</span> <span class="n">left</span><span class="o">,</span> <span class="kt">int</span> <span class="n">right</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">left</span> <span class="o">==</span> <span class="n">right</span><span class="o">)</span> <span class="o">{</span> <span class="k">return</span><span class="o">;</span> <span class="o">}</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">mid</span> <span class="o">=</span> <span class="o">(</span><span class="n">left</span> <span class="o">+</span> <span class="n">right</span><span class="o">)</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span>
</span><span class='line'>      <span class="n">mergeSort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">temp</span><span class="o">,</span> <span class="n">left</span><span class="o">,</span> <span class="n">mid</span><span class="o">);</span>
</span><span class='line'>      <span class="n">mergeSort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">temp</span><span class="o">,</span> <span class="n">mid</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="n">right</span><span class="o">);</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">left</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">right</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">temp</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">copyOf</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">i1</span> <span class="o">=</span> <span class="n">left</span><span class="o">;</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">i2</span> <span class="o">=</span> <span class="n">mid</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">cur</span> <span class="o">=</span> <span class="n">left</span><span class="o">;</span> <span class="n">cur</span> <span class="o">&lt;=</span> <span class="n">right</span><span class="o">;</span> <span class="n">cur</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">i1</span> <span class="o">==</span> <span class="n">mid</span> <span class="o">+</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">data</span><span class="o">[</span><span class="n">cur</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">[</span><span class="n">i2</span><span class="o">++];</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">i2</span> <span class="o">&gt;</span> <span class="n">right</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">data</span><span class="o">[</span><span class="n">cur</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">[</span><span class="n">i1</span><span class="o">++];</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">temp</span><span class="o">[</span><span class="n">i1</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">temp</span><span class="o">[</span><span class="n">i2</span><span class="o">])</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">data</span><span class="o">[</span><span class="n">cur</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">[</span><span class="n">i1</span><span class="o">++];</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">data</span><span class="o">[</span><span class="n">cur</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">[</span><span class="n">i2</span><span class="o">++];</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 堆排序算法</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">HeapSort</span> <span class="kd">implements</span> <span class="n">Sort</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">MaxHeap</span> <span class="n">h</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MaxHeap</span><span class="o">();</span>
</span><span class='line'>      <span class="n">h</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">:</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">h</span><span class="o">.</span><span class="na">remove</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">arraycopy</span><span class="o">(</span><span class="n">h</span><span class="o">.</span><span class="na">queue</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="n">data</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">MaxHeap</span> <span class="o">{</span>
</span><span class='line'>      <span class="kt">void</span> <span class="nf">init</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">this</span><span class="o">.</span><span class="na">queue</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">data</span><span class="o">.</span><span class="na">length</span> <span class="o">+</span> <span class="mi">1</span><span class="o">];</span>
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">element</span> <span class="o">:</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">queue</span><span class="o">[++</span><span class="n">size</span><span class="o">]</span> <span class="o">=</span> <span class="n">element</span><span class="o">;</span>
</span><span class='line'>              <span class="n">fixUp</span><span class="o">(</span><span class="n">size</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="kd">private</span> <span class="kt">int</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>      <span class="kd">private</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">queue</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">remove</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">queue</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="n">size</span><span class="o">--);</span>
</span><span class='line'>          <span class="n">fixDown</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// fixdown</span>
</span><span class='line'>      <span class="kd">private</span> <span class="kt">void</span> <span class="nf">fixDown</span><span class="o">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="kt">int</span> <span class="n">j</span><span class="o">;</span>
</span><span class='line'>          <span class="k">while</span> <span class="o">((</span><span class="n">j</span> <span class="o">=</span> <span class="n">k</span> <span class="o">&lt;&lt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">&lt;=</span> <span class="n">size</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">j</span> <span class="o">&lt;</span> <span class="n">size</span> <span class="o">&amp;&amp;</span> <span class="n">queue</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">queue</span><span class="o">[</span><span class="n">j</span> <span class="o">+</span> <span class="mi">1</span><span class="o">])</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">j</span><span class="o">++;</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">queue</span><span class="o">[</span><span class="n">k</span><span class="o">]</span> <span class="o">&gt;</span> <span class="n">queue</span><span class="o">[</span><span class="n">j</span><span class="o">])</span> <span class="o">{</span> <span class="c1">// 不用交换</span>
</span><span class='line'>                  <span class="k">break</span><span class="o">;</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">queue</span><span class="o">,</span> <span class="n">j</span><span class="o">,</span> <span class="n">k</span><span class="o">);</span>
</span><span class='line'>              <span class="n">k</span> <span class="o">=</span> <span class="n">j</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="kd">private</span> <span class="kt">void</span> <span class="nf">fixUp</span><span class="o">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">while</span> <span class="o">(</span><span class="n">k</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">k</span> <span class="o">&gt;&gt;</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">queue</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">&gt;</span> <span class="n">queue</span><span class="o">[</span><span class="n">k</span><span class="o">])</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">break</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="n">SortUtil</span><span class="o">.</span><span class="na">swap</span><span class="o">(</span><span class="n">queue</span><span class="o">,</span> <span class="n">j</span><span class="o">,</span> <span class="n">k</span><span class="o">);</span>
</span><span class='line'>          <span class="n">k</span> <span class="o">=</span> <span class="n">j</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 排序算法工具类</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">SortUtil</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">swap</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">,</span> <span class="kt">int</span> <span class="n">i</span><span class="o">,</span> <span class="kt">int</span> <span class="n">j</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">data</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
</span><span class='line'>      <span class="n">data</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">data</span><span class="o">[</span><span class="n">j</span><span class="o">];</span>
</span><span class='line'>      <span class="n">data</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">print</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">each</span> <span class="o">:</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">each</span> <span class="o">+</span> <span class="s">&quot; &quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 冒择入希快归堆：常用排序算法</span>
</span><span class='line'><span class="cm"> * @author wangchaoqun</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SortTest</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kt">int</span><span class="o">[]</span> <span class="n">origin</span> <span class="o">=</span> <span class="o">{</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">17</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">21</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">33</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">53</span> <span class="o">};</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">&quot;origin:  &quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">SortUtil</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">origin</span><span class="o">);</span>
</span><span class='line'>      <span class="c1">// 执行排序算法</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="n">Sorts</span> <span class="n">each</span> <span class="o">:</span> <span class="n">Sorts</span><span class="o">.</span><span class="na">values</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">each</span><span class="o">.</span><span class="na">name</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;:  &quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="kt">int</span><span class="o">[]</span> <span class="n">data</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">copyOf</span><span class="o">(</span><span class="n">origin</span><span class="o">,</span> <span class="n">origin</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
</span><span class='line'>          <span class="n">each</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>          <span class="n">SortUtil</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="c1">// api使用经过调优的快速排序</span>
</span><span class='line'>      <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">origin</span><span class="o">);</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">&quot;jdkApi:  &quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">SortUtil</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">origin</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p class='post-footer' style='background:none repeat scroll 0pt 0pt #eee;padding: 5px;margin-top:10px;color:gray;font-size:90%;'>
            &nbsp;原文地址：
            <a href='http://wangchaoqun.com/blog/2010/08/chang-yong-pai-xu-suan-fa-de-java-shi-xian.html/'>http://wangchaoqun.com/blog/2010/08/chang-yong-pai-xu-suan-fa-de-java-shi-xian.html/</a><br/>
            &nbsp;written by &nbsp;<a href='http://wangchaoqun.com'>wang chaoqun</a> &nbsp;posted at &nbsp;<a href='http://wangchaoqun.com'>http://wangchaoqun.com</a><br/>
            &nbsp;版权声明：自由转载-非商用-非衍生-保持署名 | <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[转]大型高性能网站的十项规则]]></title>
    <link href="http://wangchaoqun.com/blog/2010/04/zhuan-da-xing-gao-xing-neng-wang-zhan-de-shi-xiang-gui-ze.html/"/>
    <updated>2010-04-19T09:56:42+08:00</updated>
    <id>http://wangchaoqun.com/blog/2010/04/zhuan-da-xing-gao-xing-neng-wang-zhan-de-shi-xiang-gui-ze</id>
    <content type="html"><![CDATA[<p>[转]<a href="http://www.programmer.com.cn/2854/">作者：Steve Mushero 译者：侯伯薇</a><br/>
在我们公司ChinaNetCloud，见过多种不同类型的网站和系统，有好也有差。其中有些系统拥有良好的服务器/网络架构，并且进行了合理的调整和监控 ；然而一般的系统都会有安全和性能上的问题，不能良好运行，也无法变得更流行。</p>

<p>在中国，开源的LAMP栈是最流行的网络架构，它使用PHP开发，运行在Apache服务器上，以MySQL作为数据库，所有这些都运行在Linux上。它是个可靠的平台，运行良好，是现在全球最流行的Internet系统架构。然而，我们很难对其规模进行正确的扩展并保持安全性，因为每个应用层都有其自身的问题、缺陷和最佳实践。我们的工作就是帮助企业用最低的操作成本来创建并运行高性能的、可伸缩的、安全的系统，因此对于这类问题我们有很丰富的经验。<!--more--><a href='http://wangchaoqun.com' style='color:#f5f5f5;text-decoration:none;'>wang chaoqun</a></p>

<p>当前的实际情况是，很多网站都是由开发人员快速而廉价地创建，通常没有任何IT人员或者经理，只是由程序员来管理系统。造成的结果是，虽然花费很低的成本网站就可以开始运行，但是当拥有大量用户、需要扩展规模的时候，通常就会面临真正的问题。毕竟，中国拥有三亿八千万的Internet用户，如果其中的0.01%访问这个站点，就很容易引发25万~50万的页面访问量。这些问题在各个级别上都会产生，下面总结的规则是对最一般的问题进行概述，并且说明为什么这些规则如此重要，以及最好采用什么方法来修正它们。遵循这些建议的站点会提高它的可伸缩性、安全性以及操作上的稳定性。</p>

<p><img style="text-align:center;" title="大型网站的十项规则" src="http://www.programmer.com.cn/wp-content/uploads/2010/04/大型网站的十项规则.gif"></p>

<h2>1. 使用合适的会话管理  </h2>

<p>第一个想到的扩展系统的方法就是添加更多硬件。例如，使用两台服务器而不是一台。这听着合理，但会产生潜在问题：会话管理。这对Java程序来说是很严重的问题，在PHP中也会产生可延展性问题，对于数据库的负载尤其如此。</p>

<p>会话被定义为单独的最终用户登录或者连接一段时间，其中通常会包含多个TCP/IP的HTTP连接、几个Web页面，通常还包括几十个甚至上百个页面元素，如框架、菜单、Ajax更新等。所有这些HTTP请求都需要知道用户是谁，才能满足安全的要求，并向用户传送适当的内容，因为这些都是会话的组成部分。通常每个会话都会包括相互关联的会话数据，如用户名、用户ID、历史、购物车、统计资料等等信息。</p>

<p>问题在于，在有两台Web服务器和多个HTTP连接的情况下，用户流量会在两台服务器之间分配和移动，服务器很难知道用户是谁，并对所有数据进行跟踪，因为每个页面或者页面的组成部分都可能来自不同的服务器。在PHP中，通常是这样解决的，在第一次连接或登录的时候就创建一个会话ID并将其放在Cookie中，然后这个Cookie会和每个HTTP请求一起发送。</p>

<p>这样做带来一个问题，接下来每段PHP脚本都需要基于ID来查找会话数据。由于PHP无法在执行过程之间保持状态（这与Java不同），这个会话数据需要存储在某个地方，通常是在数据库中。但是，如果复杂的页面需要在每个页面载入过程中对其进行十次查找（这是经常要做的），那就意味着每个页面都要执行10次SQL查询，这会导致数据库上很大的负载。</p>

<p>在前面所举的中国Internet用户0.01%的例子中，可能很容易在每秒内仅仅为了管理会话就生成上百个查询。解决方法是一直使用位于Cookie中的会话ID，并且使用像Memcached之类的服务来缓存会话数据以获得高性能。</p>

<p>还要注意其中存在安全性的问题，因为黑客可以伪造另一个用户的会话ID，这是很容易找到或看到的，特别是在公用的Wi-Fi中。解决方法是对会话ID进行恰当的加密或者签名，并将其与时间区间、IP地址以及其他关键信息 像浏览器或者其他细节相绑定。在Internet上有很多不错的关于良好的会话管理的例子，你可以根据需要找到最适合的。</p>

<h2>2. 总是要考虑安全性</h2>

<p>尽管编写像防止SQL注入和登录安全之类的代码涉及很多安全问题，但不幸的是，几乎没有人考虑过安全性，而那些考虑到的人也没有对其进行很好地理解。而本文要关注的是操作性的系统安全。对于这类安全，我们的焦点集中在三个安全领域：防火墙、运行的用户以及文件访问权限。</p>

<p>除了配置专门的硬件防火墙（像Cisco的ASA）之外，所有服务器都还应该运行像Iptables之类的防火墙，它会保护服务器免受其他威胁和攻击。这些威胁和攻击可能来自公共的Internet、其他服务器或本地服务器，也包括使用VPN或者SSH通道的开发和操作人员。我们仅对指定的IP开放确实需要的端口。Iptables可能会很复杂，但是有很多不错的模板，我们通常可以使用它们来帮助客户创建Iptables。例如，默认的RedHat或者CentOS防火墙的配置说明只有10行，显然并不实用。我们最佳实践的Iptables配置大概有5页，这其中包含了Linux所能提供的最高级的安全防范。</p>

<p>所有公用的服务，都应该运行在专门的用户下，如Apache。切记永远都不要使用Root用户运行，因为这会让任何闯入到Apache的用户接管整个服务器。如果Apache只是运行在Apache用户下或者运行在Nobody下，那么闯入Apache就不是一件容易的事情了。</p>

<p>Web服务器运行或者服务的文件（像.php和.html文件）对于Web服务器的用户应该是不可写的。这意味着Apache或者Nginx用户不应该拥有Web目录的写权限。有很多方法都可以做到这一点，而最简单的就是将这些文件为其他用户所有，然后让Apache/Nginx等用户归属于能够使用640权限读取文件的组中。这会防范几乎所有的黑客和针对页面的攻击。</p>

<p>此外，永远不要使用Ftp来上传文件，特别是在公用的Wi-Fi环境中，因为在其中黑客很容易盗取用户名和密码。取而代之的是使用Sftp会更加安全。另外，每个雇员都应该拥有自己的用户ID和随机密码。</p>

<h2>3. 使用标准的路径和安装配置</h2>

<p>一个令人讨厌的部署问题是，开发者很少考虑他们的软件会被部署到生产Web服务器的什么位置，以及如何部署。我们看到过许多大型的系统将它们的PHP代码部署在/home/xiaofeng或者/web/code路径下。事实上，这两个路径都是非常不标准的，并且会带来操作和安全性的问题。当这些系统从开发环境转移到测试环境再到生产环境中时，因为每个安装配置都是非标准的，所以经常会出现问题，这时就需要开发者调整才能够正常工作。</p>

<p>你应该总是使用标准的安装包和二进制文件来安装像Apache之类的服务器。不要从源代码编译或者安装Tarball，因为这会导致长期稳定性和管理上的问题，另外在服务器上安装多个不同的版本也会造成混淆。</p>

<p>Web 站点应该总是在指定的平台和Linux发布的标准路径下进行测试和部署 ，像 RedHat 或者CentOS下的/var/www/html路径。这有助于对系统进行有效的权限管理、备份、配置、监控以及其他操作。</p>

<p>Web服务器的日志应该存放在/var/logs或者/var/logs/app_name下，而不应该位于主代码区域。这样做的原因不仅仅是因为这些标准的路径很重要，更应该关注的是，恰当地配置服务器会将/var配置为分离的文件系统。如果应用程序突然写入了大量日志并占用所有磁盘空间，由于我们做了以上的配置就不会导致系统崩溃，或者其他严重的问题。如果日志位于其他位置，就可能会产生问题。</p>

<h2>4. 总是使用日志</h2>

<p>在Web系统中做多少日志都不为过。所有系统都应该将重要的数据写入到日志中，不管是它们自己的日志还是系统的Syslog。Cron的Job以及其他Shell脚本或者C语言的程序，对日志都有相应标准以及简单的函数。在Shell脚本中，只需要使用 Logger命令就可以实现日志的写入。在脚本启动/停止、重要的脚本执行以及实时数据产生的情况下都要执行写入日志操作。这样出现问题的时候，查看主要的系统日志就可以很容易地看到发生了什么。</p>

<p>大型系统经常会使用专门的工具如Local5来记录日志，并配置Syslog或者Syslog-ng来将其存放在单独的文件中，这样会更容易使用。需要注意的是，Syslog工具和Logger（以及任何Syslog调用）默认优先使用user.notice，如有必要，你可以对其进行调整。</p>

<p>一个好的系统会对程序进行配置，用来打开或者关闭日志，并可以选择在每模块或者功能的级别上应用不同级别的日志。这使得我们可以记录非常详细和强大的日志，用来分析和调试在生产操作中所发生的问题。</p>

<h2>5. 使用良好的数据库设计和SQL</h2>

<p>在任何系统中，数据库通常是最大的性能瓶颈。而影响数据库性能的最大两个问题是数据库设计和SQL代码质量。很多系统都拥有良好的或者至少是可用的数据库设计，但由于没有经过适当的性能测试，SQL代码质量通常都会很差。这样的SQL代码在开发环境中可能运行很快，因为其中只有小数据集和最小的负载。但是当成千上万的用户同时读取数据库中上百万条记录的时候，它就很可能会崩溃。</p>

<p>不幸的是，这些问题一开始并不明显，直到系统增大、突然开始崩溃的时候才会显现出来。在增大的过程中，数据库系统看起来运行得很快（因为数据都位于内存中，而且很少有并发的查询），并且对用户的响应也很快，但实际上它的内部运行效率很低。这并不重要，我们关注的是在系统增大并遇到性能问题之前找到这些问题并加以解决。</p>

<p>关于这个问题有很多不错的书和站点进行了解析，其中的关键工具包括慢查询日志、INNODB状态系统，以及描述当前性能的MySQL统计信息。我们见到过很多系统每秒会读取500,000条数据，这是出现SQL问题的明显预兆，但公司往往对其一无所知直到服务器开始崩溃。</p>

<p>MySQL系统应该对所有数据使用INNODB存储引擎，因为INNODB与之前的MyISAM相比，运行得更快、更稳定，并且管理性能和备份工作也更加容易和快捷。在主配置文件中，INNODB应该被设置为默认的数据库引擎，并且系统应该不时地进行检查，看是否意外创建了MyISAM的表。</p>

<h2>6. 总要拥有良好的DB配置和备份</h2>

<p>很多公司都没有良好的备份机制，也不知道如何恰当地完成这项工作。MySQL的Dump是不够的，因为最好的备份方法是使用LVM快照和INNODB对系统进行热备份，从而得到超快的速度和超高的可靠性。</p>

<p>另外，在将所有备份文件从服务器上转移出来之前要进行压缩和加密。另外还要确保拥有设计合理的MySQL配置。MySQL默认安装使用说明中只有5~10行关于配置的说明，这根本不适合开发使用。而我们提供给客户的最佳实践文档足足有10页那么长。文档中大约有100种有用的关于安全、性能和稳定性问题的设定，包括防止数据败坏，其中很多设定都是非常重要的。</p>

<h2>7. 使用读/写数据库分离</h2>

<p>随着系统变得越来越庞大，特别是当它们拥有很差的SQL时，一台数据库服务器通常不足以处理负载。但是多个数据库意味着重复，除非你对数据进行了分离。更一般地，这意味着建立主/从副本系统，其中程序会对主库编写所有的Update、Insert和Delete变更语句，而所有Select的数据都读取自从数据库（或者多个从数据库）。</p>

<p>尽管概念上很简单，但是想要合理、精确地实现并不容易，这可能需要大量的代码工作。因此，即便在开始时使用同一台数据库服务器，也要尽早计划在PHP中使用分离的DB连接来进行读写操作。如果正确地完成该项工作，那么系统就可以扩展到2台、3台甚至12台服务器，并具备高可用性和稳定性。</p>

<h2>8. 使用类似Memcached之类的数据库缓存</h2>

<p>即便有了好的数据库设计、SQL和读写分离，大型的系统仍然需要更快的性能，特别是对会话状态、好友列表以及BBS文字之类的东西。为了达到这个目的，我们可以使用像MemCached之类的数据缓存，它是一个高性能的简单数据缓存，已经被所有最大型的站点使用。但是要小心的是，不要100%依赖于一台Memcache服务器来提高性能，因为如果那台服务器崩溃了，就会破坏整个系统的性能。在这种情况下，应该使用2~3台Memcache服务器形成簇集架构，并且有选择地包含一个缓存准备过程，如果缓存服务器重启，需要重新载入数据，它能够快速地载入缓存。</p>

<h2>9. 构建测试和开发环境</h2>

<p>很多公司只有开发者的桌面系统和他们的生产服务器。当系统变得越来越大、越来越复杂时，测试和管理代码就会导致严重的问题。最佳的实践是拥有两个测试系统，一个用于开发者的代码和功能的整合测试，另一个要与生产环境完全一致，从而更容易向生产环境平滑地过渡。幸运的是，现在使用云计算（或者私有云）可以轻松达到这一点。一个5~10台服务器的生产环境，可以很容易地在办公室或者IDC中使用一台服务器来复制，从而用于测试，而这台服务器我们可以用于多个客户的项目。</p>

<h2>10. 使用版本控制</h2>

<p>最后，要对一切使用版本控制，包括测试和生产环境的部署。很多开发者都使用SVN或者类似的方法。在理想状态下，这些方法可以被用于所有代码、脚本、HTML、图片、配置、文档和测试。版本控制应该是代码转移到测试环境的必经之路，而不是简单地复制或者使用tar文件，因为这二者都是不可靠的。开发者应该将所有一切都签入，打上标签，然后将它们签出到测试系统。如果所有都没问题，那么它们会将该版本签出到生产环境。</p>

<h2>总结</h2>

<p>不管是在开发还是在运营过程中，创建可靠的高性能Web系统都有很多应该注意的事项。本文试图从可操作性和可靠性的角度讨论最重要的几点。当你构建和管理站点的时候，请不要忘了这些重要的问题。遵循这些规则会有助于确保系统长久、良好地运行。</p>

<p>作者简介：
Steve Mushero，ChinaNetCloud公司联合创始人、CEO兼CTO，拥有全球20多年的技术管理经验。曾担任土豆网、Intermind和Advanced Management Systems等多家企业CTO<br/>
译者简介：<br/>
侯伯薇，生于凤城，学在春城，做过国内和对日项目，现在大连某保险公司工作。乐于钻研技术，同时注重业务知识，勤于思考，愿意与人交流和分享。<br/>
（本文来自《程序员》杂志2010年4月刊）</p>

<p class='post-footer' style='background:none repeat scroll 0pt 0pt #eee;padding: 5px;margin-top:10px;color:gray;font-size:90%;'>
            &nbsp;原文地址：
            <a href='http://wangchaoqun.com/blog/2010/04/zhuan-da-xing-gao-xing-neng-wang-zhan-de-shi-xiang-gui-ze.html/'>http://wangchaoqun.com/blog/2010/04/zhuan-da-xing-gao-xing-neng-wang-zhan-de-shi-xiang-gui-ze.html/</a><br/>
            &nbsp;written by &nbsp;<a href='http://wangchaoqun.com'>wang chaoqun</a> &nbsp;posted at &nbsp;<a href='http://wangchaoqun.com'>http://wangchaoqun.com</a><br/>
            &nbsp;版权声明：自由转载-非商用-非衍生-保持署名 | <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
</feed>
